SET NAMES ISO8859_1;

CONNECT '192.168.1.2:/var/db/fbird/database.fdb' USER 'SYSDBA';



/* Domains definitions */

CREATE DOMAIN ANT_OR_VEN AS CHAR (1) CHARACTER SET ISO8859_1
NOT NULL
CHECK (VALUE = 'A' OR VALUE = 'V');

CREATE DOMAIN BOOLEANO AS SMALLINT
CHECK (VALUE = -1 OR VALUE = 1 OR VALUE = 0);

CREATE DOMAIN CAPTACION AS CHAR (7) CHARACTER SET ISO8859_1
NOT NULL;

CREATE DOMAIN FIJ_VAR AS CHAR (1) CHARACTER SET ISO8859_1
NOT NULL
CHECK (VALUE = 'F' OR VALUE = 'V');

CREATE DOMAIN NEW_DOMAIN AS DATE;

CREATE DOMAIN NUMERICO AS NUMERIC (18, 3)
DEFAULT 0
NOT NULL;

CREATE DOMAIN PLAZA AS CHAR (1) CHARACTER SET ISO8859_1
CHECK (VALUE = 'L' OR VALUE = 'O');

CREATE DOMAIN TIPOID AS CHAR (2) CHARACTER SET ISO8859_1
CHECK (VALUE = '00' OR (VALUE > '0' AND VALUE <'99') OR VALUE = '99' OR VALUE IS NULL);

CREATE DOMAIN TIPOS AS SMALLINT
NOT NULL
CHECK (VALUE = 00 OR ( VALUE > 00 AND VALUE < 99) OR VALUE = 99);

CREATE DOMAIN TIPOS3 AS INTEGER
CHECK (VALUE = 000 OR ( VALUE > 000 AND VALUE < 999 ) OR VALUE = 999);

CREATE DOMAIN TIPOSCIIU AS INTEGER
NOT NULL
CHECK (VALUE = 0000 OR ( VALUE > 0000 AND VALUE < 9999) OR VALUE = 9999);

CREATE DOMAIN TIPOSEST AS CHAR (1) CHARACTER SET ISO8859_1
CHECK (VALUE= 'N' OR VALUE='C' OR VALUE='O');

CREATE DOMAIN TIPO_CAPTACION AS INTEGER
NOT NULL;



/* Generators definitions */

CREATE GENERATOR "GEN_""col$tasafijas""_ID" ;
CREATE GENERATOR IBE$REPORT_ID_GEN ;
CREATE GENERATOR REPL_GENERATOR ;
CREATE GENERATOR "gen$abogados_ID_ABOGADO_GEN" ;


/* Tables definitions */

CREATE TABLE "Extracto38293.4055229977" (
    FECHA DATE,
    NO_COMP INTEGER,
    CUOTA INTEGER,
    CAPITAL CHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TASA DOUBLE PRECISION,
    INTERES CHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SALDO CHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA_VENC CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CAPITAL_VENC CHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    INTERES_PAGO_HASTA DATE,
    CAPITAL_PAGO_HASTA DATE);

CREATE TABLE IBE$PARAMS_HISTORY (
    IBE$PH_PROCEDURE_NAME VARCHAR (31) CHARACTER SET UNICODE_FSS NOT NULL COLLATE UNICODE_FSS,
    IBE$PH_PARAMS BLOB sub_type 0 segment size 80);

CREATE TABLE IBE$REPORTS (
    IBE$REPORT_ID INTEGER NOT NULL,
    IBE$REPORT_PARENT_ID INTEGER NOT NULL,
    IBE$REPORT_NAME VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    IBE$REPORT_SOURCE BLOB sub_type 30 segment size 100,
    IBE$REPORT_RIGHTS BLOB sub_type 30 segment size 100,
    IBE$REPORT_IS_REPORT SMALLINT DEFAULT 0 NOT NULL);

CREATE TABLE MANUAL_LOG (
    REPLNO INTEGER NOT NULL,
    PUBDBNO INTEGER NOT NULL,
    SUBDBNO INTEGER NOT NULL,
    SEQNO INTEGER NOT NULL,
    RELATIONNO INTEGER NOT NULL,
    REPTYPE CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    OLDKEY VARCHAR (256) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NEWKEY VARCHAR (256) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SEP CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FORCECOUNT INTEGER DEFAULT 0,
    ERROR_CODE INTEGER,
    ERROR_MSG VARCHAR (256) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE REPL_LOG (
    REPLNO INTEGER NOT NULL,
    PUBDBNO INTEGER NOT NULL,
    SUBDBNO INTEGER NOT NULL,
    SEQNO INTEGER NOT NULL,
    RELATIONNO INTEGER NOT NULL,
    REPTYPE CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    OLDKEY VARCHAR (256) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NEWKEY VARCHAR (256) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SEP CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FORCECOUNT INTEGER DEFAULT 0);

CREATE TABLE REPL_SEPARATOR (
    REPLNO INTEGER NOT NULL,
    PUBDBNO INTEGER NOT NULL,
    SUBDBNO INTEGER NOT NULL,
    RELATIONNO INTEGER NOT NULL,
    RELATIONNAME VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    SEP CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "caj$arqueos" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV DATE NOT NULL,
    ID_DENOMINACION TIPOS NOT NULL,
    CANTIDAD_DENOMINACION INTEGER,
    VALOR_DENOMINACION NUMERICO NOT NULL);

CREATE TABLE CAJ$CAJAS (
    ID_CAJA TIPOS NOT NULL,
    DESCRIPCION VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_ESTADO_CAJA TIPOS NOT NULL,
    ID_EMPLEADO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    HORA_INICIO TIME NOT NULL,
    HORA_FINAL TIME NOT NULL,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SERVICAJA BOOLEANO);

CREATE TABLE "CAJ$CAJAShistoria" (
    ID_CAJA TIPOS NOT NULL,
    FECHA_RECIBO DATE,
    ID_USUARIO_ENTREGA CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_USUARIO_RECIBE CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SALDO_EFECTIVO NUMERICO NOT NULL,
    SALDO_CHEQUE NUMERICO NOT NULL,
    SALDO_MONEDA NUMERICO NOT NULL);

CREATE TABLE "caj$cheques" (
    ID_CAJA TIPOS NOT NULL,
    ID_BANCO TIPOS NOT NULL,
    NUMERO_CHEQUE INTEGER NOT NULL,
    FECHA DATE NOT NULL,
    PLAZA PLAZA NOT NULL,
    VALOR NUMERICO NOT NULL,
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CUENTA TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA INTEGER,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ENVIADO BOOLEANO,
    FECHA_ENVIO DATE);

CREATE TABLE "caj$cierres" (
    ID_CAJA TIPOS NOT NULL,
    FECHA DATE NOT NULL,
    SALDO_INICIAL_EFECTIVO NUMERICO NOT NULL,
    SALDO_INICIAL_CHEQUE NUMERICO NOT NULL,
    SALDO_INICIAL_MONEDA NUMERICO NOT NULL,
    SALDO_FINAL_EFECTIVO NUMERICO NOT NULL,
    SALDO_FINAL_CHEQUE NUMERICO NOT NULL,
    SALDO_FINAL_MONEDA NUMERICO NOT NULL,
    ESTADO BOOLEANO,
    CONTABILIZADO BOOLEANO);

CREATE TABLE CAJ$CONADICIONAL (
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    DESCRIPCION VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TASA DOUBLE PRECISION,
    VALOR NUMERICO NOT NULL,
    VECES INTEGER,
    CODIGO_D CHAR (18) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    CODIGO_C CHAR (18) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TOMAR_VALOR CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1);

CREATE TABLE "caj$devolucionarqueo" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA CHAR (7) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DIGITO_CUENTA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ORIGEN_MOVIMIENTO SMALLINT,
    ID_TIPO_MOVIMIENTO TIPOS NOT NULL,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_DENOMINACION TIPOS NOT NULL,
    CANTIDAD_DENOMINACION INTEGER,
    VALOR_DENOMINACION NUMERICO NOT NULL);

CREATE TABLE "caj$devolucioncolarqueo" (
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP,
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION VARCHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DOCUMENTO INTEGER NOT NULL,
    ID_DENOMINACION TIPOS NOT NULL,
    CANTIDAD_DENOMINACION SMALLINT,
    VALOR_DENOMINACION NUMERICO NOT NULL);

CREATE TABLE "caj$devolucionrecaudosarqueo" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP NOT NULL,
    ORIGEN_MOVIMIENTO SMALLINT,
    ID_RECAUDO SMALLINT,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_DENOMINACION TIPOS NOT NULL,
    CANTIDAD_DENOMINACION INTEGER,
    VALOR_DENOMINACION NUMERICO NOT NULL);

CREATE TABLE "caj$estados" (
    ID_ESTADO TIPOS NOT NULL,
    DESCRIPCION VARCHAR (250) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    PERMITE_MOVIMIENTO BOOLEANO);

CREATE TABLE "caj$horarioservicaja" (
    DIA INTEGER NOT NULL,
    HORA_INICIAL TIME NOT NULL,
    HORA_FINAL TIME NOT NULL);

CREATE TABLE "caj$maxautorizado" (
    ID TIPOS NOT NULL,
    CANTIDAD INTEGER,
    VALOR NUMERICO NOT NULL,
    SERVICAJA BOOLEANO);

CREATE TABLE "caj$movimiento" (
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP NOT NULL,
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER NOT NULL,
    DIGITO_CUENTA INTEGER NOT NULL,
    ORIGEN_MOVIMIENTO SMALLINT,
    ID_TIPO_MOVIMIENTO TIPOS NOT NULL,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CHEQUES_MOVIMIENTO INTEGER DEFAULT 0,
    BILLETES NUMERICO NOT NULL,
    MONEDAS NUMERICO NOT NULL,
    CHEQUES NUMERICO NOT NULL);

CREATE TABLE "caj$movimientoarqueo" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA CHAR (7) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DIGITO_CUENTA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ORIGEN_MOVIMIENTO SMALLINT,
    ID_TIPO_MOVIMIENTO TIPOS NOT NULL,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_DENOMINACION TIPOS NOT NULL,
    CANTIDAD_DENOMINACION INTEGER,
    VALOR_DENOMINACION NUMERICO NOT NULL);

CREATE TABLE "caj$movimientocol" (
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP,
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION VARCHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DOCUMENTO INTEGER NOT NULL,
    CAPITAL NUMERICO NOT NULL,
    INTERESES NUMERICO NOT NULL,
    DEVOLUCION NUMERICO NOT NULL,
    OTROS NUMERICO NOT NULL,
    BILLETES NUMERICO NOT NULL,
    MONEDAS NUMERICO NOT NULL);

CREATE TABLE "caj$movimientocolarqueo" (
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP,
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION VARCHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DOCUMENTO INTEGER NOT NULL,
    ID_DENOMINACION TIPOS NOT NULL,
    CANTIDAD_DENOMINACION SMALLINT,
    VALOR_DENOMINACION NUMERICO NOT NULL);

CREATE TABLE CAJ$ORIGEN (
    ID_ORIGEN TIPOS NOT NULL,
    DESCRIPCION VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    GENERA_COMPROBANTE BOOLEANO NOT NULL);

CREATE TABLE "caj$recaudos" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP NOT NULL,
    ORIGEN_MOVIMIENTO SMALLINT,
    ID_RECAUDO SMALLINT,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    BILLETES NUMERICO NOT NULL,
    MONEDAS NUMERICO NOT NULL);

CREATE TABLE "caj$recaudosarqueo" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CAJA TIPOS NOT NULL,
    FECHA_MOV TIMESTAMP NOT NULL,
    ORIGEN_MOVIMIENTO SMALLINT,
    ID_RECAUDO SMALLINT,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_DENOMINACION TIPOS NOT NULL,
    CANTIDAD_DENOMINACION INTEGER,
    VALOR_DENOMINACION NUMERICO NOT NULL);

CREATE TABLE "caj$retiroautorizado" (
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    ID_AGENCIA TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER NOT NULL,
    DIGITO_CUENTA INTEGER NOT NULL,
    FECHA_MOV DATE NOT NULL,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    EFECTIVO NUMERICO,
    SERVICAJA BOOLEANO NOT NULL);

CREATE TABLE "caj$tiposmovimiento" (
    ID_TIPO_MOVIMIENTO TIPOS NOT NULL,
    DESCRIPCION VARCHAR (150) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ES_ENTRADA BOOLEANO,
    ES_SALIDA BOOLEANO);

CREATE TABLE "caj$tmpcheques" (
    ID_CAJA TIPOS NOT NULL,
    ID_BANCO TIPOS NOT NULL,
    NUMERO_CHEQUE INTEGER NOT NULL,
    FECHA DATE,
    PLAZA PLAZA NOT NULL,
    VALOR NUMERICO NOT NULL,
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CUENTA TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA INTEGER,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ENVIADO BOOLEANO,
    FECHA_ENVIO DATE);

CREATE TABLE "cap$canje" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    ID_BANCO TIPOS NOT NULL,
    NUMERO_CHEQUE INTEGER NOT NULL,
    PLAZA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_CAJA TIPOS NOT NULL,
    FECHA_ENTRADA DATE,
    VALOR_CHEQUE NUMERICO NOT NULL,
    VALOR_MONEDAS NUMERICO NOT NULL,
    LIBERADO BOOLEANO,
    DEVUELTO BOOLEANO,
    CONSIGNADO BOOLEANO,
    FECHA_LIBERADO DATE,
    FECHA_DEVUELTO DATE,
    FECHA_CONSIGNADO DATE);

CREATE TABLE "cap$causacioncdat" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS,
    VALOR_INICIAL NUMERICO,
    FECHA_APERTURA DATE,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES FIJ_VAR,
    ID_INTERES TIPOS,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    MODALIDAD CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    AMORTIZACION INTEGER,
    ID_ESTADO TIPOS,
    FECHA_VENCIMIENTO DATE,
    FECHA_ULTIMO_PAGO DATE,
    FECHA_PROXIMO_PAGO DATE,
    FECHA_PRORROGA DATE,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER,
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PRIMER_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SEGUNDO_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOMBRE VARCHAR (90) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DIAS INTEGER,
    VALOR NUMERICO NOT NULL,
    ANO INTEGER NOT NULL,
    MES INTEGER NOT NULL,
    TASA_E NUMERIC (5, 2) NOT NULL);

CREATE TABLE "cap$causacioncdattmp" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS,
    VALOR_INICIAL NUMERICO,
    FECHA_APERTURA DATE,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES FIJ_VAR,
    ID_INTERES TIPOS,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    MODALIDAD CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    AMORTIZACION INTEGER,
    ID_ESTADO TIPOS,
    FECHA_VENCIMIENTO DATE,
    FECHA_ULTIMO_PAGO DATE,
    FECHA_PROXIMO_PAGO DATE,
    FECHA_PRORROGA DATE,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER,
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PRIMER_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SEGUNDO_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOMBRE VARCHAR (90) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DIAS INTEGER,
    VALOR NUMERICO,
    TASA_E NUMERIC (5, 2));

CREATE TABLE CAP$CODIGOSCAUSACION (
    CODIGO_PUC VARCHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ES_GASTO BOOLEANO,
    ES_INTERESES BOOLEANO);

CREATE TABLE CAP$CONTABLE (
    ID_CAPTACION TIPOS NOT NULL,
    ID_CONTABLE TIPOS NOT NULL,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CODIGO_CONTABLE CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "cap$diasliquidados" (
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    FECHA_LIQUIDADA DATE,
    HORA_LIQUIDADA TIME,
    LIQUIDADA BOOLEANO);

CREATE TABLE "cap$diasprorrogados" (
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    FECHA_PRORROGA DATE,
    HORA_PRORROGA TIME,
    PRORROGADO BOOLEANO);

CREATE TABLE "cap$embargo" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    FECHA_EMBARGO DATE,
    VALOR_EMBARGADO NUMERICO NOT NULL,
    JUZGADO_EMBARGA VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CAUSAL_EMBARGO VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "cap$extracto" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    FECHA_MOVIMIENTO DATE NOT NULL,
    HORA_MOVIMIENTO TIME NOT NULL,
    ID_TIPO_MOVIMIENTO TIPOS NOT NULL,
    DOCUMENTO_MOVIMIENTO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DESCRIPCION_MOVIMIENTO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALOR_DEBITO NUMERICO NOT NULL,
    VALOR_CREDITO NUMERICO NOT NULL);

CREATE TABLE "cap$fechaspagasinteres" (
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    FECHA_PAGA DATE NOT NULL,
    PAGADA BOOLEANO);

CREATE TABLE "cap$historiaprorrogas" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    FECHA_INICIAL_ANT DATE,
    FECHA_FINAL_ANT DATE,
    FECHA_INICIAL_ACT DATE,
    FECHA_FINAL_ACT DATE);

CREATE TABLE "cap$libretas" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    FECHA_LIBRETA DATE,
    NUMERO_INICIAL INTEGER,
    NUMERO_FINAL INTEGER);

CREATE TABLE "cap$libretashistoria" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    FECHA_CAMBIO DATE,
    NUMERO_INICIAL_OLD INTEGER,
    NUMERO_FINAL_OLD INTEGER,
    NUMERO_INICIAL INTEGER,
    NUMERO_FINAL INTEGER);

CREATE TABLE "cap$libretasusada" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    NUMERO_TALON INTEGER,
    FECHA_USADA DATE);

CREATE TABLE "cap$maestro" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS,
    VALOR_INICIAL NUMERICO,
    ID_FORMA TIPOS,
    FECHA_APERTURA DATE,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES FIJ_VAR,
    ID_INTERES TIPOS,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    MODALIDAD CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    AMORTIZACION INTEGER,
    CUOTA NUMERICO,
    CUOTA_CADA INTEGER,
    ID_PLAN TIPOS,
    ID_ESTADO TIPOS,
    FECHA_VENCIMIENTO DATE,
    FECHA_ULTIMO_PAGO DATE,
    FECHA_PROXIMO_PAGO DATE,
    FECHA_PRORROGA DATE,
    FECHA_VENCIMIENTO_PRORROGA DATE,
    FIRMAS INTEGER,
    SELLOS INTEGER,
    PROTECTOGRAFOS INTEGER,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER);

CREATE TABLE "cap$maestroautorizado" (
    ID_AGENCIA TIPOS,
    ID_TIPO_CAPTACION TIPOS,
    NUMERO_CUENTA TIPO_CAPTACION,
    DIGITO_CUENTA TIPOS,
    ID_IDENTIFICACION TIPOS,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    PRIMER_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    SEGUNDO_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    NOMBRE VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "cap$maestrobeneficiario" (
    ID_AGENCIA TIPOS,
    ID_TIPO_CAPTACION TIPOS,
    NUMERO_CUENTA TIPO_CAPTACION,
    DIGITO_CUENTA TIPOS,
    PRIMER_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SEGUNDO_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOMBRE VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_PARENTESCO TIPOS,
    PORCENTAJE DOUBLE PRECISION);

CREATE TABLE "cap$maestrosaldo" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CUENTA TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION,
    DIGITO_CUENTA TIPOS,
    ANO CHAR (4) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    MES CHAR (2) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DEBITO NUMERICO,
    CREDITO NUMERICO);

CREATE TABLE "cap$maestrosaldoinicial" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION,
    DIGITO_CUENTA TIPOS,
    ANO CHAR (4) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    SALDO_INICIAL NUMERICO);

CREATE TABLE "cap$maestrosaldosmes" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION,
    DIGITO_CUENTA TIPOS,
    MES CHAR (2) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DEBITO NUMERICO,
    CREDITO NUMERICO);

CREATE TABLE "cap$maestrotitular" (
    ID_AGENCIA TIPOS,
    ID_TIPO_CAPTACION TIPOS,
    NUMERO_CUENTA TIPO_CAPTACION,
    DIGITO_CUENTA TIPOS,
    ID_IDENTIFICACION TIPOS,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    NUMERO_TITULAR SMALLINT,
    TIPO_TITULAR TIPOS NOT NULL);

CREATE TABLE "cap$obsestado" (
    ID_AGENCIA TIPOS,
    ID_TIPO_CAPTACION TIPOS,
    NUMERO_CUENTA TIPO_CAPTACION,
    DIGITO_CUENTA TIPOS,
    FECHA DATE NOT NULL,
    HORA TIME,
    ID_ESTADO_ANTERIOR TIPOS NOT NULL,
    ID_ESTADO_ACTUAL TIPOS NOT NULL,
    OBSERVACION BLOB sub_type 1 segment size 80,
    ID_EMPLEADO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "cap$rangos" (
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    ID_RANGO INTEGER NOT NULL,
    MINIMO NUMERICO NOT NULL,
    MAXIMO NUMERICO NOT NULL);

CREATE TABLE "cap$revalorizacion" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER NOT NULL,
    DIGITO_CUENTA SMALLINT,
    ANO INTEGER,
    PROMEDIO NUMERICO NOT NULL,
    TASA DOUBLE PRECISION,
    MES_CANCELO INTEGER,
    SE_PAGA BOOLEANO,
    DIAS INTEGER,
    REVALORIZACION NUMERICO NOT NULL,
    ESTADO CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALOR_AJUSTADO NUMERICO NOT NULL,
    ESTADO_AJUSTE CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PAGADO BOOLEANO);

CREATE TABLE "cap$revalorizaciontmp" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER NOT NULL,
    DIGITO_CUENTA SMALLINT NOT NULL,
    ANO INTEGER NOT NULL,
    PROMEDIO NUMERICO NOT NULL,
    TASA DOUBLE PRECISION,
    MES_CANCELO INTEGER,
    SE_PAGA BOOLEANO,
    DIAS INTEGER,
    REVALORIZACION NUMERICO NOT NULL,
    ESTADO CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALOR_AJUSTADO NUMERICO NOT NULL,
    ESTADO_AJUSTE CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PAGADO BOOLEANO);

CREATE TABLE "cap$tablaliquidacion" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    FECHA_PAGO DATE NOT NULL,
    VALOR NUMERICO NOT NULL,
    PAGADO BOOLEANO);

CREATE TABLE "cap$tablaliquidacioncon" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA TIPO_CAPTACION NOT NULL,
    DIGITO_CUENTA TIPOS NOT NULL,
    FECHA_DESCUENTO DATE NOT NULL,
    VALOR NUMERICO NOT NULL,
    DESCONTADO BOOLEANO);

CREATE TABLE "cap$tipocaptacion" (
    ID_TIPO_CAPTACION SMALLINT NOT NULL,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CODIGO_CONTABLE VARCHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CONSECUTIVO INTEGER,
    ID_FORMA SMALLINT NOT NULL,
    SALDO_MINIMO DOUBLE PRECISION NOT NULL,
    SALDO_MINIMO_PARA_INTERES DOUBLE PRECISION NOT NULL,
    RETIRO_PARCIAL INTEGER,
    RETIRO_PORCENTUAL_50 INTEGER,
    PAGA_INTERES INTEGER,
    PAGA_CUOTAS INTEGER,
    INTERES_INDIVIDUAL INTEGER,
    INTERES_CADA INTEGER,
    TIPO_INTERES INTEGER,
    INTERES_EFECTIVO DOUBLE PRECISION);

CREATE TABLE "cap$tiposestado" (
    ID_ESTADO SMALLINT NOT NULL,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PARA_ACTIVAR INTEGER,
    PARA_SALDAR INTEGER,
    PERMITE_MOVIMIENTO INTEGER,
    COLOR SMALLINT,
    PAGA_INTERES INTEGER,
    SE_SUMA BOOLEANO,
    PERMITE_CAMBIAR BOOLEANO NOT NULL);

CREATE TABLE "cap$tiposforma" (
    ID_FORMA SMALLINT NOT NULL,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    APORTE INTEGER,
    AHORRO INTEGER,
    CERTIFICADO INTEGER,
    PROGRAMADO INTEGER,
    COLOCACION INTEGER,
    OPERACIONES INTEGER);

CREATE TABLE "cap$tiposmovimiento" (
    ID_TIPO_MOVIMIENTO TIPOS NOT NULL,
    DESCRIPCION_MOVIMIENTO VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ES_DEBITO BOOLEANO,
    ES_CREDITO BOOLEANO);

CREATE TABLE "cap$tiposplancontractual" (
    ID_PLAN SMALLINT NOT NULL,
    DESCRIPCION VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PLAZO INTEGER,
    CUOTAS DOUBLE PRECISION);

CREATE TABLE "cap$tipostitulares" (
    ID_TIPO_TITULAR TIPOS NOT NULL,
    DESCRIPCION_TIPO_TITULAR VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "col$ReporteData" (
    NUMERO CHAR (18),
    IDENTIFICACION CHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOMBRE CHAR (45) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FNACIM CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FAPERT CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FVENCI CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VCUOTA CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOVEDAD CHAR (2) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ADJETI CHAR (2) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TPIDEN CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALINI CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALDEU CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALMOR CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALDIS CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TPMONE CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TPOBLI CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TPGARA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CALIFI CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CRESID CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DRESID CHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TRESID CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CLABOR CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TLABOR CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CCORRE CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DCORRE CHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CIIU CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TCUOTA CHAR (3) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CCANCE CHAR (3) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CEMORA CHAR (3) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FUPAGO CHAR (8) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    OFICIN CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CRADIC CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FOPAGO CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PEPAGO CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    EDMORA CHAR (3) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FACTUA CHAR (8) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    RECLAM CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    RESPON CHAR (2) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ESTRAC CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    RELLEN CHAR (14) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA_CORTE CHAR (8) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$ReporteDatatmp" (
    NUMERO CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    IDENTIFICACION CHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOMBRE CHAR (45) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FNACIM CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FAPERT CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FVENCI CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VCUOTA CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOVEDAD CHAR (2) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ADJETI CHAR (2) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TPIDEN CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALINI CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALDEU CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALMOR CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALDIS CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TPMONE CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TPOBLI CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TPGARA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CALIFI CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CRESID CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DRESID CHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TRESID CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CLABOR CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TLABOR CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CCORRE CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DCORRE CHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CIIU CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TCUOTA CHAR (3) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CCANCE CHAR (3) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CEMORA CHAR (3) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FUPAGO CHAR (8) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    OFICIN CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CRADIC CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FOPAGO CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PEPAGO CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    EDMORA CHAR (3) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FACTUA CHAR (8) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    RECLAM CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    RESPON CHAR (2) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ESTRAC CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    RELLEN CHAR (14) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$adjetivos" (
    ID_ENTIDAD TIPOS NOT NULL,
    ID_ADJETIVO TIPOS NOT NULL,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "col$barridoCartera" (
    AGENCIA TIPOS,
    COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    IDIDENTIFICACION TIPOS,
    IDPERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    CUOTASALIQUIDAR INTEGER,
    CLASIFICACION TIPOS NOT NULL,
    CATEGORIA CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    GARANTIA TIPOS NOT NULL,
    SALDOACTUAL NUMERICO,
    ESTADO TIPOS,
    VALORCUOTA NUMERICO,
    FECHAPAGOK DATE,
    FECHAPAGOI DATE,
    TIPOCUOTA TIPOS,
    IDINTERES INTEGER,
    TIPOINTERES CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALORTASA FLOAT,
    VALORACTUALTASA FLOAT,
    VALORMORA FLOAT,
    PUNTOSADIC FLOAT,
    AMORTIZAK INTEGER DEFAULT 30 NOT NULL,
    AMORTIZAI INTEGER DEFAULT 30 NOT NULL,
    DIASPRORROGA INTEGER);

CREATE TABLE "col$barridoahorroscartera" (
    AGENCIA TIPOS,
    COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    IDIDENTIFICACION TIPOS,
    IDPERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    CUOTASALIQUIDAR INTEGER,
    CLASIFICACION TIPOS NOT NULL,
    CATEGORIA CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    GARANTIA TIPOS NOT NULL,
    SALDOACTUAL NUMERICO,
    ESTADO TIPOS,
    VALORCUOTA NUMERICO,
    FECHAPAGOK DATE,
    FECHAPAGOI DATE,
    TIPOCUOTA TIPOS,
    IDINTERES INTEGER,
    TIPOINTERES CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALORTASA FLOAT,
    VALORACTUALTASA FLOAT,
    VALORMORA FLOAT,
    PUNTOSADIC FLOAT,
    AMORTIZAK INTEGER DEFAULT 30 NOT NULL,
    AMORTIZAI INTEGER DEFAULT 30 NOT NULL,
    DIASPRORROGA INTEGER,
    AHORROS NUMERICO);

CREATE TABLE "col$cambioclaves" (
    ID_ANTERIOR VARCHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_NUEVO VARCHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$cambiodata" (
    COLOCACION_ERRADO VARCHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    IDENTIFICACION VARCHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    AGENCIA TIPOS NOT NULL,
    COLOCACION_CORRECTO VARCHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$carteraf" (
    CLASIFICACION INTEGER,
    MES INTEGER,
    SALDO NUMERICO NOT NULL,
    CAPITAL NUMERICO NOT NULL,
    INTERES NUMERICO NOT NULL,
    ANOMES CHAR (6) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$categoria" (
    ID_CATEGORIA CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DESCRIPCION_CATEGORIA VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1);

CREATE TABLE "col$causaciones" (
    ID_AGENCIA SMALLINT NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    FECHA_CORTE DATE NOT NULL,
    ID_CLASIFICACION TIPOS NOT NULL,
    ID_GARANTIA TIPOS NOT NULL,
    ID_EDAD CHAR (1) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ID_ARRASTRE CHAR (1) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    FECHA_DESEMBOLSO DATE,
    VALOR NUMERICO NOT NULL,
    DEUDA NUMERICO NOT NULL,
    ID_TIPO_CUOTA TIPOS NOT NULL,
    FECHA_CAPITAL DATE,
    FECHA_INTERES DATE,
    TIPOC_INTERES CHAR (1) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    AMORTIZA_CAPITAL INTEGER,
    AMORTIZA_INTERES INTEGER,
    TIPO_INTERES CHAR (1) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TASA_INTERES_CORRIENTE DOUBLE PRECISION,
    ID_INTERES INTEGER,
    VALOR_ACTUAL_TASA DOUBLE PRECISION,
    PUNTOS_INTERES DOUBLE PRECISION,
    DIAS INTEGER,
    TASA DOUBLE PRECISION,
    ANTICIPADOS NUMERICO NOT NULL,
    CAUSADOS NUMERICO NOT NULL,
    CONTINGENCIAS NUMERICO NOT NULL,
    APORTES NUMERICO NOT NULL,
    PCAPITAL NUMERICO NOT NULL,
    PINTERES NUMERICO NOT NULL,
    PCOSTAS NUMERICO NOT NULL,
    CORTO_PL NUMERICO NOT NULL,
    LARGO_PL NUMERICO NOT NULL,
    COSTAS NUMERICO NOT NULL,
    ID_ESTADO TIPOS NOT NULL);

CREATE TABLE "col$causacionescontrol" (
    FECHA DATE,
    PROCESADA BOOLEANO,
    APLICADA BOOLEANO,
    CONTABILIZADA BOOLEANO NOT NULL,
    ID_COMPROBANTE INTEGER);

CREATE TABLE "col$causacionestmp" (
    ID_AGENCIA SMALLINT NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    FECHA_CORTE DATE NOT NULL,
    ID_CLASIFICACION TIPOS NOT NULL,
    ID_GARANTIA TIPOS NOT NULL,
    ID_EDAD CHAR (1) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ID_ARRASTRE CHAR (1) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    FECHA_DESEMBOLSO DATE,
    VALOR NUMERICO NOT NULL,
    DEUDA NUMERICO NOT NULL,
    ID_TIPO_CUOTA TIPOS NOT NULL,
    FECHA_CAPITAL DATE,
    FECHA_INTERES DATE,
    TIPOC_INTERES CHAR (1) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    AMORTIZA_CAPITAL INTEGER,
    AMORTIZA_INTERES INTEGER,
    TIPO_INTERES CHAR (1) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TASA_INTERES_CORRIENTE DOUBLE PRECISION,
    ID_INTERES INTEGER,
    VALOR_ACTUAL_TASA DOUBLE PRECISION,
    PUNTOS_INTERES DOUBLE PRECISION,
    DIAS INTEGER,
    TASA DOUBLE PRECISION,
    ANTICIPADOS NUMERICO NOT NULL,
    CAUSADOS NUMERICO NOT NULL,
    CONTINGENCIAS NUMERICO NOT NULL,
    APORTES NUMERICO NOT NULL,
    PCAPITAL NUMERICO NOT NULL,
    PINTERES NUMERICO NOT NULL,
    PCOSTAS NUMERICO NOT NULL,
    CORTO_PL NUMERICO NOT NULL,
    LARGO_PL NUMERICO NOT NULL,
    COSTAS NUMERICO NOT NULL,
    ID_ESTADO TIPOS NOT NULL);

CREATE TABLE "col$clasificacion" (
    ID_CLASIFICACION TIPOS NOT NULL,
    DESCRIPCION_CLASIFICACION VARCHAR (50) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE COL$CODIGOSPUC (
    ID_CLASIFICACION TIPOS NOT NULL,
    ID_GARANTIA TIPOS NOT NULL,
    ID_CATEGORIA CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DIAS_INICIALES INTEGER NOT NULL,
    DIAS_FINALES INTEGER NOT NULL,
    COD_CAPITAL_CP CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_CAPITAL_LP CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_INT_ANT CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_CXC CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_INT_MES CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_INT_MORA CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_COSTAS CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_OTRAS_CXC CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_PROV_CAPITAL CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_PROV_INTERES CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_PROV_COSTAS CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_CAPITAL_CAS CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_CXC_CAS CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_COSTAS_CAS CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COD_CONTINGENCIA CHAR (18) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE COL$CODIGOSPUCBASICOS (
    ID_CODIGOPUCBASICO TIPOS NOT NULL,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DESCRIPCION VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "col$colgarantias" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA CHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CSC_GARANTIA SMALLINT NOT NULL);

CREATE TABLE "col$colgarantiasreal" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    NUMERO_ESCRITURA VARCHAR (30) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA_ESCRITURA DATE,
    NOMBRE_NOTARIA VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CIUDAD_ESCRITURA VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    MATRICULA_INMOBILIARIA VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    FECHA_REGISTRO DATE,
    AVALUO NUMERICO,
    FECHA_AVALUO DATE,
    CUENTAS_DE_ORDEN NUMERICO,
    POLIZA_INCENDIO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    VALOR_ASEGURADO NUMERICO,
    FECHA_INICIAL_POLIZA DATE,
    FECHA_FINAL_POLIZA DATE,
    CODIGO_ASEGURADORA CHAR (5) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$colocacion" (
    ID_AGENCIA TIPOS,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    ID_CLASIFICACION TIPOS NOT NULL,
    ID_LINEA TIPOS NOT NULL,
    ID_INVERSION TIPOS3 NOT NULL,
    ID_RESPALDO TIPOS NOT NULL,
    ID_GARANTIA TIPOS NOT NULL,
    ID_CATEGORIA CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_EVALUACION CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA_DESEMBOLSO DATE NOT NULL,
    VALOR_DESEMBOLSO NUMERICO,
    PLAZO_COLOCACION INTEGER DEFAULT 30 NOT NULL,
    FECHA_VENCIMIENTO DATE NOT NULL,
    TIPO_INTERES CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_INTERES TIPOS NOT NULL,
    TASA_INTERES_CORRIENTE FLOAT NOT NULL,
    TASA_INTERES_MORA FLOAT,
    PUNTOS_INTERES FLOAT,
    ID_TIPO_CUOTA TIPOS NOT NULL,
    AMORTIZA_CAPITAL INTEGER DEFAULT 30 NOT NULL,
    AMORTIZA_INTERES INTEGER DEFAULT 30 NOT NULL,
    PERIODO_GRACIA INTEGER,
    DIAS_PRORROGADOS INTEGER,
    VALOR_CUOTA NUMERICO,
    ABONOS_CAPITAL NUMERICO,
    FECHA_CAPITAL DATE DEFAULT 'NOW' NOT NULL,
    FECHA_INTERES DATE DEFAULT 'NOW' NOT NULL,
    ID_ESTADO_COLOCACION TIPOS NOT NULL,
    ID_ENTE_APROBADOR TIPOS NOT NULL,
    ID_EMPLEADO CHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    NOTA_CONTABLE CHAR (8) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NUMERO_CUENTA INTEGER,
    ES_ANORMAL BOOLEANO);

CREATE TABLE "col$colocacionabogado" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_ABOGADO TIPOS NOT NULL,
    ID_IDENTIFICACION TIPOS,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "col$concol" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DEBITO NUMERICO,
    CREDITO NUMERICO,
    FECHA_Y_HORA TIMESTAMP);

CREATE TABLE "col$controlcobro" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    FECHA_OBSERVACION DATE,
    OBSERVACION BLOB sub_type 1 segment size 80,
    ES_OBSERVACION BOOLEANO,
    ES_COMPROMISO BOOLEANO,
    FECHA_COMPROMISO DATE,
    ID_USUARIO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "col$controlreportedata" (
    FECHA_CORTE CHAR (6) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA_PROCESO DATE,
    ID_EMPLEADO CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PROCESADO BOOLEANO,
    DATACREDITO BOOLEANO,
    CIFIN BOOLEANO);

CREATE TABLE "col$costas" (
    ID_AGENCIA INTEGER,
    ID_COLOCACION VARCHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA DATE,
    ID_CBTE_COLOCACION INTEGER,
    VALOR_COSTAS NUMERICO,
    VALOR_HONORARIOS NUMERICO,
    VALOR_OTROS NUMERICO,
    DESCRIPCION VARCHAR (250) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$descuentos" (
    ID_DESCUENTO TIPOS NOT NULL,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DESCRIPCION_DESCUENTO VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALOR_DESCUENTO NUMERICO,
    PORCENTAJE_COLOCACION FLOAT);

CREATE TABLE "col$enteaprobador" (
    ID_ENTE_APROBADOR TIPOS NOT NULL,
    DESCRIPCION_ENTE_APROBADOR VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "col$erroresdata" (
    COLOCACION_ERRADO VARCHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    IDENTIFICACION VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    AGENCIA TIPOS NOT NULL,
    COLOCACION_CORRECTO VARCHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$estado" (
    ID_ESTADO_COLOCACION TIPOS NOT NULL,
    DESCRIPCION_ESTADO_COLOCACION VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    ES_PREJURIDICO BOOLEANO,
    ES_JURIDICO BOOLEANO,
    ES_CASTIGADO BOOLEANO,
    ES_NOVISADO BOOLEANO,
    ES_ANULADO BOOLEANO,
    ES_CANCELADO BOOLEANO,
    ES_VIGENTE BOOLEANO,
    ES_SALDADO BOOLEANO,
    COLOR SMALLINT,
    ES_FALLECIDO BOOLEANO,
    ES_INCAPACITADO BOOLEANO);

CREATE TABLE "col$estadosolicitud" (
    ID_ESTADO SMALLINT NOT NULL,
    DESCRIPCION_ESTADO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ACTUALIZA_INFORMACION BOOLEANO,
    DESEMBOLSO BOOLEANO,
    VIGENCIA SMALLINT);

CREATE TABLE "col$extracto" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CBTE_COLOCACION INTEGER NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    FECHA_EXTRACTO DATE NOT NULL,
    HORA_EXTRACTO TIME NOT NULL,
    CUOTA_EXTRACTO INTEGER,
    TIPO_OPERACION TIPOS NOT NULL,
    SALDO_ANTERIOR_EXTRACTO NUMERICO,
    ABONO_CAPITAL NUMERICO,
    ABONO_CXC NUMERICO,
    ABONO_ANTICIPADO NUMERICO,
    ABONO_SERVICIOS NUMERICO NOT NULL,
    ABONO_MORA NUMERICO NOT NULL,
    ABONO_SEGURO NUMERICO,
    ABONO_PAGXCLI NUMERICO,
    ABONO_HONORARIOS NUMERICO,
    ABONO_OTROS NUMERICO,
    TASA_INTERES_LIQUIDACION DOUBLE PRECISION,
    ID_EMPLEADO CHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    INTERES_PAGO_HASTA DATE,
    CAPITAL_PAGO_HASTA DATE,
    TIPO_ABONO BOOLEANO);

CREATE TABLE "col$extractobarridotmp" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CBTE_COLOCACION INTEGER NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA_EXTRACTO DATE NOT NULL,
    HORA_EXTRACTO TIME NOT NULL,
    CODIGO_PUC CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA_INICIAL DATE,
    FECHA_FINAL DATE,
    DIAS_APLICADOS INTEGER,
    TASA_LIQUIDACION DOUBLE PRECISION,
    VALOR_DEBITO NUMERICO,
    VALOR_CREDITO NUMERICO);

CREATE TABLE "col$extractodet" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_CBTE_COLOCACION INTEGER NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA_EXTRACTO DATE NOT NULL,
    HORA_EXTRACTO TIME NOT NULL,
    CODIGO_PUC CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA_INICIAL DATE,
    FECHA_FINAL DATE,
    DIAS_APLICADOS INTEGER,
    TASA_LIQUIDACION DOUBLE PRECISION,
    VALOR_DEBITO NUMERICO,
    VALOR_CREDITO NUMERICO);

CREATE TABLE "col$garantia" (
    ID_GARANTIA TIPOS NOT NULL,
    DESCRIPCION_GARANTIA VARCHAR (50) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "col$hevaluacion" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA DATE,
    EVALUACION_ANTERIOR CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    EVALUACION_NUEVA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_EMPLEADO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "col$informemora" (
    ID_AGENCIA INTEGER,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DESCRIPCION_ESTADO VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CUENTA CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_IDENTIFICACION INTEGER,
    ID_PERSONA CHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOMBRE VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PRIMER_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SEGUNDO_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALOR_DESEMBOLSO NUMERICO NOT NULL,
    SALDO NUMERICO,
    VALOR_CUOTA NUMERICO NOT NULL,
    FECHA_DESEMBOLSO DATE,
    FECHA_VENCIMIENTO DATE,
    ID_CLASIFICACION SMALLINT,
    ID_EVALUACION CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    MORA INTEGER);

CREATE TABLE "col$inversion" (
    ID_INVERSION TIPOS3 NOT NULL,
    DESCRIPCION_INVERSION VARCHAR (250) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "col$lineadescuento" (
    ID_LINEA INTEGER,
    ID_DESCUENTO INTEGER);

CREATE TABLE "col$lineas" (
    ID_LINEA TIPOS NOT NULL,
    DESCRIPCION_LINEA VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    VECES_APORTES FLOAT,
    VECES_AHORROS FLOAT,
    PORCENTAJE_CREDITO FLOAT,
    PORCENTAJE_APORTES FLOAT,
    PORCENTAJE_AHORROS FLOAT,
    MINIMO_CAPITALIZAR NUMERICO,
    CAPITALIZACION_ACUMULADA BOOLEANO,
    ES_VIVIENDA BOOLEANO,
    ES_ORDINARIA BOOLEANO,
    TASA FLOAT);

CREATE TABLE "col$novedades" (
    ID_ENTIDAD TIPOS NOT NULL,
    ID_NOVEDAD TIPOS NOT NULL,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    DIAS_INICIALES INTEGER,
    DIAS_FINALES INTEGER);

CREATE TABLE "col$porccausacion" (
    ID_CLASIFICACION TIPOS NOT NULL,
    ID_GARANTIA TIPOS NOT NULL,
    ID_EDAD CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    A_CAPITAL DOUBLE PRECISION,
    A_INTERESES DOUBLE PRECISION,
    A_COSTAS DOUBLE PRECISION);

CREATE TABLE "col$prueba" (
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SALDO NUMERICO NOT NULL,
    SALDOEXT NUMERICO NOT NULL);

CREATE TABLE "col$requisitos" (
    ID_REQUISITO TIPOS NOT NULL,
    DESCRIPCION VARCHAR (250) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "col$requisitosmonto" (
    MONTO_MIN NUMERIC (15, 1),
    MONTO_MAX NUMERIC (15, 1),
    ID_REQUISITOS VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "col$respaldo" (
    ID_RESPALDO TIPOS NOT NULL,
    DESCRIPCION_RESPALDO VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "col$resumen" (
    ID_AGENCIA SMALLINT,
    ID_COLOCACION VARCHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_CLASIFICACION SMALLINT,
    ID_GARANTIA SMALLINT,
    ID_EDAD VARCHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_ARRASTRE VARCHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALOR DOUBLE PRECISION,
    DEUDA DOUBLE PRECISION);

CREATE TABLE "col$solicitud" (
    ID_SOLICITUD CHAR (10) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_IDENTIFICACION SMALLINT,
    VALOR_SOLICITADO NUMERIC (15, 1),
    PAGO_INTERES CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PLAZO INTEGER,
    AMORTIZACION SMALLINT,
    GARANTIA SMALLINT,
    TIPO_CUOTA SMALLINT,
    ESTADO SMALLINT,
    LINEA SMALLINT,
    FECHA_RECEPCION DATE,
    OFICINA SMALLINT NOT NULL,
    DESTINO VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA_CONCEPTO DATE,
    ID_EMPLEADO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ENTE_APROBADOR SMALLINT,
    NUMERO_ACTA VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TASA_INTERES FLOAT,
    PLAZO_APROBADO INTEGER,
    DESCRIPCION_GARANTIA VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NUMERO_CODEUDORES SMALLINT,
    RESPALDO SMALLINT,
    VALOR_APROBADO NUMERIC (15, 1),
    ID_ANALISIS VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    INGRESOS NUMERIC (10, 1),
    DISPONIBLE NUMERIC (10, 1),
    DEDUCCIONES NUMERIC (10, 1),
    VALOR_CUOTA NUMERIC (10, 1),
    DISPONIBILIDAD NUMERIC (10, 1),
    SOLV_ECONOMICA BOOLEANO,
    EXP_CREDITOS VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    INVERSION SMALLINT,
    CLASIFICACION SMALLINT,
    ES_DESEMBOLSO_PARCIAL BOOLEANO);

CREATE TABLE "col$tablaliquidacion" (
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CUOTA_NUMERO INTEGER NOT NULL,
    ID_AGENCIA TIPOS NOT NULL,
    FECHA_A_PAGAR DATE NOT NULL,
    CAPITAL_A_PAGAR NUMERICO,
    INTERES_A_PAGAR NUMERICO,
    PAGADA BOOLEANO,
    FECHA_PAGADA DATE,
    ES_ANORMAL BOOLEANO);

CREATE TABLE "col$tablaliquidaciontmp" (
    ID_AGENCIA INTEGER,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CUOTA_NUMERO INTEGER NOT NULL,
    FECHA_A_PAGAR DATE NOT NULL,
    CAPITAL_A_PAGAR NUMERICO,
    INTERES_A_PAGAR NUMERICO);

CREATE TABLE "col$tasadtf" (
    ID_TASA_DTF INTEGER NOT NULL,
    FECHA_INICIAL DATE,
    FECHA_FINAL DATE,
    VALOR_TASA_EFECTIVA DOUBLE PRECISION);

CREATE TABLE "col$tasafijas" (
    ID_TASA_FIJA INTEGER NOT NULL,
    FECHA_INICIAL DATE,
    FECHA_FINAL DATE,
    VALOR_TASA_EFECTIVA DOUBLE PRECISION);

CREATE TABLE "col$tasasvariables" (
    ID_INTERES SMALLINT NOT NULL,
    DESCRIPCION_TASA VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALOR_ACTUAL_TASA DOUBLE PRECISION);

CREATE TABLE "col$tasavariables" (
    ID_INTERES SMALLINT NOT NULL,
    DESCRIPCION_TASA VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VALOR_ACTUAL_TASA DOUBLE PRECISION);

CREATE TABLE "col$tiposcuota" (
    ID_TIPOS_CUOTA TIPOS NOT NULL,
    DESCRIPCION_TIPO_CUOTA VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    CAPITAL ANT_OR_VEN DEFAULT 'V' NOT NULL COLLATE ES_ES,
    INTERES ANT_OR_VEN DEFAULT 'V' NOT NULL COLLATE ES_ES,
    TIPO_CUOTA FIJ_VAR DEFAULT 'F' NOT NULL COLLATE ES_ES,
    ES_VARIABLE BOOLEANO,
    ES_FIJA BOOLEANO);

CREATE TABLE CON$AUXILIAR (
    ID_COMPROBANTE INTEGER,
    ID_AGENCIA TIPOS NOT NULL,
    FECHA DATE,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DEBITO NUMERICO,
    CREDITO NUMERICO,
    ID_CUENTA CHAR (7) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    MONTO_RETENCION NUMERICO,
    TASA_RETENCION FLOAT,
    ESTADOAUX TIPOSEST COLLATE ISO8859_1);

CREATE TABLE CON$CAJADIARIO (
    ID_AGENCIA TIPOS NOT NULL,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DIA INTEGER NOT NULL,
    MES INTEGER NOT NULL,
    DEBITO NUMERICO NOT NULL,
    CREDITO NUMERICO NOT NULL);

CREATE TABLE "con$captacion" (
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    NOMBRE VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "con$centrocosto" (
    ID TIPOID NOT NULL,
    DESCRIPCION VARCHAR (50) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "con$colocacion" (
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    NOMBRE VARCHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "con$colocacion1" (
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1);

CREATE TABLE CON$COMPROBANTE (
    ID_COMPROBANTE INTEGER NOT NULL,
    ID_AGENCIA TIPOS NOT NULL,
    TIPO_COMPROBANTE CHAR (2) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHADIA DATE NOT NULL,
    DESCRIPCION BLOB sub_type 1 segment size 80,
    TOTAL_DEBITO NUMERICO,
    TOTAL_CREDITO NUMERICO,
    ESTADO TIPOSEST,
    IMPRESO BOOLEANO,
    ANULACION BLOB sub_type 1 segment size 80,
    ID_EMPLEADO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "con$comprobantecsc" (
    ID_AGENCIA TIPOS NOT NULL,
    LLAVECSC TIPOS,
    COMPROBANTE INTEGER);

CREATE TABLE CON$CONTROLPLANILLA (
    FECHA_PLANILLA DATE NOT NULL,
    FECHA_IMPRESION DATE,
    CONSECUTIVO INTEGER);

CREATE TABLE CON$ERRORCIERRECOMP (
    ID_AGENCIA TIPOS,
    ID_COMPROBANTE INTEGER NOT NULL,
    ERROR BLOB sub_type 1 segment size 80);

CREATE TABLE "con$fechasplanillas" (
    FECHA DATE NOT NULL,
    PLANILLADA BOOLEANO);

CREATE TABLE "con$informes" (
    ID TIPOID NOT NULL,
    DESCRIPCION VARCHAR (50) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    PIDOID BOOLEANO,
    PIDOMONTO BOOLEANO,
    PIDOTASA BOOLEANO,
    PIDOTIPOID TIPOS NOT NULL);

CREATE TABLE CON$PLANILLARESUMEN (
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    DEBITO NUMERICO NOT NULL,
    CREDITO NUMERICO NOT NULL);

CREATE TABLE CON$PUC (
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_AGENCIA TIPOS NOT NULL,
    CLAVE VARCHAR (5) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    NOMBRE VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    TIPO VARCHAR (2) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CODIGOMAYOR VARCHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    MOVIMIENTO BOOLEANO NOT NULL,
    ESBANCO BOOLEANO NOT NULL,
    INFORME TIPOID NOT NULL,
    NIVEL SMALLINT NOT NULL,
    NATURALEZA CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CENTROCOSTO TIPOID NOT NULL,
    SALDOINICIAL NUMERICO,
    ESCAPTACION BOOLEANO,
    ESCOLOCACION BOOLEANO);

CREATE TABLE "CON$PUCcon" (
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_AGENCIA TIPOS NOT NULL,
    MES INTEGER NOT NULL,
    NOMBRE VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    TIPO VARCHAR (2) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CODIGOMAYOR VARCHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    MOVIMIENTO BOOLEANO NOT NULL,
    ESBANCO BOOLEANO NOT NULL,
    INFORME TIPOID NOT NULL,
    NIVEL SMALLINT NOT NULL,
    NATURALEZA CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CENTROCOSTO TIPOID NOT NULL,
    SALDOACTUAL NUMERICO NOT NULL,
    ESCAPTACION BOOLEANO,
    ESCOLOCACION BOOLEANO);

CREATE TABLE "CON$PUCinforme" (
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    DEBITO_01 NUMERICO NOT NULL,
    CREDITO_01 NUMERICO NOT NULL,
    DEBITO_02 NUMERICO NOT NULL,
    CREDITO_02 NUMERICO NOT NULL,
    DEBITO_03 NUMERICO NOT NULL,
    CREDITO_03 NUMERICO NOT NULL,
    DEBITO NUMERICO NOT NULL,
    CREDITO NUMERICO NOT NULL);

CREATE TABLE CON$RETENCION (
    ID_COMPROBANTE INTEGER NOT NULL,
    ID_AGENCIA TIPOS NOT NULL,
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    MONTO_RETENCION NUMERICO NOT NULL,
    TASA_RETENCION FLOAT NOT NULL,
    VALOR_RETENCION NUMERICO NOT NULL);

CREATE TABLE CON$SALDOSCUENTA (
    ID_AGENCIA TIPOS NOT NULL,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    MES INTEGER NOT NULL,
    DEBITO NUMERICO,
    CREDITO NUMERICO);

CREATE TABLE CON$SALDOSINICIALES (
    ID_AGENCIA TIPOS NOT NULL,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    SALDOINICIAL NUMERICO NOT NULL);

CREATE TABLE CON$TIPOCOMPROBANTE (
    ID TIPOS NOT NULL,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    LLAVECSC TIPOS NOT NULL);

CREATE TABLE "dian$cuentas" (
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TIPO_CUENTA SMALLINT,
    NUMERO_CUENTA VARCHAR (9),
    VALOR_CREDITO NUMERIC (18, 2),
    VALOR_INTERES NUMERIC (18, 2),
    ESTADO CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "dian$cuentasabiertas" (
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    NOMBRE VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    APELLIDO VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    DIRECCION VARCHAR (150) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    VALOR_CREDITOS NUMERIC (18, 2));

CREATE TABLE "dian$documentos" (
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "dian$notascredito" (
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    NOMBRE VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    APELLIDO VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    DIRECCION VARCHAR (150) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    VALOR_CREDITOS NUMERIC (18, 2));

CREATE TABLE "errorestabla" (
    ID_COLOCACION CHAR (11) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CUOTA INTEGER,
    FECHA_INTERES DATE,
    FECHA_A_PAGAR DATE,
    AMORTIZAI INTEGER,
    TIPO_CUOTA INTEGER);

CREATE TABLE "fun$ayudas" (
    ID_AYUDA TIPOS NOT NULL,
    DESCRIPCION VARCHAR (200) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    VALOR_MAXIMO NUMERIC (15, 1));

CREATE TABLE "fun$consolayudas" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER NOT NULL,
    DIGITO_CUENTA SMALLINT NOT NULL,
    PERIODO INTEGER NOT NULL,
    ID_AYUDA TIPOS NOT NULL,
    VALOR NUMERIC (15, 0));

CREATE TABLE "fun$diascerrados" (
    FECHA DATE NOT NULL,
    CERRADO BOOLEANO,
    APLICADO BOOLEANO);

CREATE TABLE "fun$juveniles" (
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER NOT NULL,
    DIGITO_CUENTA SMALLINT NOT NULL,
    FECHA_ENTREGA DATE,
    VALOR_ENTREGADO NUMERIC (15, 0));

CREATE TABLE "fun$movimiento" (
    ID_USUARIO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    FECHA DATE,
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER NOT NULL,
    DIGITO_CUENTA SMALLINT NOT NULL,
    CONSECUTIVO INTEGER NOT NULL,
    ID_AYUDA TIPOS NOT NULL,
    VALOR_APROBADO NUMERIC (15, 0),
    APLICADO BOOLEANO);

CREATE TABLE "gen$abogados" (
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ID_ABOGADO TIPOS NOT NULL);

CREATE TABLE "gen$agencia" (
    ID_AGENCIA TIPOS NOT NULL,
    DESCRIPCION_AGENCIA VARCHAR (50) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    DIRECCION_AGENCIA VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TELEFONO_AGENCIA VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    CODIGO_CONTABLE CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$bancos" (
    ID_BANCO INTEGER NOT NULL,
    DESCRIPCION VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE GEN$BANCOSCONNAL (
    ID_BANCO INTEGER NOT NULL,
    DESCRIPCION VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    COMISION NUMERICO NOT NULL,
    COMISIONLOCAL NUMERICO NOT NULL,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$cedulasvip" (
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1);

CREATE TABLE GEN$CODIGOSINGRESOSGASTOS (
    ID TIPOS NOT NULL,
    CODIGO CHAR (18) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DESCRIPCION VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NATURALEZA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$compdescripcion" (
    ID_COMPROBANTE TIPOS NOT NULL,
    DESCRIPCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    COMPROBANTE VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$consecutivos" (
    ID_CONSECUTIVO TIPOS NOT NULL,
    CONSECUTIVO INTEGER NOT NULL,
    DESCRIPCION VARCHAR (50) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "gen$consecutivostmp" (
    ID_CONSECUTIVO TIPOS NOT NULL,
    CONSECUTIVO INTEGER NOT NULL,
    DESCRIPCION VARCHAR (50) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "gen$denominaciones" (
    ID_DENOMINACION TIPOS NOT NULL,
    DESCRIPCION VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    MONEDAS BOOLEANO,
    VALOR NUMERICO NOT NULL,
    ACTIVO BOOLEANO NOT NULL);

CREATE TABLE "gen$detalles" (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA TIPOS NOT NULL,
    FECHA_ENTREGA DATE,
    HORA_ENTREGA TIME,
    ANO CHAR (4) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_EMPLEADO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$direccion" (
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (12) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    ID_DIRECCION TIPOS NOT NULL,
    DIRECCION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    BARRIO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    MUNICIPIO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TELEFONO1 VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TELEFONO2 VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TELEFONO3 VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TELEFONO4 VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$empleado" (
    ID_EMPLEADO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    DOCUMENTO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    PRIMER_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    SEGUNDO_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    NOMBRE VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    NUMERO_CUENTA CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$minimos" (
    ID_MINIMO TIPOS NOT NULL,
    VALOR_MINIMO NUMERICO NOT NULL,
    DESCRIPCION_MINIMO VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "gen$observaciones" (
    ID_IDENTIFICACION SMALLINT NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA DATE,
    HORA TIME,
    OBSERVACION BLOB sub_type 1 segment size 80,
    SEMAFORO INTEGER,
    ID_EMPLEADO VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    BANDERA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$parientesprivilegiados" (
    ID_IDENTIFICACION_PRIV SMALLINT,
    ID_PERSONA_PRIV VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_IDENTIFICACION_PAR SMALLINT,
    ID_PERSONA_PARIENTE VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_PARENTESCO INTEGER,
    ID_AGENCIA SMALLINT);

CREATE TABLE "gen$permisos" (
    ID_EMPLEADO VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    ID_PERMISO INTEGER NOT NULL);

CREATE TABLE "gen$persona" (
    ID_IDENTIFICACION TIPOS NOT NULL,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    LUGAR_EXPEDICION VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA_EXPEDICION DATE,
    NOMBRE VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    PRIMER_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    SEGUNDO_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ID_TIPO_PERSONA TIPOS,
    SEXO CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA_NACIMIENTO DATE,
    LUGAR_NACIMIENTO VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    PROVINCIA_NACIMIENTO VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    DEPTO_NACIMIENTO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    PAIS_NACIMIENTO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ID_TIPO_ESTADO_CIVIL TIPOS NOT NULL,
    ID_CONYUGE VARCHAR (12) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_IDENTIFICACION_CONYUGE TIPOS NOT NULL,
    NOMBRE_CONYUGE VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    PRIMER_APELLIDO_CONYUGE VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    SEGUNDO_APELLIDO_CONYUGE VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ID_APODERADO VARCHAR (12) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_IDENTIFICACION_APODERADO TIPOS,
    NOMBRE_APODERADO VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PRIMER_APELLIDO_APODERADO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SEGUNDO_APELLIDO_APODERADO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PROFESION VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    ID_ESTADO TIPOS NOT NULL,
    ID_TIPO_RELACION TIPOS NOT NULL,
    ID_CIIU TIPOSCIIU NOT NULL,
    EMPRESA_LABORA VARCHAR (100) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    FECHA_INGRESO_EMPRESA DATE,
    CARGO_ACTUAL VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    DECLARACION BLOB sub_type 1 segment size 80,
    INGRESOS_A_PRINCIPAL NUMERICO,
    INGRESOS_OTROS NUMERICO,
    INGRESOS_CONYUGE NUMERICO,
    INGRESOS_CONYUGE_OTROS NUMERICO,
    DESC_INGR_OTROS VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    EGRESOS_ALQUILER NUMERICO,
    EGRESOS_SERVICIOS NUMERICO,
    EGRESOS_TRANSPORTE NUMERICO,
    EGRESOS_ALIMENTACION NUMERICO,
    EGRESOS_DEUDAS NUMERICO,
    EGRESOS_OTROS NUMERICO,
    DESC_EGRE_OTROS VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    EGRESOS_CONYUGE NUMERICO,
    OTROS_EGRESOS_CONYUGE NUMERICO,
    TOTAL_ACTIVOS NUMERICO,
    TOTAL_PASIVOS NUMERICO,
    EDUCACION BOOLEANO,
    RETEFUENTE BOOLEANO,
    ACTA CHAR (10) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA_REGISTRO DATE DEFAULT 'NOW' NOT NULL,
    FOTO BLOB sub_type 0 segment size 80,
    FIRMA BLOB sub_type 0 segment size 80,
    ESCRITURA_CONSTITUCION VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DURACION_SOCIEDAD INTEGER,
    CAPITAL_SOCIAL NUMERICO NOT NULL,
    MATRICULA_MERCANTIL VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FOTO_HUELLA BLOB sub_type 0 segment size 80,
    DATOS_HUELLA BLOB sub_type 0 segment size 80);

CREATE TABLE "gen$plantillaobs" (
    ID_PLANTILLA TIPOS NOT NULL,
    OBSERVACION VARCHAR (500) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "gen$privilegiados" (
    ID_IDENTIFICACION_PRIV SMALLINT NOT NULL,
    ID_PERSONA_PRIV VARCHAR (15) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    ID_AGENCIA SMALLINT);

CREATE TABLE "gen$referencias" (
    TIPO_ID_REFERENCIA TIPOS NOT NULL,
    ID_REFERENCIA VARCHAR (12) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    PRIMER_APELLIDO_REFERENCIA VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    SEGUNDO_APELLIDO_REFERENCIA VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    NOMBRE_REFERENCIA VARCHAR (50) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    DIRECCION_REFERENCIA VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TELEFONO_REFERENCIA VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ES_ES,
    TIPO_REFERENCIA TIPOS NOT NULL,
    PARENTESCO_REFERENCIA TIPOS);

CREATE TABLE "gen$siplaofac" (
    ID_UBICACION INTEGER NOT NULL,
    UBICACION VARCHAR (150) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$tiposciiu" (
    ID_CIIU TIPOSCIIU NOT NULL,
    ID_CLASE_CIIU CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    DESCRIPCION_CIIU VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "gen$tiposclaseciiu" (
    ID_CLASE_CIIU CHAR (1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    DESCRIPCION_CLASE_CIIU VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1);

CREATE TABLE "gen$tiposdireccion" (
    ID_DIRECCION TIPOS NOT NULL,
    DESCRIPCION_DIRECCION VARCHAR (50) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "gen$tiposestadocivil" (
    ID_TIPO_ESTADO_CIVIL TIPOS NOT NULL,
    DESCRIPCION_ESTADO_CIVIL VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1,
    CONYUGE_ESTADO_CIVIL BOOLEANO);

CREATE TABLE "gen$tiposestadopersona" (
    ID_ESTADO TIPOS NOT NULL,
    DESCRIPCION_ESTADO VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "gen$tiposidentificacion" (
    ID_IDENTIFICACION TIPOS NOT NULL,
    DESCRIPCION_IDENTIFICACION VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    MASCARA_IDENTIFICACION VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "gen$tiposinteres" (
    ID_INTERES TIPOS NOT NULL,
    DESCRIPCION_INTERES VARCHAR (100) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    ESTE_VALOR_INTERES BOOLEANO NOT NULL,
    VALOR_INTERES NUMERIC (5, 5));

CREATE TABLE "gen$tiposparentesco" (
    ID_PARENTESCO TIPOS NOT NULL,
    DESCRIPCION_PARENTESCO VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "gen$tipospersona" (
    ID_TIPO_PERSONA TIPOS NOT NULL,
    DESCRIPCION_PERSONA VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES,
    SEXO BOOLEANO);

CREATE TABLE "gen$tiposreferencia" (
    ID_REFERENCIA TIPOS NOT NULL,
    DESCRIPCION_REFERENCIA VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "gen$tiposrelacion" (
    ID_TIPO_RELACION TIPOS NOT NULL,
    DESCRIPCION_RELACION VARCHAR (255) CHARACTER SET ISO8859_1 NOT NULL COLLATE ES_ES);

CREATE TABLE "gen$valorretefuente" (
    ID_RETEFUENTE TIPOS NOT NULL,
    DIARIO_RETEFUENTE NUMERICO NOT NULL,
    TASA_RETEFUENTE DOUBLE PRECISION NOT NULL);

CREATE TABLE "sipla$sdn" (
    ENT_NUM INTEGER NOT NULL,
    SDN_NAME VARCHAR (200) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SDN_TYPE VARCHAR (12) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PROGRAM VARCHAR (20) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TITLE VARCHAR (180) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    CALL_SIGN VARCHAR (8) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VESS_TYPE VARCHAR (25) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    TONNAGE VARCHAR (14) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    GRT VARCHAR (8) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VESS_FLAG VARCHAR (40) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    VESS_OWNER VARCHAR (150) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    REMARKS VARCHAR (300) CHARACTER SET ISO8859_1 COLLATE ES_ES);

CREATE TABLE "sipla$tempoae" (
    NUMERO_CUENTA INTEGER,
    ID_PERSONA VARCHAR (15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    PRIMER_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    SEGUNDO_APELLIDO VARCHAR (30) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    NOMBRE VARCHAR (255) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    ID_TIPO INTEGER,
    VALOR DOUBLE PRECISION);

CREATE TABLE "sipla$url" (
    ID_UBICACION INTEGER NOT NULL,
    UBICACION VARCHAR (150) CHARACTER SET ISO8859_1 COLLATE ISO8859_1);

CREATE TABLE "tes$cheques" (
    ID_BANCO INTEGER NOT NULL,
    NUMERO_CHEQUE INTEGER NOT NULL,
    ID_AGENCIA TIPOS NOT NULL,
    ID_TIPO_CAPTACION TIPOS NOT NULL,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA INTEGER,
    VALOR NUMERICO NOT NULL,
    PLAZA CHAR (1) CHARACTER SET ISO8859_1 COLLATE ISO8859_1,
    FECHA_RECIBIDO DATE NOT NULL,
    FECHA_CONSIGNADO DATE,
    FECHA_PROCESADO DATE,
    LIBERADO BOOLEANO,
    DEVUELTO BOOLEANO,
    CONSIGNADO BOOLEANO);



/* Primary keys definition */

ALTER TABLE IBE$PARAMS_HISTORY ADD PRIMARY KEY (IBE$PH_PROCEDURE_NAME);
ALTER TABLE IBE$REPORTS ADD PRIMARY KEY (IBE$REPORT_ID);
ALTER TABLE MANUAL_LOG ADD PRIMARY KEY (REPLNO, PUBDBNO, SUBDBNO, SEQNO);
ALTER TABLE REPL_LOG ADD PRIMARY KEY (REPLNO, PUBDBNO, SUBDBNO, SEQNO);
ALTER TABLE REPL_SEPARATOR ADD PRIMARY KEY (REPLNO, PUBDBNO, SUBDBNO, RELATIONNO);
ALTER TABLE CAJ$CAJAS ADD CONSTRAINT "FK_CAJ$CAJAS" PRIMARY KEY (ID_CAJA);
ALTER TABLE "caj$cheques" ADD CONSTRAINT "PK_caj$cheques" PRIMARY KEY (ID_BANCO, NUMERO_CHEQUE, FECHA);
ALTER TABLE "caj$cierres" ADD CONSTRAINT "FK_caj$cierres" PRIMARY KEY (ID_CAJA, FECHA);
ALTER TABLE "caj$estados" ADD CONSTRAINT "PK_caj$estados" PRIMARY KEY (ID_ESTADO);
ALTER TABLE CAJ$ORIGEN ADD CONSTRAINT "PK_CAJ$ORIGEN" PRIMARY KEY (ID_ORIGEN);
ALTER TABLE "caj$tiposmovimiento" ADD CONSTRAINT "PK_caj$tiposmovimiento" PRIMARY KEY (ID_TIPO_MOVIMIENTO);
ALTER TABLE "cap$causacioncdat" ADD CONSTRAINT "PK_cap$causacioncdat" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, ANO, MES);
ALTER TABLE CAP$CONTABLE ADD CONSTRAINT "PK_CAP$CONTABLE" PRIMARY KEY (ID_CAPTACION, ID_CONTABLE);
ALTER TABLE "cap$embargo" ADD CONSTRAINT "PK_cap$embargo" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
ALTER TABLE "cap$fechaspagasinteres" ADD CONSTRAINT "FK_cap$fechaspagasinteres" PRIMARY KEY (ID_TIPO_CAPTACION, FECHA_PAGA);
ALTER TABLE "cap$libretas" ADD CONSTRAINT "PK_cap$libretas" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
ALTER TABLE "cap$maestro" ADD CONSTRAINT "PK_cap$maestro" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
ALTER TABLE "cap$maestrosaldo" ADD CONSTRAINT "PK_cap$maestrosaldo" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CUENTA, NUMERO_CUENTA, DIGITO_CUENTA, ANO, MES);
ALTER TABLE "cap$maestrosaldoinicial" ADD CONSTRAINT "PK_cap$maestrosaldoinicial" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, ANO);
ALTER TABLE "cap$maestrosaldosmes" ADD CONSTRAINT "PK_cap$maestrosaldosmes" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, MES);
ALTER TABLE "cap$maestrotitular" ADD CONSTRAINT "PK_cap$maestrotitular" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, ID_IDENTIFICACION, ID_PERSONA);
ALTER TABLE "cap$rangos" ADD CONSTRAINT "FK_cap$rangos" PRIMARY KEY (ID_TIPO_CAPTACION, ID_RANGO);
ALTER TABLE "cap$revalorizaciontmp" ADD CONSTRAINT "PK_cap$revalorizaciontmp" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, ANO);
ALTER TABLE "cap$tablaliquidacion" ADD CONSTRAINT "PK_cap$tablaliquidacion" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, FECHA_PAGO);
ALTER TABLE "cap$tablaliquidacioncon" ADD CONSTRAINT "PK_cap$tablaliquidacioncon" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, FECHA_DESCUENTO);
ALTER TABLE "cap$tipocaptacion" ADD CONSTRAINT "FK_cap$tipocaptacion" PRIMARY KEY (ID_TIPO_CAPTACION);
ALTER TABLE "cap$tiposestado" ADD CONSTRAINT "PK_cap$tiposestado" PRIMARY KEY (ID_ESTADO);
ALTER TABLE "cap$tiposforma" ADD CONSTRAINT "PK_cap$tiposforma" PRIMARY KEY (ID_FORMA);
ALTER TABLE "cap$tiposmovimiento" ADD CONSTRAINT "PK_cap$tiposmovimiento" PRIMARY KEY (ID_TIPO_MOVIMIENTO);
ALTER TABLE "cap$tiposplancontractual" ADD CONSTRAINT "PK_cap$tiposplancontractual" PRIMARY KEY (ID_PLAN);
ALTER TABLE "cap$tipostitulares" ADD CONSTRAINT "PK_cap$tipostitulares" PRIMARY KEY (ID_TIPO_TITULAR);
ALTER TABLE "col$adjetivos" ADD CONSTRAINT "PK_col$adjetivos" PRIMARY KEY (ID_ENTIDAD, ID_ADJETIVO);
ALTER TABLE "col$categoria" ADD CONSTRAINT "FK_col$categoria" PRIMARY KEY (ID_CATEGORIA);
ALTER TABLE "col$causaciones" ADD CONSTRAINT "PK_col$causaciones" PRIMARY KEY (ID_AGENCIA, ID_COLOCACION, FECHA_CORTE);
ALTER TABLE "col$causacionestmp" ADD CONSTRAINT "PK_col$causacionestmp" PRIMARY KEY (ID_AGENCIA, ID_COLOCACION, FECHA_CORTE);
ALTER TABLE "col$clasificacion" ADD CONSTRAINT "FK_col$clasificacion" PRIMARY KEY (ID_CLASIFICACION);
ALTER TABLE COL$CODIGOSPUC ADD CONSTRAINT "FK_COL$CODIGOSPUC" PRIMARY KEY (ID_CLASIFICACION, ID_GARANTIA, ID_CATEGORIA);
ALTER TABLE COL$CODIGOSPUCBASICOS ADD CONSTRAINT "FK_COL$CODIGOSPUCbasicos" PRIMARY KEY (ID_CODIGOPUCBASICO);
ALTER TABLE "col$colocacion" ADD CONSTRAINT "FK_col$colocacion" PRIMARY KEY (ID_AGENCIA, ID_COLOCACION);
ALTER TABLE "col$colocacionabogado" ADD CONSTRAINT "PK_col$colocacionabogado" PRIMARY KEY (ID_AGENCIA, ID_COLOCACION);
ALTER TABLE "col$controlreportedata" ADD CONSTRAINT "PK_col$controlreportedata" PRIMARY KEY (FECHA_CORTE);
ALTER TABLE "col$descuentos" ADD CONSTRAINT "FK_col$descuentos" PRIMARY KEY (ID_DESCUENTO);
ALTER TABLE "col$enteaprobador" ADD CONSTRAINT "FK_col$enteaprobador" PRIMARY KEY (ID_ENTE_APROBADOR);
ALTER TABLE "col$estado" ADD CONSTRAINT "FK_col$estado" PRIMARY KEY (ID_ESTADO_COLOCACION);
ALTER TABLE "col$estadosolicitud" ADD CONSTRAINT "PK_col$estadosolicitud" PRIMARY KEY (ID_ESTADO);
ALTER TABLE "col$garantia" ADD CONSTRAINT "FK_col$garantia" PRIMARY KEY (ID_GARANTIA);
ALTER TABLE "col$inversion" ADD CONSTRAINT "FK_col$inversion" PRIMARY KEY (ID_INVERSION);
ALTER TABLE "col$lineas" ADD CONSTRAINT "FK_col$lineas" PRIMARY KEY (ID_LINEA);
ALTER TABLE "col$novedades" ADD CONSTRAINT "PK_col$novedades" PRIMARY KEY (ID_ENTIDAD, ID_NOVEDAD);
ALTER TABLE "col$porccausacion" ADD CONSTRAINT "PK_col$porccausacion" PRIMARY KEY (ID_CLASIFICACION, ID_GARANTIA, ID_EDAD);
ALTER TABLE "col$requisitos" ADD CONSTRAINT "PK_col$requisitos" PRIMARY KEY (ID_REQUISITO);
ALTER TABLE "col$respaldo" ADD CONSTRAINT "FK_col$respaldo" PRIMARY KEY (ID_RESPALDO);
ALTER TABLE "col$solicitud" ADD CONSTRAINT "PK_col$solicitud" PRIMARY KEY (ID_SOLICITUD, OFICINA);
ALTER TABLE "col$tablaliquidacion" ADD CONSTRAINT "PK_col$tablaliquidacion" PRIMARY KEY (ID_COLOCACION, CUOTA_NUMERO, ID_AGENCIA);
ALTER TABLE "col$tasadtf" ADD CONSTRAINT "PK_col$tasadtf" PRIMARY KEY (ID_TASA_DTF);
ALTER TABLE "col$tasafijas" ADD CONSTRAINT "FK_col$tasafijas" PRIMARY KEY (ID_TASA_FIJA);
ALTER TABLE "col$tasavariables" ADD CONSTRAINT "PK_col$tasavariables" PRIMARY KEY (ID_INTERES);
ALTER TABLE "col$tiposcuota" ADD CONSTRAINT "FK_col$tiposcuota" PRIMARY KEY (ID_TIPOS_CUOTA);
ALTER TABLE CON$CAJADIARIO ADD CONSTRAINT "PK_con$cajadiario" PRIMARY KEY (ID_AGENCIA, CODIGO, DIA, MES);
ALTER TABLE CON$COMPROBANTE ADD CONSTRAINT "PK_con$comprobante" PRIMARY KEY (ID_COMPROBANTE, ID_AGENCIA);
ALTER TABLE CON$CONTROLPLANILLA ADD CONSTRAINT "PK_con$controlplanilla" PRIMARY KEY (FECHA_PLANILLA);
ALTER TABLE "con$fechasplanillas" ADD CONSTRAINT "PK_con$fechasplanillas" PRIMARY KEY (FECHA);
ALTER TABLE CON$PLANILLARESUMEN ADD CONSTRAINT "PK_con$planillaresumen" PRIMARY KEY (CODIGO);
ALTER TABLE CON$PUC ADD CONSTRAINT "PK_CON$PUC" PRIMARY KEY (CODIGO, ID_AGENCIA);
ALTER TABLE "CON$PUCcon" ADD CONSTRAINT "PK_CON$PUCcon" PRIMARY KEY (CODIGO, ID_AGENCIA, MES);
ALTER TABLE "CON$PUCinforme" ADD CONSTRAINT "PK_CON$PUCinforme" PRIMARY KEY (CODIGO);
ALTER TABLE CON$SALDOSCUENTA ADD CONSTRAINT "PK_con$saldoscuenta" PRIMARY KEY (ID_AGENCIA, CODIGO, MES);
ALTER TABLE CON$SALDOSINICIALES ADD CONSTRAINT "PK_con$saldosiniciales" PRIMARY KEY (ID_AGENCIA, CODIGO);
ALTER TABLE CON$TIPOCOMPROBANTE ADD CONSTRAINT "PK_con$tipocomprobante" PRIMARY KEY (ID);
ALTER TABLE "fun$ayudas" ADD CONSTRAINT "PK_fun$ayudas" PRIMARY KEY (ID_AYUDA);
ALTER TABLE "fun$diascerrados" ADD CONSTRAINT "PK_fun$diascerrados" PRIMARY KEY (FECHA);
ALTER TABLE "fun$juveniles" ADD CONSTRAINT "PK_fun$juveniles" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
ALTER TABLE "fun$movimiento" ADD CONSTRAINT "PK_fun$movimiento" PRIMARY KEY (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, CONSECUTIVO);
ALTER TABLE "gen$abogados" ADD CONSTRAINT "PK_gen$abogados" PRIMARY KEY (ID_ABOGADO);
ALTER TABLE "gen$agencia" ADD CONSTRAINT "FK_gen$agencia" PRIMARY KEY (ID_AGENCIA);
ALTER TABLE "gen$bancos" ADD CONSTRAINT "PK_gen$bancos" PRIMARY KEY (ID_BANCO);
ALTER TABLE GEN$BANCOSCONNAL ADD CONSTRAINT "PK_GEN$BANCOSCONNAL" PRIMARY KEY (ID_BANCO);
ALTER TABLE "gen$cedulasvip" ADD CONSTRAINT "PK_gen$cedulasvip" PRIMARY KEY (ID_IDENTIFICACION, ID_PERSONA);
ALTER TABLE "gen$compdescripcion" ADD CONSTRAINT "PK_gen$compdescripcion" PRIMARY KEY (ID_COMPROBANTE);
ALTER TABLE "gen$denominaciones" ADD CONSTRAINT "PK_gen$denominaciones" PRIMARY KEY (ID_DENOMINACION);
ALTER TABLE "gen$empleado" ADD CONSTRAINT "PK_gen$empleado" PRIMARY KEY (ID_EMPLEADO, DOCUMENTO);
ALTER TABLE "gen$permisos" ADD CONSTRAINT "PK_gen$permisos" PRIMARY KEY (ID_EMPLEADO, ID_PERMISO);
ALTER TABLE "gen$persona" ADD CONSTRAINT "PK_gen$persona" PRIMARY KEY (ID_IDENTIFICACION, ID_PERSONA);
ALTER TABLE "gen$plantillaobs" ADD CONSTRAINT "PK_gen$plantillaobs" PRIMARY KEY (ID_PLANTILLA);
ALTER TABLE "gen$privilegiados" ADD CONSTRAINT "PK_gen$privilegiados" PRIMARY KEY (ID_IDENTIFICACION_PRIV, ID_PERSONA_PRIV);
ALTER TABLE "gen$siplaofac" ADD CONSTRAINT "PK_gen$siplaofac" PRIMARY KEY (ID_UBICACION);
ALTER TABLE "gen$tiposclaseciiu" ADD CONSTRAINT "FK_gen$tiposclaseciiu" PRIMARY KEY (ID_CLASE_CIIU);
ALTER TABLE "gen$tiposidentificacion" ADD CONSTRAINT "PK_gen$tiposidentificacion" PRIMARY KEY (ID_IDENTIFICACION);
ALTER TABLE "gen$tipospersona" ADD CONSTRAINT "gen$tipospersona_PK" PRIMARY KEY (ID_TIPO_PERSONA);
ALTER TABLE "gen$valorretefuente" ADD PRIMARY KEY (ID_RETEFUENTE);
ALTER TABLE "sipla$sdn" ADD CONSTRAINT "PK_sipla$sdn" PRIMARY KEY (ENT_NUM);
ALTER TABLE "sipla$url" ADD CONSTRAINT "PK_sipla$url" PRIMARY KEY (ID_UBICACION);
ALTER TABLE "tes$cheques" ADD CONSTRAINT "PK_tes$cheques" PRIMARY KEY (ID_BANCO, NUMERO_CHEQUE, FECHA_RECIBIDO);


/* Unique keys definition */

ALTER TABLE "gen$abogados" ADD CONSTRAINT "IDX_gen$abogados" UNIQUE (ID_IDENTIFICACION, ID_PERSONA);
ALTER TABLE "col$colgarantiasreal" ADD CONSTRAINT "UNQ_col$colgarantiasreal" UNIQUE (ID_AGENCIA, ID_COLOCACION, NUMERO_ESCRITURA, MATRICULA_INMOBILIARIA);


/* Indices definition */

CREATE INDEX "IDX1_cap$tablaliquidacion" ON "cap$tablaliquidacion" (FECHA_PAGO);
CREATE INDEX "IDX_caj$arqueos" ON "caj$arqueos" (ID_AGENCIA, ID_CAJA, FECHA_MOV, ID_DENOMINACION);
CREATE UNIQUE INDEX "IDX_CAJ$CAJAS_1" ON CAJ$CAJAS (ID_EMPLEADO);
CREATE INDEX "IDX_caj$devolucionarqueo" ON "caj$devolucionarqueo" (ID_AGENCIA, ID_CAJA, FECHA_MOV, ORIGEN_MOVIMIENTO);
CREATE INDEX "IDX_caj$movimiento" ON "caj$movimiento" (ID_CAJA, FECHA_MOV, ID_AGENCIA, ORIGEN_MOVIMIENTO);
CREATE INDEX "IDX_cap$canje" ON "cap$canje" (ID_CAJA);
CREATE INDEX "IDX_cap$canje1" ON "cap$canje" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
CREATE INDEX "IDX_cap$extracto" ON "cap$extracto" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
CREATE INDEX "IDX_cap$libretas" ON "cap$libretas" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, NUMERO_INICIAL, NUMERO_FINAL);
CREATE INDEX "IDX_cap$maestrotitular" ON "cap$maestrotitular" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
CREATE INDEX "IDX_cap$maestrotitular1" ON "cap$maestrotitular" (ID_IDENTIFICACION, ID_PERSONA);
CREATE INDEX "IDX_cap$obsestado" ON "cap$obsestado" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
CREATE INDEX "IDX_cap$obsestado1" ON "cap$obsestado" (FECHA);
CREATE INDEX "IDX_cap$obsestado2" ON "cap$obsestado" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, FECHA);
CREATE INDEX "IDX_cap$tablaliquidacion" ON "cap$tablaliquidacion" (ID_TIPO_CAPTACION, FECHA_PAGO, PAGADO);
CREATE INDEX "IDX_cap$tablaliquidacioncon" ON "cap$tablaliquidacioncon" (FECHA_DESCUENTO);
CREATE INDEX "IDX_col$colocacion" ON "col$colocacion" (ID_IDENTIFICACION, ID_PERSONA);
CREATE INDEX "IDX_col$costas" ON "col$costas" (ID_AGENCIA, ID_COLOCACION);
CREATE INDEX "IDX_col$hevaluacion" ON "col$hevaluacion" (ID_AGENCIA, ID_COLOCACION);
CREATE INDEX "IDX_CON$AUXILIAR" ON CON$AUXILIAR (ID_COMPROBANTE, ID_AGENCIA);
CREATE INDEX "IDX_con$saldoscuenta" ON CON$SALDOSCUENTA (CODIGO);
CREATE INDEX "IDX_con$saldosiniciales" ON CON$SALDOSINICIALES (CODIGO);
CREATE INDEX "IDX_fun$consolayudas" ON "fun$consolayudas" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, PERIODO, ID_AYUDA);
CREATE UNIQUE INDEX "IDX_gen$abogados" ON "gen$abogados" (ID_IDENTIFICACION, ID_PERSONA);
CREATE INDEX "IDX_gen$direccion" ON "gen$direccion" (MUNICIPIO);
CREATE INDEX "IDX_gen$observaciones" ON "gen$observaciones" (ID_IDENTIFICACION, ID_PERSONA, BANDERA);
CREATE DESCENDING INDEX "IDX_gen$observaciones1" ON "gen$observaciones" (ID_IDENTIFICACION, ID_PERSONA, FECHA);
CREATE INDEX "IDX_gen$persona1" ON "gen$persona" (PRIMER_APELLIDO);
CREATE INDEX "IDX_gen$persona2" ON "gen$persona" (SEGUNDO_APELLIDO);
CREATE INDEX "IDX_gen$persona3" ON "gen$persona" (ID_PERSONA);
CREATE INDEX "IDX_gen$persona4" ON "gen$persona" (PRIMER_APELLIDO, SEGUNDO_APELLIDO);
CREATE INDEX "IDX_tes$cheques" ON "tes$cheques" (NUMERO_CHEQUE);
CREATE INDEX "IDX_tes$cheques1" ON "tes$cheques" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA);
CREATE INDEX "IDX_tes$cheques2" ON "tes$cheques" (FECHA_RECIBIDO);
CREATE INDEX I_REPL_LOG ON REPL_LOG (SEQNO);
CREATE UNIQUE INDEX "UNQ_col$colgarantiasreal" ON "col$colgarantiasreal" (ID_AGENCIA, ID_COLOCACION, NUMERO_ESCRITURA, MATRICULA_INMOBILIARIA);
CREATE UNIQUE INDEX "CAP$CONTABLE_IDX1" ON CAP$CONTABLE (ID_CAPTACION, ID_CONTABLE);
CREATE INDEX "cap$libretasusada_IDX1" ON "cap$libretasusada" (ID_AGENCIA, ID_TIPO_CAPTACION, NUMERO_CUENTA, DIGITO_CUENTA, NUMERO_TALON);
CREATE INDEX "col$colgarantias_IDX1" ON "col$colgarantias" (ID_IDENTIFICACION, ID_PERSONA);
CREATE INDEX "col$colgarantias_IDX2" ON "col$colgarantias" (ID_AGENCIA, ID_COLOCACION);
CREATE INDEX "col$colgarantiasreal_IDX1" ON "col$colgarantiasreal" (ID_AGENCIA, ID_COLOCACION);
CREATE INDEX "col$extracto_IDX1" ON "col$extracto" (ID_AGENCIA, ID_COLOCACION);
CREATE INDEX "col$extracto_IDX2" ON "col$extracto" (ID_AGENCIA, ID_COLOCACION, CUOTA_EXTRACTO);
CREATE INDEX "col$tablaliquidacion_IDX1" ON "col$tablaliquidacion" (ID_COLOCACION, CUOTA_NUMERO);
CREATE INDEX "CON$AUXILIAR_IDX1" ON CON$AUXILIAR (CODIGO, FECHA);
CREATE INDEX "con$comprobante_IDX1" ON CON$COMPROBANTE (FECHADIA);
CREATE INDEX "gen$direccion_IDX1" ON "gen$direccion" (ID_IDENTIFICACION, ID_PERSONA);


SET TERM ^ ; 

/* Stored procedures definition */


/* Stored Procedure: ACTUALIZAR */
CREATE PROCEDURE ACTUALIZAR 
AS
  declare variable Col char(11);
  declare variable Cuenta integer;
begin
  for
    select "col$colocacion".ID_COLOCACION, "cap$maestrotitular".NUMERO_CUENTA from "col$colocacion" inner join
    "cap$maestrotitular" ON ("col$colocacion".ID_IDENTIFICACION = "cap$maestrotitular".ID_IDENTIFICACION and "col$colocacion".ID_PERSONA = "cap$maestrotitular".ID_PERSONA)
    where
    "cap$maestrotitular".ID_TIPO_CAPTACION = 1 and "cap$maestrotitular".NUMERO_TITULAR = 1
    order by "cap$maestrotitular".NUMERO_CUENTA
  into :Col,:Cuenta
  do
    update "col$colocacion" SET "col$colocacion".NUMERO_CUENTA = :Cuenta
    where "col$colocacion".ID_COLOCACION = :Col;
end
^


/* Stored Procedure: BALANCE_CONSOLIDADO */
CREATE PROCEDURE BALANCE_CONSOLIDADO (
    MES INTEGER,
    NIVELX INTEGER)
RETURNS (
    CODIGO CHAR (18),
    NOMBRE VARCHAR (100),
    NIVEL INTEGER,
    SALDO NUMERIC (18, 3))
AS
declare variable MOVIMIENTOS NUMERIC(18,3);
BEGIN
  FOR
    SELECT CODIGO,NOMBRE,NIVEL FROM CON$PUC WHERE NIVEL <= :NIVELX and ((CON$PUC.CODIGO < '400000000000000000') or (CON$PUC.CODIGO >= '800000000000000000'))
    ORDER BY CODIGO ASC INTO :CODIGO,:NOMBRE,:NIVEL
    DO
     BEGIN
      SELECT SUM(CON$SALDOSINICIALES.SALDOINICIAL) AS SALDOINICIAL FROM CON$SALDOSINICIALES WHERE CON$SALDOSINICIALES.CODIGO = :CODIGO INTO :SALDO;
      if (SALDO IS NULL) then SALDO = 0;
      SELECT SUM(CON$SALDOSCUENTA.DEBITO - CON$SALDOSCUENTA.CREDITO) AS MOVIMIENTO FROM CON$SALDOSCUENTA WHERE CON$SALDOSCUENTA.CODIGO = :CODIGO and CON$SALDOSCUENTA.MES <= :MES INTO :MOVIMIENTOS;
      if (MOVIMIENTOS IS NULL) then MOVIMIENTOS = 0;
      SALDO = SALDO + MOVIMIENTOS;
/*      if (SALDO <> 0) then*/
         SUSPEND;
    END
END
^


/* Stored Procedure: BALANCE_GENERAL_CONSOLIDADO */
CREATE PROCEDURE BALANCE_GENERAL_CONSOLIDADO (
    MES INTEGER,
    NIVELX INTEGER)
RETURNS (
    CODIGO CHAR (18),
    NOMBRE VARCHAR (100),
    NIVEL INTEGER,
    SALDO NUMERIC (18, 3))
AS
declare variable MOVIMIENTOS NUMERIC(18,3);
BEGIN
  FOR
    SELECT CODIGO,NOMBRE,NIVEL FROM CON$PUC WHERE NIVEL <= :NIVELX
    ORDER BY CODIGO ASC INTO :CODIGO,:NOMBRE,:NIVEL
    DO
     BEGIN
      SELECT SUM(CON$SALDOSINICIALES.SALDOINICIAL) AS SALDOINICIAL FROM CON$SALDOSINICIALES WHERE CON$SALDOSINICIALES.CODIGO = :CODIGO INTO :SALDO;
      if (SALDO IS NULL) then SALDO = 0;
      SELECT SUM(CON$SALDOSCUENTA.DEBITO - CON$SALDOSCUENTA.CREDITO) AS MOVIMIENTO FROM CON$SALDOSCUENTA WHERE CON$SALDOSCUENTA.CODIGO = :CODIGO and CON$SALDOSCUENTA.MES <= :MES INTO :MOVIMIENTOS;
      if (MOVIMIENTOS IS NULL) then MOVIMIENTOS = 0;
      SALDO = SALDO + MOVIMIENTOS;
/*      if (SALDO <> 0) then*/
         SUSPEND;
    END
END
^


/* Stored Procedure: BUSCA_PERSONA */
CREATE PROCEDURE BUSCA_PERSONA (
    NOMBRE VARCHAR (120))
RETURNS (
    DIRECCION VARCHAR (100),
    ID_PERSONA VARCHAR (15),
    NOMBRES VARCHAR (90),
    APELLIDO1 VARCHAR (50),
    APELLIDO2 VARCHAR (50),
    NUMERO_CUENTA INTEGER,
    FECHA_NACIMIENTO DATE,
    BARRIO VARCHAR (50),
    MUNICIPIO VARCHAR (50),
    TELEFONO VARCHAR (20))
AS
BEGIN
  /* Procedure body */
for
SELECT DISTINCT
  "gen$direccion".DIRECCION,
  "gen$direccion".BARRIO,
  "gen$direccion".MUNICIPIO,
  "gen$persona".FECHA_NACIMIENTO,
  "cap$maestrotitular".NUMERO_CUENTA,
  "gen$persona".ID_PERSONA,
  "gen$persona".NOMBRE,
  "gen$persona".PRIMER_APELLIDO,
  "gen$persona".SEGUNDO_APELLIDO,
  "gen$direccion".TELEFONO1
FROM
  "gen$direccion"
  RIGHT OUTER JOIN "gen$persona" ON ("gen$direccion".ID_PERSONA = "gen$persona".ID_PERSONA)
  INNER JOIN "cap$maestrotitular" ON ("gen$persona".ID_PERSONA = "cap$maestrotitular".ID_PERSONA)
 WHERE (PRIMER_APELLIDO||' '||SEGUNDO_APELLIDO ||' '||NOMBRE LIKE :"NOMBRE")
  INTO :DIRECCION,:BARRIO,:MUNICIPIO,:FECHA_NACIMIENTO,:NUMERO_CUENTA,:ID_PERSONA,:NOMBRES,:APELLIDO1,:APELLIDO2,:TELEFONO
 DO
  SUSPEND;

END
^


/* Stored Procedure: BUSCA_PERSONA_GRAL */
CREATE PROCEDURE BUSCA_PERSONA_GRAL (
    PRIMERO VARCHAR (50),
    SEGUNDO VARCHAR (50),
    NOMBRE1 VARCHAR (90))
RETURNS (
    ID_IDENTIFICACION INTEGER,
    ID_PERSONA VARCHAR (15),
    NOMBRES VARCHAR (90),
    APELLIDO1 VARCHAR (50),
    APELLIDO2 VARCHAR (50),
    NUMERO_CUENTA INTEGER)
AS
BEGIN
  /* Procedure body */
FOR
SELECT
  "gen$persona".ID_IDENTIFICACION,
  "gen$persona".ID_PERSONA,
  "gen$persona".NOMBRE,
  "gen$persona".PRIMER_APELLIDO,
  "gen$persona".SEGUNDO_APELLIDO,
  "cap$maestrotitular".NUMERO_CUENTA
FROM
  "gen$persona"
LEFT JOIN "cap$maestrotitular" ON
( "gen$persona".ID_IDENTIFICACION = "cap$maestrotitular".ID_IDENTIFICACION
and "gen$persona".ID_PERSONA = "cap$maestrotitular".ID_PERSONA)
WHERE
(PRIMER_APELLIDO LIKE :PRIMERO and
SEGUNDO_APELLIDO LIKE :SEGUNDO and
NOMBRE LIKE :NOMBRE1 and "cap$maestrotitular".ID_TIPO_CAPTACION = 1)
ORDER BY PRIMER_APELLIDO,SEGUNDO_APELLIDO,NOMBRE
INTO :ID_IDENTIFICACION,:ID_PERSONA,:NOMBRES,:APELLIDO1,:APELLIDO2,
     :NUMERO_CUENTA
do
SUSPEND;

END
^


/* Stored Procedure: BUSCA_PERSONA_N1 */
CREATE PROCEDURE BUSCA_PERSONA_N1 (
    NIT VARCHAR (15))
RETURNS (
    DIRECCION VARCHAR (100),
    ID_PERSONA VARCHAR (15),
    NOMBRES VARCHAR (90),
    APELLIDO1 VARCHAR (50),
    APELLIDO2 VARCHAR (50),
    NUMERO_CUENTA INTEGER,
    FECHA_NACIMIENTO DATE,
    BARRIO VARCHAR (50),
    MUNICIPIO VARCHAR (50),
    TELEFONO VARCHAR (20),
    ID_IDENTIFICACION INTEGER,
    LUGAR_EXPEDICION VARCHAR (50),
    SEXO CHAR (1),
    TIPO_NIT INTEGER,
    EDUCACION INTEGER)
AS
BEGIN
  /* Procedure body */
FOR
SELECT DISTINCT
  "gen$direccion".DIRECCION,
  "gen$direccion".BARRIO,
  "gen$direccion".MUNICIPIO,
  "gen$persona".FECHA_NACIMIENTO,
  "cap$maestrotitular".NUMERO_CUENTA,
  "gen$persona".ID_PERSONA,
  "gen$persona".NOMBRE,
  "gen$persona".PRIMER_APELLIDO,
  "gen$persona".SEGUNDO_APELLIDO,
  "gen$direccion".TELEFONO1,
  "gen$persona".ID_IDENTIFICACION,
  "gen$persona".LUGAR_EXPEDICION,
  "gen$persona".SEXO,
  "gen$persona".ID_TIPO_PERSONA,
  "gen$persona".EDUCACION
FROM
  "gen$direccion"
  INNER JOIN "gen$persona" ON ("gen$direccion".ID_PERSONA = "gen$persona".ID_PERSONA)
  INNER JOIN "cap$maestrotitular" ON ("gen$persona".ID_PERSONA = "cap$maestrotitular".ID_PERSONA)
  INNER JOIN "cap$maestro" ON ("cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA)
WHERE
  ("gen$persona".ID_PERSONA = :NIT) AND
  ("cap$maestrotitular".numero_titular = 1) AND
  ("cap$maestro".id_estado = 1) and
  ("gen$direccion".id_direccion = 1) and ("cap$maestrotitular".ID_TIPO_CAPTACION = 1)
  INTO :DIRECCION,:BARRIO,:MUNICIPIO,:FECHA_NACIMIENTO,:NUMERO_CUENTA,:ID_PERSONA,:NOMBRES,:APELLIDO1,:APELLIDO2,:TELEFONO,:ID_IDENTIFICACION,:LUGAR_EXPEDICION,:SEXO
  ,:TIPO_NIT,:EDUCACION
  do
  SUSPEND;

END
^


/* Stored Procedure: P_CAP_0010 */
CREATE PROCEDURE P_CAP_0010 (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    FECHA1 DATE,
    FECHA2 DATE)
RETURNS (
    MOVIMIENTO NUMERIC (18, 3))
AS
declare variable SALDO NUMERIC(18,3);
begin
  /* Procedure Text */
  FOR
     SELECT SUM("cap$extracto".VALOR_DEBITO - "cap$extracto".VALOR_CREDITO) AS MOVIMIENTO from "cap$extracto"
     Where
     "cap$extracto".ID_AGENCIA = :ID_AGENCIA and
     "cap$extracto".ID_TIPO_CAPTACION = :ID_TIPO_CAPTACION and
     "cap$extracto".NUMERO_CUENTA = :NUMERO_CUENTA and
     "cap$extracto".DIGITO_CUENTA = :DIGITO_CUENTA and
     "cap$extracto".FECHA_MOVIMIENTO BETWEEN :FECHA1 and :FECHA2

INTO  :SALDO
DO
  MOVIMIENTO = SALDO;
  if (SALDO IS NULL) then
     MOVIMIENTO = 0;
SUSPEND;
end
^


/* Stored Procedure: P_CAP_0012 */
CREATE PROCEDURE P_CAP_0012 (
    ID_AGENCIA INTEGER,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ANO CHAR (4))
RETURNS (
    SALDOAHORROS NUMERIC (18, 3))
AS
declare variable SALDO NUMERIC(18,3);
begin
  /* Procedure Text */
  FOR
     Select "cap$maestrosaldoinicial".SALDO_INICIAL from "cap$maestro"
     LEFT JOIN "cap$maestrosaldoinicial" ON ("cap$maestro".ID_AGENCIA = "cap$maestrosaldoinicial".ID_AGENCIA) AND
     ("cap$maestro".ID_TIPO_CAPTACION = "cap$maestrosaldoinicial".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$maestrosaldoinicial".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$maestrosaldoinicial".DIGITO_CUENTA)
     Where
     "cap$maestro".ID_AGENCIA = :ID_AGENCIA and
     "cap$maestro".ID_TIPO_CAPTACION = :ID_TIPO_CAPTACION and
     "cap$maestro".NUMERO_CUENTA = :NUMERO_CUENTA and
     "cap$maestro".DIGITO_CUENTA = :DIGITO_CUENTA and
     "cap$maestrosaldoinicial".ANO = :ANO
     INTO  :SALDO
     DO
     SALDOAHORROS = SALDO;
      if (SALDO IS NULL) then
        SALDOAHORROS = 0;
     SUSPEND;
end
^


/* Stored Procedure: SALDO_ACTUAL */
CREATE PROCEDURE SALDO_ACTUAL (
    AG SMALLINT,
    TP SMALLINT,
    CTA INTEGER,
    DGT INTEGER,
    ANO CHAR (4),
    FECHA1 DATE,
    FECHA2 DATE)
RETURNS (
    SALDO_ACTUAL NUMERIC (18, 3))
AS
 declare variable AGENCIA SMALLINT;
 declare variable TIPO SMALLINT;
 declare variable NUMERO_CUENTA INTEGER;
 declare variable DIGITO_CUENTA INTEGER;
 declare variable SALDO NUMERIC(18,3);
 declare variable INICIAL NUMERIC(18,3);
 declare variable MOVIMIENTO NUMERIC(18,3);
BEGIN
  FOR
    SELECT "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    FROM "cap$maestro"
    WHERE "cap$maestro".ID_TIPO_CAPTACION = :TP and "cap$maestro".ID_AGENCIA = :AG and "cap$maestro".NUMERO_CUENTA = :CTA and "cap$maestro".DIGITO_CUENTA = :DGT
    ORDER BY "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    INTO :AGENCIA, :TIPO, :NUMERO_CUENTA, :DIGITO_CUENTA
  DO
   BEGIN
    EXECUTE PROCEDURE P_CAP_0012 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,ANO) RETURNING_VALUES :INICIAL;
    EXECUTE PROCEDURE P_CAP_0010 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,FECHA1,FECHA2) RETURNING_VALUES :MOVIMIENTO;
    SALDO_ACTUAL = INICIAL + MOVIMIENTO;
    SUSPEND;
   END
END
^


/* Stored Procedure: BUSCAR_APORTES */
CREATE PROCEDURE BUSCAR_APORTES 
RETURNS (
    TIPO INTEGER,
    NUMERO INTEGER,
    DIGITO INTEGER)
AS
declare variable ID INTEGER;
declare variable SALDO NUMERIC(18,3);
declare variable ESTADO INTEGER;
BEGIN
  /* Procedure body */
  FOR
    SELECT ID_AGENCIA,ID_TIPO_CAPTACION,NUMERO_CUENTA,DIGITO_CUENTA, "cap$maestro".ID_ESTADO from "cap$maestro"
    INNER JOIN "cap$tiposestado" ON ("cap$tiposestado".ID_ESTADO = "cap$maestro".ID_ESTADO)
    WHERE ID_TIPO_CAPTACION = 2 and "cap$tiposestado".SE_SUMA <> 0
    ORDER BY NUMERO_CUENTA
    INTO :ID,:TIPO,:NUMERO,:DIGITO,:ESTADO
  do
  BEGIN
    DIGITO = DIGITO - 1;
    if (DIGITO < 0) then DIGITO = 0;
    EXECUTE PROCEDURE SALDO_ACTUAL(ID,1,NUMERO,DIGITO,'2004','2004/01/01','2004/08/09') returning_values :SALDO;
    if (SALDO = 0 and ESTADO <> 10) then
      SUSPEND;
  end
END
^


/* Stored Procedure: BUSCAR_RETEFUENTE */
CREATE PROCEDURE BUSCAR_RETEFUENTE 
RETURNS (
    ID INTEGER,
    PERSONA VARCHAR (15),
    CUENTA INTEGER,
    RETEFUENTE NUMERIC (18, 3))
AS
declare variable AGENCIA INTEGER;
declare variable TIPO INTEGER;
declare variable DIGITO INTEGER;
BEGIN
  /* Procedure body */
  FOR
    SELECT ID_IDENTIFICACION,ID_PERSONA FROM "gen$persona" WHERE ID_TIPO_PERSONA = 2 INTO :ID,:PERSONA
  DO
    BEGIN
    FOR
     SELECT "cap$maestrotitular".ID_AGENCIA,"cap$maestrotitular".ID_TIPO_CAPTACION, "cap$maestrotitular".NUMERO_CUENTA, "cap$maestrotitular".DIGITO_CUENTA
     FROM "cap$maestrotitular"
     WHERE "cap$maestrotitular".ID_IDENTIFICACION = :ID and
           "cap$maestrotitular".ID_PERSONA = :PERSONA and
           "cap$maestrotitular".NUMERO_TITULAR = 1 and
           "cap$maestrotitular".ID_TIPO_CAPTACION = 2
     INTO :AGENCIA,:TIPO,:CUENTA,:DIGITO
     DO BEGIN
       SELECT SUM("cap$extracto".VALOR_CREDITO) AS RETEFUENTE from "cap$extracto" WHERE
       "cap$extracto".ID_AGENCIA = :AGENCIA and "cap$extracto".ID_TIPO_CAPTACION = :TIPO and
       "cap$extracto".NUMERO_CUENTA = :CUENTA and "cap$extracto".DIGITO_CUENTA = :DIGITO and
       (("cap$extracto".ID_TIPO_MOVIMIENTO = 8) or ("cap$extracto".ID_TIPO_MOVIMIENTO = 16))
       INTO :RETEFUENTE;
       if (RETEFUENTE > 0) then
         SUSPEND;
     END
    END
END
^


/* Stored Procedure: CAJ_SALDOACTUAL */
CREATE PROCEDURE CAJ_SALDOACTUAL (
    ID_CAJA SMALLINT,
    FECHA1 TIMESTAMP,
    FECHA2 TIMESTAMP)
RETURNS (
    SALDOACTUAL NUMERIC (18, 3))
AS
declare variable SALDO NUMERIC(18,3);
declare variable MOVIMIENTO NUMERIC(18,3);
declare variable CARTERA NUMERIC(18,3);
declare variable FECHA DATE;
BEGIN
  /* Procedure body */
  FECHA = FECHA1;
  select SUM(SALDO_INICIAL_EFECTIVO + SALDO_INICIAL_MONEDA) as SALDO from "caj$cierres" where ID_CAJA = :ID_CAJA and FECHA = :FECHA
  into :SALDO;
  select SUM(BILLETES + MONEDAS) as MOV from "caj$movimiento"
         where ID_CAJA = :ID_CAJA and FECHA_MOV BETWEEN :FECHA1 and :FECHA2
  into :MOVIMIENTO;
  select SUM(BILLETES + MONEDAS) as CAR from "caj$movimientocol"
         where ID_CAJA = :ID_CAJA and FECHA_MOV BETWEEN :FECHA1 and :FECHA2
  into :CARTERA;
  if (SALDO IS NULL) then
     SALDO = 0;
  if (MOVIMIENTO IS NULL) then
     MOVIMIENTO = 0;
  if (CARTERA IS NULL) then
     CARTERA = 0;
  SALDOACTUAL = SALDO + MOVIMIENTO + CARTERA;
  SUSPEND;
END
^


/* Stored Procedure: CUENTAS_DIAN */
CREATE PROCEDURE CUENTAS_DIAN 
RETURNS (
    ID_PERSONA VARCHAR (15),
    NUMERO INTEGER)
AS
declare variable ID VARCHAR(15);
BEGIN
  FOR
    SELECT * FROM "dian$documentos" INTO :ID_PERSONA
  DO
   BEGIN
   FOR
    SELECT NUMERO_CUENTA from "cap$maestrotitular"
    WHERE ID_PERSONA = :ID_PERSONA and NUMERO_TITULAR = 1 and ID_TIPO_CAPTACION = 1
    INTO :NUMERO
    DO
    if ( NUMERO IS NULL ) then NUMERO = 0;
    SUSPEND;
   END
END
^


/* Stored Procedure: DIAN_CUENTASABIERTAS */
CREATE PROCEDURE DIAN_CUENTASABIERTAS 
RETURNS (
    ID_PERSONA VARCHAR (15),
    APELLIDOS VARCHAR (50),
    NOMBRES VARCHAR (50),
    DIRECCION VARCHAR (150),
    VALOR NUMERIC (18, 3),
    NUMERO_CUENTA VARCHAR (11))
AS
declare variable ID VARCHAR(15);
BEGIN
  FOR
    SELECT ID_PERSONA, APELLIDO, NOMBRE, DIRECCION from "dian$cuentasabiertas"
    ORDER BY ID_PERSONA
    INTO :ID_PERSONA, :APELLIDOS,:NOMBRES,:DIRECCION
  DO
   BEGIN
   FOR
    SELECT VALOR_CREDITO, NUMERO_CUENTA FROM "dian$cuentas"
    WHERE ID_PERSONA = :ID_PERSONA and TIPO_CUENTA <> 5
     INTO :VALOR, :NUMERO_CUENTA
   DO
    SUSPEND;
  END
END
^


/* Stored Procedure: DIAN_NOTASCREDITO */
CREATE PROCEDURE DIAN_NOTASCREDITO 
RETURNS (
    ID_PERSONA VARCHAR (15),
    APELLIDOS VARCHAR (50),
    NOMBRES VARCHAR (50),
    DIRECCION VARCHAR (150),
    VALOR NUMERIC (18, 3),
    NUMERO_CUENTA VARCHAR (11))
AS
declare variable ID VARCHAR(15);
BEGIN
  FOR
    SELECT ID_PERSONA, APELLIDO, NOMBRE, DIRECCION from "dian$notascredito"
    ORDER BY ID_PERSONA
    INTO :ID_PERSONA, :APELLIDOS,:NOMBRES,:DIRECCION
  DO
   BEGIN
   FOR
    SELECT VALOR_CREDITO, NUMERO_CUENTA FROM "dian$cuentas"
    WHERE ID_PERSONA = :ID_PERSONA and TIPO_CUENTA <> 5
     INTO :VALOR, :NUMERO_CUENTA
   DO
    SUSPEND;
  END
END
^


/* Stored Procedure: ESTADO_IYG_CONSOLIDADO */
CREATE PROCEDURE ESTADO_IYG_CONSOLIDADO (
    MES INTEGER,
    NIVELX INTEGER)
RETURNS (
    CODIGO CHAR (18),
    NIVEL INTEGER,
    NOMBRE VARCHAR (100),
    SALDO NUMERIC (18, 3))
AS
declare variable MOVIMIENTOS NUMERIC(18,3);
BEGIN
  FOR
    SELECT CODIGO,NOMBRE,NIVEL FROM CON$PUC WHERE NIVEL <= :NIVELX and (CON$PUC.CODIGO BETWEEN '400000000000000000' and '799999999999999999')
    ORDER BY CODIGO ASC INTO :CODIGO,:NOMBRE,:NIVEL
    DO
     BEGIN
      SELECT SUM(CON$SALDOSINICIALES.SALDOINICIAL) AS SALDOINICIAL FROM CON$SALDOSINICIALES WHERE CON$SALDOSINICIALES.CODIGO = :CODIGO INTO :SALDO;
      if (SALDO IS NULL) then SALDO = 0;
      SELECT SUM(CON$SALDOSCUENTA.DEBITO - CON$SALDOSCUENTA.CREDITO) AS MOVIMIENTO FROM CON$SALDOSCUENTA WHERE CON$SALDOSCUENTA.CODIGO = :CODIGO and CON$SALDOSCUENTA.MES <= :MES INTO :MOVIMIENTOS;
      if (MOVIMIENTOS IS NULL) then MOVIMIENTOS = 0;
      SALDO = SALDO + MOVIMIENTOS;
      if (SALDO <> 0) then
         SUSPEND;
    END
END
^


/* Stored Procedure: "gen$abogados_ID_ABOGADO_AutoInc" */
CREATE PROCEDURE "gen$abogados_ID_ABOGADO_AutoInc" 
RETURNS (
    NEW_VALUE INTEGER)
AS
BEGIN
  NEW_VALUE = GEN_ID("gen$abogados_ID_ABOGADO_GEN", 1);
END
^


/* Stored Procedure: P_CAP_0000 */
CREATE PROCEDURE P_CAP_0000 (
    ID INTEGER)
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (255),
    ID_ESTADO SMALLINT,
    AMORTIZACION INTEGER,
    FECHA_APERTURA DATE,
    PLAZO INTEGER,
    FECHA_VENCIMIENTO DATE,
    FECHA_PRORROGA DATE,
    FECHA_VENCIMIENTO_PRORROGA DATE,
    MODALIDAD CHAR (1),
    TASA_EFECTIVA DOUBLE PRECISION,
    VALOR_INICIAL NUMERIC (18, 3))
AS
begin
  /* Procedure Text */
  FOR
              SELECT
              "cap$maestro".ID_AGENCIA,
              "cap$maestro".ID_TIPO_CAPTACION,
              "cap$maestro".NUMERO_CUENTA,
              "cap$maestro".DIGITO_CUENTA,
              "gen$persona".ID_IDENTIFICACION,
              "gen$persona".ID_PERSONA,
              "gen$persona".PRIMER_APELLIDO,
              "gen$persona".SEGUNDO_APELLIDO,
              "gen$persona".NOMBRE,
              "cap$maestro".ID_ESTADO,
              "cap$maestro".AMORTIZACION,
              "cap$maestro".FECHA_APERTURA,
              "cap$maestro".PLAZO_CUENTA,
              "cap$maestro".FECHA_VENCIMIENTO,
              "cap$maestro".FECHA_PRORROGA,
              "cap$maestro".FECHA_VENCIMIENTO_PRORROGA,
              "cap$maestro".MODALIDAD,
              "cap$maestro".TASA_EFECTIVA,
              "cap$maestro".VALOR_INICIAL
              FROM
              "cap$maestro"
              LEFT JOIN "cap$maestrotitular" ON ( "cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
              "cap$maestrotitular".ID_TIPO_CAPTACION = "cap$maestro".ID_TIPO_CAPTACION and
              "cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
              "cap$maestrotitular".DIGITO_CUENTA = "cap$maestro".DIGITO_CUENTA and "cap$maestrotitular".NUMERO_TITULAR = 1 )
              LEFT JOIN "gen$persona" ON ("gen$persona".ID_IDENTIFICACION = "cap$maestrotitular".ID_IDENTIFICACION and
              "gen$persona".ID_PERSONA = "cap$maestrotitular".ID_PERSONA )
              INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
               WHERE
              "cap$maestro".ID_TIPO_CAPTACION = :ID  and "cap$maestro".NUMERO_CUENTA > 0
              ORDER BY "cap$maestro".ID_AGENCIA,"cap$maestro".ID_TIPO_CAPTACION,"cap$maestro".NUMERO_CUENTA,"cap$maestro".DIGITO_CUENTA
              INTO  :ID_AGENCIA, :ID_TIPO_CAPTACION, :NUMERO_CUENTA, :DIGITO_CUENTA, :ID_IDENTIFICACION, :ID_PERSONA, :PRIMER_APELLIDO,:SEGUNDO_APELLIDO,:NOMBRE, :ID_ESTADO, :AMORTIZACION,
                    :FECHA_APERTURA,:PLAZO,:FECHA_VENCIMIENTO,:FECHA_PRORROGA,:FECHA_VENCIMIENTO_PRORROGA,:MODALIDAD,:TASA_EFECTIVA,:VALOR_INICIAL
  DO
  SUSPEND;
end
^


/* Stored Procedure: P_CAP_0000T */
CREATE PROCEDURE P_CAP_0000T (
    ID INTEGER)
RETURNS (
    TOTAL INTEGER)
AS
begin
  /* Procedure Text */
  FOR
              SELECT
              COUNT(*) AS TOTAL
              FROM
              "cap$maestro"
              LEFT JOIN "cap$maestrotitular" ON ( "cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
              "cap$maestrotitular".ID_TIPO_CAPTACION = "cap$maestro".ID_TIPO_CAPTACION and
              "cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
              "cap$maestrotitular".DIGITO_CUENTA = "cap$maestro".DIGITO_CUENTA and "cap$maestrotitular".NUMERO_TITULAR = 1 )
              LEFT JOIN "gen$persona" ON ("gen$persona".ID_IDENTIFICACION = "cap$maestrotitular".ID_IDENTIFICACION and
              "gen$persona".ID_PERSONA = "cap$maestrotitular".ID_PERSONA )
              INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
               WHERE
              "cap$maestro".ID_TIPO_CAPTACION = :ID  and "cap$maestro".NUMERO_CUENTA > 0
              INTO  :TOTAL
  DO
  SUSPEND;
end
^


/* Stored Procedure: P_CAP_0001 */
CREATE PROCEDURE P_CAP_0001 (
    ID INTEGER)
RETURNS (
    TOTAL INTEGER)
AS
begin
  /* Procedure Text */
  SELECT COUNT(*) FROM "cap$maestro" INNER JOIN "cap$tiposestado" ON "cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO
   WHERE ID_TIPO_CAPTACION = :"ID" and PAGA_INTERES <> 0
   INTO :"TOTAL";
  SUSPEND;
end
^


/* Stored Procedure: P_CAP_0001_L */
CREATE PROCEDURE P_CAP_0001_L (
    ID INTEGER,
    DESDE INTEGER,
    HASTA INTEGER)
RETURNS (
    TOTAL INTEGER)
AS
begin
  /* Procedure Text */
  SELECT COUNT(*) FROM "cap$maestro" INNER JOIN "cap$tiposestado" ON "cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO
   WHERE ID_TIPO_CAPTACION = :"ID" and PAGA_INTERES <> 0 AND NUMERO_CUENTA BETWEEN :DESDE and :HASTA
   INTO :"TOTAL";
  SUSPEND;
end
^


/* Stored Procedure: P_CAP_0002 */
CREATE PROCEDURE P_CAP_0002 (
    ID INTEGER)
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    RETEFUENTE SMALLINT,
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (90))
AS
begin
  /* Procedure Text */
  FOR
              SELECT
              "cap$maestro".ID_AGENCIA,
              "cap$maestro".ID_TIPO_CAPTACION,
              "cap$maestro".NUMERO_CUENTA,
              "cap$maestro".DIGITO_CUENTA,
              "gen$persona".ID_IDENTIFICACION,
              "gen$persona".ID_PERSONA,
              "gen$persona".RETEFUENTE,
              "gen$persona".PRIMER_APELLIDO,
              "gen$persona".SEGUNDO_APELLIDO,
              "gen$persona".NOMBRE
              FROM
              "cap$maestro"
              LEFT JOIN "cap$maestrotitular" ON ( "cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
              "cap$maestrotitular".ID_TIPO_CAPTACION = "cap$maestro".ID_TIPO_CAPTACION and
              "cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
              "cap$maestrotitular".DIGITO_CUENTA = "cap$maestro".DIGITO_CUENTA and "cap$maestrotitular".NUMERO_TITULAR = 1 )
              LEFT JOIN "gen$persona" ON ("gen$persona".ID_IDENTIFICACION = "cap$maestrotitular".ID_IDENTIFICACION and
              "gen$persona".ID_PERSONA = "cap$maestrotitular".ID_PERSONA )
              INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
               WHERE
              "cap$maestro".ID_TIPO_CAPTACION = :ID and ("cap$tiposestado".PAGA_INTERES <> 0)
              ORDER BY "cap$maestro".ID_AGENCIA,"cap$maestro".ID_TIPO_CAPTACION,"cap$maestro".NUMERO_CUENTA,"cap$maestro".DIGITO_CUENTA
              INTO  :ID_AGENCIA, :ID_TIPO_CAPTACION, :NUMERO_CUENTA, :DIGITO_CUENTA, :ID_IDENTIFICACION, :ID_PERSONA, :RETEFUENTE,:PRIMER_APELLIDO, :SEGUNDO_APELLIDO, :NOMBRE
  DO
  SUSPEND;
end
^


/* Stored Procedure: P_CAP_0003 */
CREATE PROCEDURE P_CAP_0003 (
    ID INTEGER,
    FECHA DATE)
RETURNS (
    TOTAL INTEGER)
AS
BEGIN
  /* Procedure body */
  FOR
   SELECT
    COUNT(*)
FROM
  "cap$tablaliquidacion"
  INNER JOIN "cap$maestro" ON ("cap$maestro".ID_AGENCIA = "cap$tablaliquidacion".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$tablaliquidacion".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$tablaliquidacion".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$tablaliquidacion".DIGITO_CUENTA)
  INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
WHERE
  ("cap$tablaliquidacion".ID_TIPO_CAPTACION = :ID) AND
  ("cap$tablaliquidacion".FECHA_PAGO = :FECHA) AND
  ("cap$tablaliquidacion".PAGADO = 0) AND
  ("cap$tiposestado".PAGA_INTERES <> 0)
INTO :TOTAL
DO
SUSPEND;
END
^


/* Stored Procedure: P_CAP_0004 */
CREATE PROCEDURE P_CAP_0004 (
    ID INTEGER,
    FECHA DATE)
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    VALOR_INICIAL INTEGER,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES CHAR (1),
    ID_INTERES SMALLINT,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    FECHA_APERTURA DATE,
    FECHA_PRORROGA DATE,
    FECHA_ULTIMO_PAGO DATE,
    MODALIDAD CHAR (1),
    AMORTIZACION INTEGER,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (90),
    RETEFUENTE SMALLINT)
AS
BEGIN
  /* Procedure body */
  FOR
SELECT
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA,
  "cap$maestro".VALOR_INICIAL,
  "cap$maestro".PLAZO_CUENTA,
  "cap$maestro".TIPO_INTERES,
  "cap$maestro".ID_INTERES,
  "cap$maestro".TASA_EFECTIVA,
  "cap$maestro".PUNTOS_ADICIONALES,
  "cap$maestro".FECHA_APERTURA,
  "cap$maestro".FECHA_PRORROGA,
  "cap$maestro".FECHA_ULTIMO_PAGO,
  "cap$maestro".MODALIDAD,
  "cap$maestro".AMORTIZACION,
  "cap$maestro".ID_TIPO_CAPTACION_ABONO,
  "cap$maestro".NUMERO_CUENTA_ABONO,
  "cap$maestrotitular".ID_IDENTIFICACION,
  "cap$maestrotitular".ID_PERSONA,
  "gen$persona".PRIMER_APELLIDO,
  "gen$persona".SEGUNDO_APELLIDO,
  "gen$persona".NOMBRE,
  "gen$persona".RETEFUENTE
FROM
  "cap$tablaliquidacion"
  INNER JOIN "cap$maestro" ON ("cap$maestro".ID_AGENCIA = "cap$tablaliquidacion".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$tablaliquidacion".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$tablaliquidacion".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$tablaliquidacion".DIGITO_CUENTA)
  INNER JOIN "cap$maestrotitular" ON ("cap$maestro".ID_AGENCIA = "cap$maestrotitular".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$maestrotitular".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$maestrotitular".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA)
  INNER JOIN "gen$persona" ON ("cap$maestrotitular".ID_IDENTIFICACION = "gen$persona".ID_IDENTIFICACION) AND ("cap$maestrotitular".ID_PERSONA = "gen$persona".ID_PERSONA)
  INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
WHERE
  ("cap$tablaliquidacion".ID_TIPO_CAPTACION = :ID) AND
  ("cap$tablaliquidacion".FECHA_PAGO = :FECHA) AND
  ("cap$tablaliquidacion".PAGADO = 0) AND
  ("cap$tiposestado".PAGA_INTERES <> 0)
ORDER BY
  "cap$tablaliquidacion".ID_AGENCIA,
  "cap$tablaliquidacion".ID_TIPO_CAPTACION,
  "cap$tablaliquidacion".NUMERO_CUENTA,
  "cap$tablaliquidacion".DIGITO_CUENTA
INTO :ID_AGENCIA, :ID_TIPO_CAPTACION,:NUMERO_CUENTA,:DIGITO_CUENTA,
       :VALOR_INICIAL, :PLAZO_CUENTA, :TIPO_INTERES,:ID_INTERES,
       :TASA_EFECTIVA,:PUNTOS_ADICIONALES,:FECHA_APERTURA,:FECHA_PRORROGA,:FECHA_ULTIMO_PAGO,:MODALIDAD,:AMORTIZACION,
       :ID_TIPO_CAPTACION_ABONO,:NUMERO_CUENTA_ABONO,:ID_IDENTIFICACION,
       :ID_PERSONA,:PRIMER_APELLIDO,:SEGUNDO_APELLIDO,:NOMBRE,:RETEFUENTE
  DO
  SUSPEND;
END
^


/* Stored Procedure: P_CAP_0005 */
CREATE PROCEDURE P_CAP_0005 (
    ID INTEGER,
    FECHA DATE)
RETURNS (
    TOTAL INTEGER)
AS
BEGIN
  /* Procedure body */
FOR
   SELECT
    COUNT(*) AS TOTAL
   FROM "cap$maestro"
   INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
   WHERE
    ("cap$maestro".ID_TIPO_CAPTACION = :ID) and ("cap$tiposestado".SE_SUMA <> 0) and
     (("cap$maestro".FECHA_VENCIMIENTO = :FECHA and ((FECHA_VENCIMIENTO_PRORROGA IS NULL) or (FECHA_VENCIMIENTO > FECHA_VENCIMIENTO_PRORROGA))) or
     ("cap$maestro".FECHA_VENCIMIENTO_PRORROGA = :FECHA))   INTO :TOTAL
DO
SUSPEND;
END
^


/* Stored Procedure: P_CAP_0006 */
CREATE PROCEDURE P_CAP_0006 (
    ID INTEGER,
    FECHA DATE)
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    VALOR_INICIAL INTEGER,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES CHAR (1),
    ID_INTERES SMALLINT,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    FECHA_APERTURA DATE,
    FECHA_PRORROGA DATE,
    FECHA_ULTIMO_PAGO DATE,
    FECHA_VENCIMIENTO DATE,
    FECHA_VENCIMIENTO_PRORROGA DATE,
    MODALIDAD CHAR (1),
    AMORTIZACION INTEGER,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (90))
AS
BEGIN
  /* Procedure body */
  FOR
SELECT
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA,
  "cap$maestro".VALOR_INICIAL,
  "cap$maestro".PLAZO_CUENTA,
  "cap$maestro".TIPO_INTERES,
  "cap$maestro".ID_INTERES,
  "cap$maestro".TASA_EFECTIVA,
  "cap$maestro".PUNTOS_ADICIONALES,
  "cap$maestro".FECHA_APERTURA,
  "cap$maestro".FECHA_PRORROGA,
  "cap$maestro".FECHA_ULTIMO_PAGO,
  "cap$maestro".FECHA_VENCIMIENTO,
  "cap$maestro".FECHA_VENCIMIENTO_PRORROGA,
  "cap$maestro".MODALIDAD,
  "cap$maestro".AMORTIZACION,
  "cap$maestro".ID_TIPO_CAPTACION_ABONO,
  "cap$maestro".NUMERO_CUENTA_ABONO,
  "cap$maestrotitular".ID_IDENTIFICACION,
  "cap$maestrotitular".ID_PERSONA,
  "gen$persona".PRIMER_APELLIDO,
  "gen$persona".SEGUNDO_APELLIDO,
  "gen$persona".NOMBRE
FROM
  "cap$maestro"
  LEFT JOIN "cap$maestrotitular" ON ("cap$maestro".ID_AGENCIA = "cap$maestrotitular".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$maestrotitular".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$maestrotitular".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA)
  LEFT JOIN "gen$persona" ON ("cap$maestrotitular".ID_IDENTIFICACION = "gen$persona".ID_IDENTIFICACION) AND ("cap$maestrotitular".ID_PERSONA = "gen$persona".ID_PERSONA)
  INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
WHERE
    ("cap$maestro".ID_TIPO_CAPTACION = :ID) and ("cap$tiposestado".SE_SUMA <> 0) and
     (("cap$maestro".FECHA_VENCIMIENTO = :FECHA and ((FECHA_VENCIMIENTO_PRORROGA IS NULL) or (FECHA_VENCIMIENTO > FECHA_VENCIMIENTO_PRORROGA))) or
     ("cap$maestro".FECHA_VENCIMIENTO_PRORROGA = :FECHA))
ORDER BY
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA
INTO :ID_AGENCIA, :ID_TIPO_CAPTACION,:NUMERO_CUENTA,:DIGITO_CUENTA,
       :VALOR_INICIAL, :PLAZO_CUENTA, :TIPO_INTERES,:ID_INTERES,
       :TASA_EFECTIVA,:PUNTOS_ADICIONALES,:FECHA_APERTURA,:FECHA_PRORROGA,:FECHA_ULTIMO_PAGO,:FECHA_VENCIMIENTO,:FECHA_VENCIMIENTO_PRORROGA,
       :MODALIDAD,:AMORTIZACION,
       :ID_TIPO_CAPTACION_ABONO,:NUMERO_CUENTA_ABONO,:ID_IDENTIFICACION,
       :ID_PERSONA,:PRIMER_APELLIDO,:SEGUNDO_APELLIDO,:NOMBRE
  DO
  SUSPEND;
END
^


/* Stored Procedure: P_CAP_0007 */
CREATE PROCEDURE P_CAP_0007 (
    ID INTEGER)
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    VALOR_INICIAL INTEGER,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES CHAR (1),
    ID_INTERES SMALLINT,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    FECHA_APERTURA DATE,
    FECHA_PRORROGA DATE,
    FECHA_ULTIMO_PAGO DATE,
    MODALIDAD CHAR (1),
    AMORTIZACION INTEGER,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (90))
AS
BEGIN
  /* Procedure body */
  FOR
SELECT
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA,
  "cap$maestro".VALOR_INICIAL,
  "cap$maestro".PLAZO_CUENTA,
  "cap$maestro".TIPO_INTERES,
  "cap$maestro".ID_INTERES,
  "cap$maestro".TASA_EFECTIVA,
  "cap$maestro".PUNTOS_ADICIONALES,
  "cap$maestro".FECHA_APERTURA,
  "cap$maestro".FECHA_PRORROGA,
  "cap$maestro".FECHA_ULTIMO_PAGO,
  "cap$maestro".MODALIDAD,
  "cap$maestro".AMORTIZACION,
  "cap$maestro".ID_TIPO_CAPTACION_ABONO,
  "cap$maestro".NUMERO_CUENTA_ABONO
FROM
  "cap$maestro"
/*  INNER JOIN "cap$maestro" ON ("cap$maestro".ID_AGENCIA = "cap$tablaliquidacion".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$tablaliquidacion".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$tablaliquidacion".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$tablaliquidacion".DIGITO_CUENTA) */
  INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
WHERE
  ("cap$maestro".ID_TIPO_CAPTACION = :ID) AND
  ("cap$tiposestado".PAGA_INTERES <> 0)
ORDER BY
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA
INTO :ID_AGENCIA, :ID_TIPO_CAPTACION,:NUMERO_CUENTA,:DIGITO_CUENTA,
       :VALOR_INICIAL, :PLAZO_CUENTA, :TIPO_INTERES,:ID_INTERES,
       :TASA_EFECTIVA,:PUNTOS_ADICIONALES,:FECHA_APERTURA,:FECHA_PRORROGA,:FECHA_ULTIMO_PAGO,:MODALIDAD,:AMORTIZACION,
       :ID_TIPO_CAPTACION_ABONO,:NUMERO_CUENTA_ABONO
  DO
  SUSPEND;
END
^


/* Stored Procedure: P_CAP_0007_L */
CREATE PROCEDURE P_CAP_0007_L (
    ID INTEGER,
    DESDE INTEGER,
    HASTA INTEGER)
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    VALOR_INICIAL INTEGER,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES CHAR (1),
    ID_INTERES SMALLINT,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    FECHA_APERTURA DATE,
    FECHA_VENCIMIENTO DATE,
    FECHA_PRORROGA DATE,
    FECHA_ULTIMO_PAGO DATE,
    MODALIDAD CHAR (1),
    AMORTIZACION INTEGER,
    CUOTA NUMERIC (18, 3),
    CUOTA_CADA INTEGER,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER)
AS
BEGIN
  /* Procedure body */
  FOR
SELECT
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA,
  "cap$maestro".VALOR_INICIAL,
  "cap$maestro".PLAZO_CUENTA,
  "cap$maestro".TIPO_INTERES,
  "cap$maestro".ID_INTERES,
  "cap$maestro".TASA_EFECTIVA,
  "cap$maestro".PUNTOS_ADICIONALES,
  "cap$maestro".FECHA_APERTURA,
  "cap$maestro".FECHA_VENCIMIENTO,
  "cap$maestro".FECHA_PRORROGA,
  "cap$maestro".FECHA_ULTIMO_PAGO,
  "cap$maestro".MODALIDAD,
  "cap$maestro".AMORTIZACION,
  "cap$maestro".CUOTA,
  "cap$maestro".CUOTA_CADA,
  "cap$maestro".ID_TIPO_CAPTACION_ABONO,
  "cap$maestro".NUMERO_CUENTA_ABONO
FROM
  "cap$maestro"
/*  INNER JOIN "cap$maestro" ON ("cap$maestro".ID_AGENCIA = "cap$tablaliquidacion".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$tablaliquidacion".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$tablaliquidacion".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$tablaliquidacion".DIGITO_CUENTA) */
  INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
WHERE
  ("cap$maestro".ID_TIPO_CAPTACION = :ID) AND
  ("cap$tiposestado".PAGA_INTERES <> 0) and
  ("cap$maestro".NUMERO_CUENTA BETWEEN :DESDE and :HASTA)
ORDER BY
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA
INTO :ID_AGENCIA, :ID_TIPO_CAPTACION,:NUMERO_CUENTA,:DIGITO_CUENTA,
       :VALOR_INICIAL, :PLAZO_CUENTA, :TIPO_INTERES,:ID_INTERES,
       :TASA_EFECTIVA,:PUNTOS_ADICIONALES,:FECHA_APERTURA,:FECHA_VENCIMIENTO,:FECHA_PRORROGA,:FECHA_ULTIMO_PAGO,:MODALIDAD,:AMORTIZACION,
       :CUOTA,:CUOTA_CADA,:ID_TIPO_CAPTACION_ABONO,:NUMERO_CUENTA_ABONO
  DO
  SUSPEND;
END
^


/* Stored Procedure: P_CAP_0008 */
CREATE PROCEDURE P_CAP_0008 (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15))
RETURNS (
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ID_ESTADO INTEGER)
AS
begin
  /* Procedure Text */
  FOR
          select
          "cap$maestrotitular".NUMERO_CUENTA,
          "cap$maestrotitular".DIGITO_CUENTA,
          "cap$maestro".ID_ESTADO
          from "cap$maestrotitular"
          inner join "cap$maestro" on
          ("cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
          "cap$maestrotitular".ID_TIPO_CAPTACION = "cap$maestro".ID_TIPO_CAPTACION and
          "cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
          "cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA)
          where
          "cap$maestrotitular".ID_IDENTIFICACION =:"ID_IDENTIFICACION" and
          "cap$maestrotitular".ID_PERSONA =:"ID_PERSONA" and
          "cap$maestrotitular".ID_TIPO_CAPTACION =:"ID_TIPO_CAPTACION" and
          "cap$maestrotitular".NUMERO_TITULAR = 1 and
          "cap$maestrotitular".TIPO_TITULAR = 1 and
          ("cap$maestro".ID_ESTADO = 1)
          
INTO  :NUMERO_CUENTA, :DIGITO_CUENTA, ID_ESTADO
DO
SUSPEND;
end
^


/* Stored Procedure: P_CAP_0008_JUD */
CREATE PROCEDURE P_CAP_0008_JUD (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15))
RETURNS (
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ID_ESTADO INTEGER)
AS
begin
  /* Procedure Text */
  FOR
          select
          "cap$maestrotitular".NUMERO_CUENTA,
          "cap$maestrotitular".DIGITO_CUENTA,
          "cap$maestro".ID_ESTADO
          from "cap$maestrotitular"
          inner join "cap$maestro" on
          ("cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
          "cap$maestrotitular".ID_TIPO_CAPTACION = "cap$maestro".ID_TIPO_CAPTACION and
          "cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
          "cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA)
          where
          "cap$maestrotitular".ID_IDENTIFICACION =:"ID_IDENTIFICACION" and
          "cap$maestrotitular".ID_PERSONA =:"ID_PERSONA" and
          "cap$maestrotitular".ID_TIPO_CAPTACION =:"ID_TIPO_CAPTACION" and
          "cap$maestrotitular".NUMERO_TITULAR = 1 and
          "cap$maestrotitular".TIPO_TITULAR = 1 and
          ("cap$maestro".ID_ESTADO = 1 or "cap$maestro".ID_ESTADO = 10)

INTO  :NUMERO_CUENTA, :DIGITO_CUENTA, ID_ESTADO
DO
SUSPEND;
end
^


/* Stored Procedure: P_CAP_0009 */
CREATE PROCEDURE P_CAP_0009 (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ANO INTEGER)
RETURNS (
    MES INTEGER,
    DEBITO NUMERIC (18, 3),
    CREDITO NUMERIC (18, 3))
AS
DECLARE VARIABLE M INTEGER;
BEGIN
  /* Procedure body */
  M=1;
  WHILE (M<=12) do
  BEGIN
   select AVG(EXTRACT(MONTH FROM FECHA_MOVIMIENTO)) AS MES,SUM(VALOR_DEBITO) as DEBITO, SUM(VALOR_CREDITO) AS CREDITO from  "cap$extracto"
   where extract(year from FECHA_MOVIMIENTO)= :ANO and
         extract(month from FECHA_MOVIMIENTO)=:M and
         ID_AGENCIA = :ID_AGENCIA and ID_TIPO_CAPTACION = :ID_TIPO_CAPTACION and
         NUMERO_CUENTA = :NUMERO_CUENTA and DIGITO_CUENTA = :DIGITO_CUENTA
    INTO :MES,:DEBITO,:CREDITO;
  SUSPEND;
  M=M+1;
  END
END
^


/* Stored Procedure: P_CAP_0011 */
CREATE PROCEDURE P_CAP_0011 (
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT)
RETURNS (
    CHEQUES NUMERIC (18, 3))
AS
begin
  /* Procedure Text */
  FOR
  SELECT SUM(VALOR_CHEQUE) as CHEQUES from "cap$canje"
  where
  NUMERO_CUENTA =:"NUMERO_CUENTA" and
  DIGITO_CUENTA =:"DIGITO_CUENTA" and
  LIBERADO = 0 and DEVUELTO = 0

INTO  :CHEQUES
DO
SUSPEND;
end
^


/* Stored Procedure: P_CAP_0011N */
CREATE PROCEDURE P_CAP_0011N (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT)
RETURNS (
    CHEQUES NUMERIC (18, 3))
AS
declare variable SALDO NUMERIC(18,3);
begin
  /* Procedure Text */
 FOR
  SELECT SUM(VALOR_CHEQUE) as SUMA from "cap$canje"
  where
  ID_AGENCIA = :"ID_AGENCIA" and
  ID_TIPO_CAPTACION = :"ID_TIPO_CAPTACION" and
  NUMERO_CUENTA =:"NUMERO_CUENTA" and
  DIGITO_CUENTA =:"DIGITO_CUENTA" and
  LIBERADO = 0 and DEVUELTO = 0
  INTO  :SALDO
 DO
  BEGIN
    IF (SALDO IS NULL) then SALDO = 0;
    CHEQUES = SALDO;
  SUSPEND;
  END
END
^


/* Stored Procedure: P_CAP_0013 */
CREATE PROCEDURE P_CAP_0013 (
    ID INTEGER,
    ID_ESTADO INTEGER)
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    VALOR_INICIAL INTEGER,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES CHAR (1),
    ID_INTERES SMALLINT,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    FECHA_APERTURA DATE,
    FECHA_ULTIMO_PAGO DATE,
    FECHA_PROXIMO_PAGO DATE,
    FECHA_PRORROGA DATE,
    FECHA_VENCIMIENTO DATE,
    MODALIDAD CHAR (1),
    AMORTIZACION INTEGER,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (90))
AS
BEGIN
  /* Procedure body */
  FOR
SELECT
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA,
  "cap$maestro".VALOR_INICIAL,
  "cap$maestro".PLAZO_CUENTA,
  "cap$maestro".TIPO_INTERES,
  "cap$maestro".ID_INTERES,
  "cap$maestro".TASA_EFECTIVA,
  "cap$maestro".PUNTOS_ADICIONALES,
  "cap$maestro".FECHA_APERTURA,
  "cap$maestro".FECHA_ULTIMO_PAGO,
  "cap$maestro".FECHA_PROXIMO_PAGO,
  "cap$maestro".FECHA_PRORROGA,
  "cap$maestro".FECHA_VENCIMIENTO,
  "cap$maestro".MODALIDAD,
  "cap$maestro".AMORTIZACION,
  "cap$maestro".ID_TIPO_CAPTACION_ABONO,
  "cap$maestro".NUMERO_CUENTA_ABONO,
  "cap$maestrotitular".ID_IDENTIFICACION,
  "cap$maestrotitular".ID_PERSONA,
  "gen$persona".PRIMER_APELLIDO,
  "gen$persona".SEGUNDO_APELLIDO,
  "gen$persona".NOMBRE
FROM
  "cap$maestro"
  LEFT JOIN "cap$maestrotitular" ON ("cap$maestro".ID_AGENCIA = "cap$maestrotitular".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$maestrotitular".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$maestrotitular".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA)
  LEFT JOIN "gen$persona" ON ("cap$maestrotitular".ID_IDENTIFICACION = "gen$persona".ID_IDENTIFICACION) AND ("cap$maestrotitular".ID_PERSONA = "gen$persona".ID_PERSONA)
WHERE
    "cap$maestro".ID_TIPO_CAPTACION = :ID and
    ("cap$maestro".ID_ESTADO = 1 or "cap$maestro".ID_ESTADO = 6)
ORDER BY
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA
INTO :ID_AGENCIA, :ID_TIPO_CAPTACION,:NUMERO_CUENTA,:DIGITO_CUENTA,
       :VALOR_INICIAL, :PLAZO_CUENTA, :TIPO_INTERES,:ID_INTERES,
       :TASA_EFECTIVA,:PUNTOS_ADICIONALES,:FECHA_APERTURA,:FECHA_ULTIMO_PAGO, :FECHA_PROXIMO_PAGO, :FECHA_PRORROGA, :FECHA_VENCIMIENTO,
       :MODALIDAD, :AMORTIZACION, :ID_TIPO_CAPTACION_ABONO,:NUMERO_CUENTA_ABONO,:ID_IDENTIFICACION,
       :ID_PERSONA,:PRIMER_APELLIDO,:SEGUNDO_APELLIDO,:NOMBRE
  DO
  SUSPEND;
END
^


/* Stored Procedure: P_CAP_0014 */
CREATE PROCEDURE P_CAP_0014 (
    ID INTEGER,
    FECHA DATE)
RETURNS (
    TOTAL INTEGER)
AS
BEGIN
  /* Procedure body */
  FOR
   SELECT
    COUNT(*)
FROM
  "cap$causacioncdattmp"
WHERE
  ("cap$causacioncdattmp".ID_TIPO_CAPTACION = :ID) AND
  ("cap$causacioncdattmp".FECHA_ULTIMO_PAGO < :FECHA)
  INTO :TOTAL
DO
SUSPEND;
END
^


/* Stored Procedure: P_CAP_0015 */
CREATE PROCEDURE P_CAP_0015 
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    VALOR_INICIAL INTEGER,
    FECHA_APERTURA DATE,
    PLAZO_CUENTA INTEGER,
    TIPO_INTERES CHAR (1),
    ID_INTERES SMALLINT,
    TASA_EFECTIVA DOUBLE PRECISION,
    PUNTOS_ADICIONALES DOUBLE PRECISION,
    MODALIDAD CHAR (1),
    AMORTIZACION INTEGER,
    FECHA_VENCIMIENTO DATE,
    FECHA_ULTIMO_PAGO DATE,
    FECHA_PROXIMO_PAGO DATE,
    FECHA_PRORROGA DATE,
    ID_TIPO_CAPTACION_ABONO SMALLINT,
    NUMERO_CUENTA_ABONO INTEGER,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (90))
AS
BEGIN
  /* Procedure body */
  FOR
SELECT
  "cap$causacioncdattmp".ID_AGENCIA,
  "cap$causacioncdattmp".ID_TIPO_CAPTACION,
  "cap$causacioncdattmp".NUMERO_CUENTA,
  "cap$causacioncdattmp".DIGITO_CUENTA,
  "cap$causacioncdattmp".VALOR_INICIAL,
  "cap$causacioncdattmp".FECHA_APERTURA,
  "cap$causacioncdattmp".PLAZO_CUENTA,
  "cap$causacioncdattmp".TIPO_INTERES,
  "cap$causacioncdattmp".ID_INTERES,
  "cap$causacioncdattmp".TASA_EFECTIVA,
  "cap$causacioncdattmp".PUNTOS_ADICIONALES,
  "cap$causacioncdattmp".MODALIDAD,
  "cap$causacioncdattmp".AMORTIZACION,
  "cap$causacioncdattmp".FECHA_VENCIMIENTO,
  "cap$causacioncdattmp".FECHA_ULTIMO_PAGO,
  "cap$causacioncdattmp".FECHA_PROXIMO_PAGO,
  "cap$causacioncdattmp".FECHA_PRORROGA,
  "cap$causacioncdattmp".ID_TIPO_CAPTACION_ABONO,
  "cap$causacioncdattmp".NUMERO_CUENTA_ABONO,
  "cap$causacioncdattmp".ID_IDENTIFICACION,
  "cap$causacioncdattmp".ID_PERSONA,
  "cap$causacioncdattmp".PRIMER_APELLIDO,
  "cap$causacioncdattmp".SEGUNDO_APELLIDO,
  "cap$causacioncdattmp".NOMBRE
FROM
  "cap$causacioncdattmp"
ORDER BY
  "cap$causacioncdattmp".ID_AGENCIA,
  "cap$causacioncdattmp".ID_TIPO_CAPTACION,
  "cap$causacioncdattmp".NUMERO_CUENTA,
  "cap$causacioncdattmp".DIGITO_CUENTA
INTO   :ID_AGENCIA, :ID_TIPO_CAPTACION,:NUMERO_CUENTA,:DIGITO_CUENTA,
       :VALOR_INICIAL, :FECHA_APERTURA, :PLAZO_CUENTA, :TIPO_INTERES,:ID_INTERES,
       :TASA_EFECTIVA,:PUNTOS_ADICIONALES,:MODALIDAD, :AMORTIZACION, :FECHA_PROXIMO_PAGO, :FECHA_PRORROGA, :FECHA_VENCIMIENTO, :FECHA_ULTIMO_PAGO,
       :ID_TIPO_CAPTACION_ABONO,:NUMERO_CUENTA_ABONO,:ID_IDENTIFICACION,
       :ID_PERSONA,:PRIMER_APELLIDO,:SEGUNDO_APELLIDO,:NOMBRE
  DO
  SUSPEND;
END
^


/* Stored Procedure: P_CAP_0016 */
CREATE PROCEDURE P_CAP_0016 (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15))
RETURNS (
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ID_ESTADO INTEGER)
AS
begin
  /* Procedure Text */
  FOR
          select
          "cap$maestrotitular".NUMERO_CUENTA,
          "cap$maestrotitular".DIGITO_CUENTA,
          "cap$maestro".ID_ESTADO
          from "cap$maestrotitular"
          inner join "cap$maestro" on
          ("cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
          "cap$maestrotitular".ID_TIPO_CAPTACION = "cap$maestro".ID_TIPO_CAPTACION and
          "cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
          "cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA)
          where
          "cap$maestrotitular".ID_IDENTIFICACION =:"ID_IDENTIFICACION" and
          "cap$maestrotitular".ID_PERSONA =:"ID_PERSONA" and
          "cap$maestrotitular".ID_TIPO_CAPTACION =:"ID_TIPO_CAPTACION" and
          "cap$maestrotitular".NUMERO_TITULAR = 1 and
          "cap$maestrotitular".TIPO_TITULAR = 1
          
INTO  :NUMERO_CUENTA, :DIGITO_CUENTA, ID_ESTADO
DO
SUSPEND;
end
^


/* Stored Procedure: P_CAP_0017 */
CREATE PROCEDURE P_CAP_0017 (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15))
RETURNS (
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT)
AS
begin
  /* Procedure Text */
  FOR
select
"cap$maestro".NUMERO_CUENTA,
"cap$maestro".DIGITO_CUENTA
from "cap$maestro"
INNER JOIN "cap$maestrotitular" ON
("cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
"cap$maestrotitular".ID_TIPO_CAPTACION = "cap$maestro".ID_TIPO_CAPTACION and
"cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
"cap$maestrotitular".DIGITO_CUENTA = "cap$maestro".DIGITO_CUENTA)
INNER JOIN "cap$tiposestado" ON ("cap$tiposestado".ID_ESTADO = "cap$maestro".ID_ESTADO)
Where
"cap$maestrotitular".NUMERO_TITULAR = 1 and
"cap$maestrotitular".ID_IDENTIFICACION =:"ID_IDENTIFICACION" and
"cap$maestrotitular".ID_PERSONA =:"ID_PERSONA" and
"cap$maestro".ID_ESTADO = 1 and
"cap$maestro".ID_TIPO_CAPTACION =:"ID_TIPO_CAPTACION" and
"cap$tiposestado".SE_SUMA = 1

INTO  :NUMERO_CUENTA, :DIGITO_CUENTA
DO
SUSPEND;
end
^


/* Stored Procedure: P_CAP_0018 */
CREATE PROCEDURE P_CAP_0018 (
    ID_AGENCIA SMALLINT,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15))
RETURNS (
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    ID_ESTADO INTEGER)
AS
begin
  /* Procedure Text */
  FOR
select
"cap$maestro".NUMERO_CUENTA,
"cap$maestro".DIGITO_CUENTA,
"cap$maestro".ID_TIPO_CAPTACION,
"cap$maestro".ID_ESTADO
from "cap$maestro"
INNER JOIN "cap$maestrotitular" ON
("cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
"cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
"cap$maestrotitular".DIGITO_CUENTA = "cap$maestro".DIGITO_CUENTA)
INNER JOIN "cap$tiposestado" ON ("cap$tiposestado".ID_ESTADO = "cap$maestro".ID_ESTADO)
Where
"cap$maestro".ID_TIPO_CAPTACION <= 4 and
"cap$maestrotitular".NUMERO_TITULAR = 1 and
"cap$maestrotitular".ID_IDENTIFICACION =:"ID_IDENTIFICACION" and
"cap$maestrotitular".ID_PERSONA =:"ID_PERSONA" and
"cap$tiposestado".SE_SUMA = 1

INTO  :NUMERO_CUENTA, :DIGITO_CUENTA, :ID_TIPO_CAPTACION, :ID_ESTADO
DO
SUSPEND;
end
^


/* Stored Procedure: P_CAP_0019 */
CREATE PROCEDURE P_CAP_0019 (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15))
RETURNS (
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    ID_ESTADO INTEGER)
AS
begin
  /* Procedure Text */
  FOR
          select
          "cap$maestrotitular".NUMERO_CUENTA,
          "cap$maestrotitular".DIGITO_CUENTA,
          "cap$tiposestado".SE_SUMA
          from "cap$maestrotitular"
          inner join "cap$maestro" on
          ("cap$maestrotitular".ID_AGENCIA = "cap$maestro".ID_AGENCIA and
          "cap$maestrotitular".ID_TIPO_CAPTACION = "cap$maestro".ID_TIPO_CAPTACION and
          "cap$maestrotitular".NUMERO_CUENTA = "cap$maestro".NUMERO_CUENTA and
          "cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA)
          inner join "cap$tiposestado" on ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
          where
          "cap$maestrotitular".ID_IDENTIFICACION =:"ID_IDENTIFICACION" and
          "cap$maestrotitular".ID_PERSONA =:"ID_PERSONA" and
          "cap$maestrotitular".ID_TIPO_CAPTACION =:"ID_TIPO_CAPTACION" and
          "cap$maestrotitular".NUMERO_TITULAR = 1 and
          "cap$maestrotitular".TIPO_TITULAR = 1 and
          ("cap$tiposestado".SE_SUMA = 1)
          order by "cap$maestrotitular".NUMERO_CUENTA
          
INTO  :NUMERO_CUENTA, :DIGITO_CUENTA, ID_ESTADO
DO
SUSPEND;
end
^


/* Stored Procedure: P_CAP_0020 */
CREATE PROCEDURE P_CAP_0020 (
    ID INTEGER,
    FECHA DATE)
RETURNS (
    TOTAL INTEGER)
AS
BEGIN
  /* Procedure body */
  FOR
   SELECT
    COUNT(*)
FROM
  "cap$tablaliquidacioncon"
  INNER JOIN "cap$maestro" ON ("cap$maestro".ID_AGENCIA = "cap$tablaliquidacioncon".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$tablaliquidacioncon".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$tablaliquidacioncon".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$tablaliquidacioncon".DIGITO_CUENTA)
  INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
WHERE
  ("cap$tablaliquidacioncon".ID_TIPO_CAPTACION = :ID) AND
  ("cap$tablaliquidacioncon".FECHA_DESCUENTO <= :FECHA) AND
  ("cap$tablaliquidacioncon".DESCONTADO = 0) AND
  ("cap$tiposestado".PAGA_INTERES <> 0)
INTO :TOTAL
DO
SUSPEND;
END
^


/* Stored Procedure: P_CAP_0021 */
CREATE PROCEDURE P_CAP_0021 (
    ID INTEGER,
    FECHA DATE,
    FECHA1 DATE)
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_TIPO_CAPTACION SMALLINT,
    NUMERO_CUENTA INTEGER,
    DIGITO_CUENTA SMALLINT,
    VALOR_INICIAL INTEGER,
    CUOTA NUMERIC (18, 3),
    CUOTA_CADA INTEGER,
    ID_PLAN INTEGER,
    FECHA_APERTURA DATE,
    FECHA_VENCIMIENTO DATE,
    ID_TIPO_CAPTACION_ABONO INTEGER,
    NUMERO_CUENTA_ABONO INTEGER,
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (90),
    FECHA_DESCUENTO DATE)
AS
declare variable VALIDAR INTEGER;
BEGIN
  /* Procedure body */
  FOR
   SELECT
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA,
  "cap$maestro".VALOR_INICIAL,
  "cap$maestro".CUOTA,
  "cap$maestro".CUOTA_CADA,
  "cap$maestro".ID_PLAN,
  "cap$maestro".FECHA_APERTURA,
  "cap$maestro".FECHA_VENCIMIENTO,
  "cap$maestro".ID_TIPO_CAPTACION_ABONO,
  "cap$maestro".NUMERO_CUENTA_ABONO,
  "cap$maestrotitular".ID_IDENTIFICACION,
  "cap$maestrotitular".ID_PERSONA,
  "gen$persona".PRIMER_APELLIDO,
  "gen$persona".SEGUNDO_APELLIDO,
  "gen$persona".NOMBRE
FROM
  "cap$maestro"
  INNER JOIN "cap$maestrotitular" ON ("cap$maestro".ID_AGENCIA = "cap$maestrotitular".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$maestrotitular".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$maestrotitular".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA)
  INNER JOIN "gen$persona" ON ("cap$maestrotitular".ID_IDENTIFICACION = "gen$persona".ID_IDENTIFICACION) AND ("cap$maestrotitular".ID_PERSONA = "gen$persona".ID_PERSONA)
  INNER JOIN "cap$tiposestado" ON ("cap$maestro".ID_ESTADO = "cap$tiposestado".ID_ESTADO)
WHERE
  ("cap$maestro".ID_TIPO_CAPTACION = :ID) AND
  ("cap$tiposestado".PAGA_INTERES <> 0)
ORDER BY
  "cap$maestro".ID_AGENCIA,
  "cap$maestro".ID_TIPO_CAPTACION,
  "cap$maestro".NUMERO_CUENTA,
  "cap$maestro".DIGITO_CUENTA
INTO   :ID_AGENCIA, :ID_TIPO_CAPTACION,:NUMERO_CUENTA,:DIGITO_CUENTA,
       :VALOR_INICIAL, :CUOTA, :CUOTA_CADA,:ID_PLAN,
       :FECHA_APERTURA,:FECHA_VENCIMIENTO,:ID_TIPO_CAPTACION_ABONO,:NUMERO_CUENTA_ABONO,
       :ID_IDENTIFICACION,
       :ID_PERSONA,:PRIMER_APELLIDO,:SEGUNDO_APELLIDO,:NOMBRE
  DO
  BEGIN
    SELECT COUNT(*) FROM "cap$extracto" WHERE
    "cap$extracto".ID_AGENCIA = :ID_AGENCIA and
    "cap$extracto".ID_TIPO_CAPTACION = :ID_TIPO_CAPTACION and
    "cap$extracto".NUMERO_CUENTA = :NUMERO_CUENTA and
    "cap$extracto".DIGITO_CUENTA = :DIGITO_CUENTA and
    "cap$extracto".FECHA_MOVIMIENTO BETWEEN :FECHA1 and :FECHA
    INTO :VALIDAR;
    if (VALIDAR IS NULL) then VALIDAR = 0;
    if (VALIDAR = 0) then
    BEGIN
      FECHA_DESCUENTO = NULL;
      SELECT FIRST 1 FECHA_DESCUENTO FROM "cap$tablaliquidacioncon" WHERE
      "cap$tablaliquidacioncon".ID_AGENCIA = :ID_AGENCIA and
      "cap$tablaliquidacioncon".ID_TIPO_CAPTACION = :ID_TIPO_CAPTACION and
      "cap$tablaliquidacioncon".NUMERO_CUENTA = :NUMERO_CUENTA and
      "cap$tablaliquidacioncon".DIGITO_CUENTA = :DIGITO_CUENTA and
      "cap$tablaliquidacioncon".FECHA_DESCUENTO <= :FECHA and
      "cap$tablaliquidacioncon".DESCONTADO = 0
      ORDER BY "cap$tablaliquidacioncon".FECHA_DESCUENTO ASC
      INTO :FECHA_DESCUENTO;
      if (FECHA_DESCUENTO IS NOT NULL) then
       SUSPEND;
    END
 END
END
^


/* Stored Procedure: P_COL_0002 */
CREATE PROCEDURE P_COL_0002 (
    FECHA1 DATE,
    FECHA2 DATE)
RETURNS (
    ID_AGENCIA INTEGER,
    ID_COLOCACION CHAR (11),
    ID_IDENTIFICACION INTEGER,
    ID_PERSONA CHAR (15),
    FECHA_DESEMBOLSO DATE,
    VALOR_DESEMBOLSO NUMERIC (18, 3),
    SALDO_ACTUAL NUMERIC (18, 3),
    PLAZO_COLOCACION INTEGER,
    TASA_INTERES_CORRIENTE FLOAT,
    PUNTOS_INTERES FLOAT,
    AMORTIZA_CAPITAL INTEGER,
    AMORTIZA_INTERES INTEGER,
    FECHA_CAPITAL DATE,
    FECHA_INTERES DATE,
    DESCRIPCION_AGENCIA CHAR (50),
    NOMBRE VARCHAR (255),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    DESCRIPCION_ESTADO_COLOCACION CHAR (100))
AS
BEGIN
  /* Procedure body */
  FOR
SELECT
"col$colocacion".ID_AGENCIA,
"col$colocacion".ID_COLOCACION,
"col$colocacion".ID_IDENTIFICACION,
"col$colocacion".ID_PERSONA,
"col$colocacion".FECHA_DESEMBOLSO,
"col$colocacion".VALOR_DESEMBOLSO,
("col$colocacion".VALOR_DESEMBOLSO - "col$colocacion".ABONOS_CAPITAL) AS SALDO_ACTUAL,
"col$colocacion".PLAZO_COLOCACION,
"col$colocacion".TASA_INTERES_CORRIENTE,
"col$colocacion".PUNTOS_INTERES,
"col$colocacion".AMORTIZA_CAPITAL,
"col$colocacion".AMORTIZA_INTERES,
"col$colocacion".FECHA_CAPITAL,
"col$colocacion".FECHA_INTERES,
"gen$agencia".DESCRIPCION_AGENCIA,
"gen$persona".NOMBRE,
"gen$persona".PRIMER_APELLIDO,
"gen$persona".SEGUNDO_APELLIDO,
"col$estado".DESCRIPCION_ESTADO_COLOCACION


FROM
"col$colocacion"
INNER JOIN "gen$agencia" ON ("col$colocacion".ID_AGENCIA = "gen$agencia".ID_AGENCIA)
INNER JOIN "gen$persona" ON ("col$colocacion".ID_IDENTIFICACION = "gen$persona".ID_IDENTIFICACION) AND ("col$colocacion".ID_PERSONA = "gen$persona".ID_PERSONA)
INNER JOIN "col$estado" ON ("col$colocacion".ID_ESTADO_COLOCACION = "col$estado".ID_ESTADO_COLOCACION)

WHERE
"col$colocacion".FECHA_DESEMBOLSO >= :"FECHA1" and
"col$colocacion".FECHA_DESEMBOLSO <= :"FECHA2" and
("col$colocacion".VALOR_DESEMBOLSO - "col$colocacion".ABONOS_CAPITAL) > 0

ORDER BY "col$colocacion".ID_COLOCACION

INTO :ID_AGENCIA, :ID_COLOCACION, :ID_IDENTIFICACION, :ID_PERSONA,
     :FECHA_DESEMBOLSO, :VALOR_DESEMBOLSO, :SALDO_ACTUAL, :PLAZO_COLOCACION,
     :TASA_INTERES_CORRIENTE, :PUNTOS_INTERES,
     :AMORTIZA_CAPITAL, :AMORTIZA_INTERES, :FECHA_CAPITAL, :FECHA_INTERES,
     :DESCRIPCION_AGENCIA, :NOMBRE, :PRIMER_APELLIDO,
     :SEGUNDO_APELLIDO, :DESCRIPCION_ESTADO_COLOCACION
DO
  SUSPEND;
END
^


/* Stored Procedure: P_COL_003 */
CREATE PROCEDURE P_COL_003 
RETURNS (
    TOTAL INTEGER)
AS
BEGIN
  /* Procedure body */
  SELECT COUNT("col$colocacion".ID_COLOCACION) AS TOTAL FROM "col$colocacion"
  INNER JOIN "col$estado" ON ("col$colocacion".ID_ESTADO_COLOCACION = "col$estado".ID_ESTADO_COLOCACION )
  WHERE "col$colocacion".VALOR_DESEMBOLSO <> "col$colocacion".ABONOS_CAPITAL AND
        (("col$estado".ES_VIGENTE <> 0) or ("col$estado".ES_PREJURIDICO <> 0) or ("col$estado".ES_JURIDICO <> 0))
  INTO :TOTAL;
  SUSPEND;
END
^


/* Stored Procedure: P_COL_004 */
CREATE PROCEDURE P_COL_004 
RETURNS (
    ID_AGENCIA SMALLINT,
    ID_COLOCACION CHAR (11),
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    ID_CLASIFICACION SMALLINT,
    ID_GARANTIA SMALLINT,
    ID_CATEGORIA CHAR (1),
    ID_EVALUACION CHAR (1),
    FECHA_DESEMBOLSO DATE,
    VALOR_DESEMBOLSO NUMERIC (18, 3),
    TIPO_INTERES CHAR (1),
    SALDO NUMERIC (18, 3),
    ID_TIPO_CUOTA SMALLINT,
    ID_INTERES SMALLINT,
    VALOR_ACTUAL_TASA FLOAT,
    TASA_INTERES_CORRIENTE FLOAT,
    TASA_INTERES_MORA FLOAT,
    PUNTOS_INTERES FLOAT,
    TIPOC_CAPITAL CHAR (1),
    TIPOC_INTERES CHAR (1),
    TIPOC_CUOTA CHAR (1),
    TIPOC_ES_VARIABLE SMALLINT,
    TIPOC_ES_FIJA SMALLINT,
    AMORTIZA_INTERES INTEGER,
    AMORTIZA_CAPITAL INTEGER,
    PERIODO_GRACIA INTEGER,
    DIAS_PRORROGADOS INTEGER,
    FECHA_CAPITAL DATE,
    FECHA_INTERES DATE,
    VALOR_CUOTA NUMERIC (18, 3),
    ID_ESTADO_COLOCACION SMALLINT)
AS
BEGIN
  /* Procedure body */
FOR
SELECT
  "col$colocacion".ID_AGENCIA,
  "col$colocacion".ID_COLOCACION,
  "col$colocacion".ID_IDENTIFICACION,
  "col$colocacion".ID_PERSONA,
  "col$colocacion".ID_CLASIFICACION,
  "col$colocacion".ID_GARANTIA,
  "col$colocacion".ID_CATEGORIA,
  "col$colocacion".ID_EVALUACION,
  "col$colocacion".FECHA_DESEMBOLSO,
  "col$colocacion".VALOR_DESEMBOLSO,
  "col$colocacion".TIPO_INTERES,
  ("col$colocacion".VALOR_DESEMBOLSO - "col$colocacion".ABONOS_CAPITAL) AS SALDO,
  "col$colocacion".ID_TIPO_CUOTA,
  "col$colocacion".ID_INTERES,
  "col$tasasvariables".VALOR_ACTUAL_TASA,
  "col$colocacion".TASA_INTERES_CORRIENTE,
  "col$colocacion".TASA_INTERES_MORA,
  "col$colocacion".PUNTOS_INTERES,
  "col$tiposcuota".CAPITAL,
  "col$tiposcuota".INTERES,
  "col$tiposcuota".TIPO_CUOTA,
  "col$tiposcuota".ES_VARIABLE,
  "col$tiposcuota".ES_FIJA,
  "col$colocacion".AMORTIZA_INTERES,
  "col$colocacion".AMORTIZA_CAPITAL,
  "col$colocacion".PERIODO_GRACIA,
  "col$colocacion".DIAS_PRORROGADOS,
  "col$colocacion".FECHA_CAPITAL,
  "col$colocacion".FECHA_INTERES,
  "col$colocacion".VALOR_CUOTA,
  "col$colocacion".ID_ESTADO_COLOCACION
FROM
  "col$colocacion"
  LEFT JOIN "col$tasasvariables" ON ("col$colocacion".ID_INTERES = "col$tasasvariables".ID_INTERES)
  LEFT JOIN "col$tiposcuota" ON ("col$colocacion".ID_TIPO_CUOTA = "col$tiposcuota".ID_TIPOS_CUOTA)
  INNER JOIN "col$estado" ON ("col$colocacion".ID_ESTADO_COLOCACION = "col$estado".ID_ESTADO_COLOCACION )
  WHERE "col$colocacion".VALOR_DESEMBOLSO <> "col$colocacion".ABONOS_CAPITAL AND
        (("col$estado".ES_VIGENTE <> 0) or ("col$estado".ES_PREJURIDICO <> 0) or ("col$estado".ES_JURIDICO <> 0))
  ORDER BY ID_AGENCIA,ID_COLOCACION
  INTO :ID_AGENCIA,:ID_COLOCACION,:ID_IDENTIFICACION,:ID_PERSONA,:ID_CLASIFICACION,:ID_GARANTIA,:ID_CATEGORIA,:ID_EVALUACION,:FECHA_DESEMBOLSO,
       :VALOR_DESEMBOLSO,:TIPO_INTERES,:SALDO,:ID_TIPO_CUOTA,:ID_INTERES,:VALOR_ACTUAL_TASA,:TASA_INTERES_CORRIENTE,:TASA_INTERES_MORA,:PUNTOS_INTERES,
       :TIPOC_CAPITAL,:TIPOC_INTERES,:TIPOC_CUOTA,:TIPOC_ES_VARIABLE,:TIPOC_ES_FIJA,:AMORTIZA_INTERES,:AMORTIZA_CAPITAL,
       :PERIODO_GRACIA,:DIAS_PRORROGADOS,:FECHA_CAPITAL,:FECHA_INTERES,:VALOR_CUOTA,:ID_ESTADO_COLOCACION
  DO
  SUSPEND;
END
^


/* Stored Procedure: P_COL_MAS36 */
CREATE PROCEDURE P_COL_MAS36 
RETURNS (
    ID_COLOCACION VARCHAR (11),
    VALOR_DESEMBOLSO INTEGER,
    SALDO INTEGER)
AS
DECLARE VARIABLE COD INTEGER;
DECLARE VARIABLE ADM INTEGER;
BEGIN
  FOR
   select ID_COLOCACION, VALOR_DESEMBOLSO,
   VALOR_DESEMBOLSO - ABONOS_CAPITAL AS SALDO
   from "col$colocacion"
   where
   PLAZO_COLOCACION > 1080 and
   ID_ESTADO_COLOCACION <= 3
   INTO :ID_COLOCACION, :VALOR_DESEMBOLSO, :SALDO
   DO
    begin
      SELECT count(*) from "col$colgarantias"
      where ID_COLOCACION = :ID_COLOCACION
      INTO :COD;

      select count(*) from "col$colgarantiasreal"
      where ID_COLOCACION = :ID_COLOCACION
      INTO :ADM;
      
      if (COD > 0 and ADM = 0) then SUSPEND;
   end
END
^


/* Stored Procedure: P_GEN_0001 */
CREATE PROCEDURE P_GEN_0001 (
    PRIMERO VARCHAR (30),
    SEGUNDO VARCHAR (30),
    NOMBRE1 VARCHAR (90))
RETURNS (
    ID_IDENTIFICACION SMALLINT,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (90),
    NUMERO_CUENTA INTEGER)
AS
BEGIN
  /* Procedure body */
  FOR
     SELECT "gen$persona".ID_IDENTIFICACION, "gen$persona".ID_PERSONA, "gen$persona".PRIMER_APELLIDO, "gen$persona".SEGUNDO_APELLIDO, "gen$persona".NOMBRE, "cap$maestrotitular".NUMERO_CUENTA from "gen$persona"
     LEFT JOIN "cap$maestrotitular" ON ( "gen$persona".ID_IDENTIFICACION = "cap$maestrotitular".ID_IDENTIFICACION and "gen$persona".ID_PERSONA = "cap$maestrotitular".ID_PERSONA)
     WHERE (PRIMER_APELLIDO LIKE :"PRIMER_APELLIDO" and
     SEGUNDO_APELLIDO LIKE :"SEGUNDO_APELLIDO" and
     NOMBRE LIKE :"NOMBRE" and "cap$maestrotitular".ID_TIPO_CAPTACION = 1)
     INTO :ID_IDENTIFICACION,:ID_PERSONA,:PRIMER_APELLIDO,:SEGUNDO_APELLIDO,:NOMBRE,:NUMERO_CUENTA
  DO
  SUSPEND;
END
^


/* Stored Procedure: SALDO_MINIMO */
CREATE PROCEDURE SALDO_MINIMO (
    TIPO INTEGER)
RETURNS (
    SALDO_MINIMO NUMERIC (18, 3))
AS
BEGIN
  SELECT SALDO_MINIMO from "cap$tipocaptacion" where ID_TIPO_CAPTACION = :TIPO INTO :SALDO_MINIMO;
  /* Procedure body */
  SUSPEND;
END
^


/* Stored Procedure: SALDO_DISPONIBLE */
CREATE PROCEDURE SALDO_DISPONIBLE (
    AG SMALLINT,
    TP SMALLINT,
    CTA INTEGER,
    DGT INTEGER,
    ANO CHAR (4),
    FECHA1 DATE,
    FECHA2 DATE)
RETURNS (
    SALDO_DISPONIBLE NUMERIC (18, 3))
AS
 declare variable AGENCIA SMALLINT;
 declare variable TIPO SMALLINT;
 declare variable NUMERO_CUENTA INTEGER;
 declare variable DIGITO_CUENTA INTEGER;
 declare variable SALDO NUMERIC(18,3);
 declare variable INICIAL NUMERIC(18,3);
 declare variable MOVIMIENTO NUMERIC(18,3);
 declare variable CHEQUES NUMERIC(18,3);
 declare variable MINIMO NUMERIC(18,3);
BEGIN
  FOR
    SELECT "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    FROM "cap$maestro"
    WHERE "cap$maestro".ID_TIPO_CAPTACION = :TP and "cap$maestro".ID_AGENCIA = :AG and "cap$maestro".NUMERO_CUENTA = :CTA and "cap$maestro".DIGITO_CUENTA = :DGT
    ORDER BY "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    INTO :AGENCIA, :TIPO, :NUMERO_CUENTA, :DIGITO_CUENTA
  DO
   BEGIN
    EXECUTE PROCEDURE P_CAP_0012 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,ANO) RETURNING_VALUES :INICIAL;
    EXECUTE PROCEDURE P_CAP_0010 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,FECHA1,FECHA2) RETURNING_VALUES :MOVIMIENTO;
    EXECUTE PROCEDURE P_CAP_0011N (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA) RETURNING_VALUES :CHEQUES;
    EXECUTE PROCEDURE SALDO_MINIMO(TIPO) RETURNING_VALUES :MINIMO;
    SALDO_DISPONIBLE = INICIAL + MOVIMIENTO - CHEQUES - MINIMO;
    SUSPEND;
   END
END
^


/* Stored Procedure: SALDO_MOVICOL */
CREATE PROCEDURE SALDO_MOVICOL (
    CAJA VARCHAR (1),
    DESDE VARCHAR (20),
    HASTA VARCHAR (20))
RETURNS (
    SALDO_BILLETES NUMERIC (18, 3),
    SALDO_MONEDAS NUMERIC (18, 3))
AS
BEGIN
SELECT
  SUM("caj$movimientocol".BILLETES) AS BIILLETES,
  SUM("caj$movimientocol".MONEDAS) AS MONEDAS
FROM
  "caj$movimientocol"
WHERE
  ("caj$movimientocol".ID_CAJA = :caja) AND
  ("caj$movimientocol".FECHA_MOV BETWEEN :desde AND :hasta)
  INTO :SALDO_BILLETES,SALDO_MONEDAS;
  SUSPEND;
END
^


/* Stored Procedure: SALDO_MOVIMIENTO */
CREATE PROCEDURE SALDO_MOVIMIENTO (
    CAJA VARCHAR (1),
    MOVIMIENTO INTEGER,
    DESDE VARCHAR (20),
    HASTA VARCHAR (20))
RETURNS (
    SALDO_CHEQUE NUMERIC (18, 3),
    SALDO_MONEDA NUMERIC (18, 3),
    SALDO_BILLETES NUMERIC (18, 3))
AS
BEGIN
SELECT
  SUM("caj$movimiento".BILLETES) AS SALDO_BILLETE,
  SUM("caj$movimiento".MONEDAS) AS SALDO_MONEDA,
  SUM("caj$movimiento".CHEQUES) AS SALDO_CHEQUE
FROM
  "caj$movimiento"
WHERE
  ("caj$movimiento".ID_CAJA = :CAJA) AND
 ("caj$movimiento".FECHA_MOV BETWEEN :DESDE AND :HASTA) AND
  ("caj$movimiento".ID_TIPO_MOVIMIENTO = :MOVIMIENTO)
  INTO :SALDO_BILLETES,:SALDO_MONEDA,:SALDO_CHEQUE;
  SUSPEND;
END
^


/* Stored Procedure: SALDOS_CUENTAS */
CREATE PROCEDURE SALDOS_CUENTAS (
    ID INTEGER,
    ANO CHAR (4),
    FECHA1 DATE,
    FECHA2 DATE)
RETURNS (
    AG INTEGER,
    NUMERO INTEGER,
    DIGITO INTEGER,
    SALDO_ACTUAL NUMERIC (18, 3))
AS
 declare variable AGENCIA SMALLINT;
 declare variable TIPO SMALLINT;
 declare variable NUMERO_CUENTA INTEGER;
 declare variable DIGITO_CUENTA INTEGER;
 declare variable SALDO NUMERIC(18,3);
 declare variable INICIAL NUMERIC(18,3);
 declare variable MOVIMIENTO NUMERIC(18,3);
BEGIN
  FOR
    SELECT "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    FROM "cap$maestro"
    WHERE "cap$maestro".ID_TIPO_CAPTACION = :ID
    ORDER BY "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    INTO :AGENCIA, :TIPO, :NUMERO_CUENTA, :DIGITO_CUENTA
  DO
   BEGIN
    EXECUTE PROCEDURE P_CAP_0012 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,ANO) RETURNING_VALUES :INICIAL;
    EXECUTE PROCEDURE P_CAP_0010 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,FECHA1,FECHA2) RETURNING_VALUES :MOVIMIENTO;
    SALDO_ACTUAL = INICIAL + MOVIMIENTO;
    AG = AGENCIA;
    NUMERO = NUMERO_CUENTA;
    DIGITO = DIGITO_CUENTA;
    if (SALDO_ACTUAL <> 0) then
    SUSPEND;
   END
END
^


/* Stored Procedure: SALDOS_CUENTAS1 */
CREATE PROCEDURE SALDOS_CUENTAS1 (
    ID INTEGER,
    ANO CHAR (4),
    FECHA1 DATE,
    FECHA2 DATE)
RETURNS (
    AG INTEGER,
    NUMERO INTEGER,
    DIGITO INTEGER,
    SALDO_ACTUAL NUMERIC (18, 3))
AS
 declare variable AGENCIA SMALLINT;
 declare variable TIPO SMALLINT;
 declare variable NUMERO_CUENTA INTEGER;
 declare variable DIGITO_CUENTA INTEGER;
 declare variable SALDO NUMERIC(18,3);
 declare variable INICIAL NUMERIC(18,3);
 declare variable MOVIMIENTO NUMERIC(18,3);
BEGIN
  FOR
    SELECT "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    FROM "cap$maestro"
    WHERE "cap$maestro".ID_TIPO_CAPTACION = :ID
    ORDER BY "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    INTO :AGENCIA, :TIPO, :NUMERO_CUENTA, :DIGITO_CUENTA
  DO
   BEGIN
    EXECUTE PROCEDURE P_CAP_0012 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,ANO) RETURNING_VALUES :INICIAL;
    EXECUTE PROCEDURE P_CAP_0010 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,FECHA1,FECHA2) RETURNING_VALUES :MOVIMIENTO;
    SALDO_ACTUAL = INICIAL + MOVIMIENTO;
    AG = AGENCIA;
    NUMERO = NUMERO_CUENTA;
    DIGITO = DIGITO_CUENTA;
    SUSPEND;
   END
END
^


/* Stored Procedure: SP_FECHA_ACTUAL */
CREATE PROCEDURE SP_FECHA_ACTUAL 
RETURNS (
    FECHA DATE)
AS
BEGIN
  /* Procedure body */
  SELECT CURRENT_DATE FROM RDB$DATABASE INTO :FECHA;
  SUSPEND;
END
^


/* Stored Procedure: SP_FECHAHORA_ACTUAL */
CREATE PROCEDURE SP_FECHAHORA_ACTUAL 
RETURNS (
    FECHAHORA TIMESTAMP)
AS
BEGIN
  /* Procedure body */
  SELECT current_timestamp FROM RDB$DATABASE INTO :FECHAHORA;
  SUSPEND;
END
^


/* Stored Procedure: "SP_GEN_""col$tasafijas""_ID" */
CREATE PROCEDURE "SP_GEN_""col$tasafijas""_ID" 
RETURNS (
    ID INTEGER)
AS
BEGIN
  ID = GEN_ID("GEN_""col$tasafijas""_ID", 1);
END
^


/* Stored Procedure: SP_HORA_ACTUAL */
CREATE PROCEDURE SP_HORA_ACTUAL 
RETURNS (
    HORA TIME)
AS
BEGIN
  /* Procedure body */
  SELECT CURRENT_TIME FROM RDB$DATABASE INTO :HORA;
  SUSPEND;
END
^


/* Stored Procedure: SP_SALDOS_CUENTAS_NOMBRES */
CREATE PROCEDURE SP_SALDOS_CUENTAS_NOMBRES (
    ID INTEGER,
    ANO CHAR (4),
    FECHA1 DATE,
    FECHA2 DATE)
RETURNS (
    AG INTEGER,
    NUMERO INTEGER,
    DIGITO INTEGER,
    ID_PERSONA VARCHAR (15),
    PRIMER_APELLIDO VARCHAR (30),
    SEGUNDO_APELLIDO VARCHAR (30),
    NOMBRE VARCHAR (255),
    SALDO_ACTUAL NUMERIC (18, 3))
AS
 declare variable AGENCIA SMALLINT;
 declare variable TIPO SMALLINT;
 declare variable NUMERO_CUENTA INTEGER;
 declare variable DIGITO_CUENTA INTEGER;
 declare variable SALDO NUMERIC(18,3);
 declare variable INICIAL NUMERIC(18,3);
 declare variable MOVIMIENTO NUMERIC(18,3);
BEGIN
  FOR
    SELECT "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA,
    "cap$maestrotitular".ID_PERSONA,"gen$persona".PRIMER_APELLIDO,"gen$persona".SEGUNDO_APELLIDO,"gen$persona".NOMBRE
    FROM "cap$maestro"
    LEFT JOIN "cap$maestrotitular" ON (("cap$maestro".ID_AGENCIA = "cap$maestrotitular".ID_AGENCIA) AND ("cap$maestro".ID_TIPO_CAPTACION = "cap$maestrotitular".ID_TIPO_CAPTACION) AND ("cap$maestro".NUMERO_CUENTA = "cap$maestrotitular".NUMERO_CUENTA) AND ("cap$maestro".DIGITO_CUENTA = "cap$maestrotitular".DIGITO_CUENTA))
    LEFT JOIN "gen$persona" ON (("cap$maestrotitular".ID_IDENTIFICACION = "gen$persona".ID_IDENTIFICACION) AND ("cap$maestrotitular".ID_PERSONA = "gen$persona".ID_PERSONA))
    WHERE "cap$maestro".ID_TIPO_CAPTACION = :ID and "cap$maestrotitular".NUMERO_TITULAR = 1
    ORDER BY "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    INTO :AGENCIA, :TIPO, :NUMERO_CUENTA, :DIGITO_CUENTA, :ID_PERSONA, :PRIMER_APELLIDO,:SEGUNDO_APELLIDO,:NOMBRE
  DO
   BEGIN
    EXECUTE PROCEDURE P_CAP_0012 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,ANO) RETURNING_VALUES :INICIAL;
    EXECUTE PROCEDURE P_CAP_0010 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,FECHA1,FECHA2) RETURNING_VALUES :MOVIMIENTO;
    SALDO_ACTUAL = INICIAL + MOVIMIENTO;
    AG = AGENCIA;
    NUMERO = NUMERO_CUENTA;
    DIGITO = DIGITO_CUENTA;
    if (SALDO_ACTUAL <> 0) then
    SUSPEND;
   END
END
^


/* Stored Procedure: SUMATORIA_CAPTACIONES */
CREATE PROCEDURE SUMATORIA_CAPTACIONES (
    ID INTEGER,
    ANO CHAR (4),
    FECHA1 DATE,
    FECHA2 DATE)
RETURNS (
    DESCRIPCION VARCHAR (100),
    CONTEO INTEGER,
    SUMATORIA NUMERIC (18, 3))
AS
 declare variable AGENCIA SMALLINT;
 declare variable TIPO SMALLINT;
 declare variable NUMERO_CUENTA INTEGER;
 declare variable DIGITO_CUENTA INTEGER;
 declare variable SALDO NUMERIC(18,3);
 declare variable INICIAL NUMERIC(18,3);
 declare variable MOVIMIENTO NUMERIC(18,3);
BEGIN
  SUMATORIA = 0;
  CONTEO = 0;
  SELECT DESCRIPCION from "cap$tipocaptacion" WHERE ID_TIPO_CAPTACION = :ID into :DESCRIPCION;
  FOR
    SELECT "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    FROM "cap$maestro"
    WHERE "cap$maestro".ID_TIPO_CAPTACION = :ID
    ORDER BY "cap$maestro".ID_AGENCIA, "cap$maestro".ID_TIPO_CAPTACION, "cap$maestro".NUMERO_CUENTA, "cap$maestro".DIGITO_CUENTA
    INTO :AGENCIA, :TIPO, :NUMERO_CUENTA, :DIGITO_CUENTA
  DO
   BEGIN
     EXECUTE PROCEDURE P_CAP_0012 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,ANO) RETURNING_VALUES :INICIAL;
     EXECUTE PROCEDURE P_CAP_0010 (AGENCIA,TIPO,NUMERO_CUENTA,DIGITO_CUENTA,FECHA1,FECHA2) RETURNING_VALUES :MOVIMIENTO;
    SALDO = INICIAL + MOVIMIENTO;
    if (SALDO <> 0) then
    begin
       SUMATORIA = SUMATORIA + SALDO;
       CONTEO = CONTEO + 1;
    end
   END
   SUSPEND;
END
^


/* Stored Procedure: VALOR_AGENCIA */
CREATE PROCEDURE VALOR_AGENCIA (
    ID_AGENCIA INTEGER,
    MES INTEGER,
    CODIGO CHAR (18))
RETURNS (
    SALDO NUMERIC (18, 3))
AS
declare variable MOVIMIENTOS NUMERIC(18,3);
BEGIN
  FOR
    SELECT CODIGO FROM CON$PUC WHERE CON$PUC.CODIGO = :CODIGO
    INTO :CODIGO
    DO
     BEGIN
      SELECT SUM(CON$SALDOSINICIALES.SALDOINICIAL) AS SALDOINICIAL FROM CON$SALDOSINICIALES WHERE CON$SALDOSINICIALES.CODIGO = :CODIGO and CON$SALDOSINICIALES.ID_AGENCIA = :ID_AGENCIA INTO :SALDO;
      if (SALDO IS NULL)  then SALDO = 0;
      SELECT SUM(CON$SALDOSCUENTA.DEBITO - CON$SALDOSCUENTA.CREDITO) AS MOVIMIENTO FROM CON$SALDOSCUENTA WHERE CON$SALDOSCUENTA.CODIGO = :CODIGO and CON$SALDOSCUENTA.MES <= :MES and CON$SALDOSCUENTA.ID_AGENCIA = :ID_AGENCIA INTO :MOVIMIENTOS;
      if (MOVIMIENTOS IS NULL) then MOVIMIENTOS = 0;
      SALDO = SALDO + MOVIMIENTOS;
      SUSPEND;
    END
END
^


/* Stored Procedure: VALOR_CONSOLIDADO */
CREATE PROCEDURE VALOR_CONSOLIDADO (
    MES INTEGER,
    CODIGO CHAR (18))
RETURNS (
    SALDO NUMERIC (18, 3))
AS
declare variable MOVIMIENTOS NUMERIC(18,3);
BEGIN
  FOR
    SELECT CODIGO FROM CON$PUC WHERE CON$PUC.CODIGO = :CODIGO
    INTO :CODIGO
    DO
     BEGIN
      SELECT SUM(CON$SALDOSINICIALES.SALDOINICIAL) AS SALDOINICIAL FROM CON$SALDOSINICIALES WHERE CON$SALDOSINICIALES.CODIGO = :CODIGO INTO :SALDO;
      if (SALDO IS NULL) then SALDO = 0;
      SELECT SUM(CON$SALDOSCUENTA.DEBITO - CON$SALDOSCUENTA.CREDITO) AS MOVIMIENTO FROM CON$SALDOSCUENTA WHERE CON$SALDOSCUENTA.CODIGO = :CODIGO and CON$SALDOSCUENTA.MES <= :MES INTO :MOVIMIENTOS;
      if (MOVIMIENTOS IS NULL) then MOVIMIENTOS = 0;
      SALDO = SALDO + MOVIMIENTOS;
      SUSPEND;
    END
END
^


SET TERM ; ^

SET TERM ^ ;

/* Triggers definition */



/* Trigger: "AI_gen$abogados_ID_ABOGADO" */
CREATE TRIGGER "AI_gen$abogados_ID_ABOGADO" FOR "gen$abogados" ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_ABOGADO IS NULL) THEN
      NEW.ID_ABOGADO = GEN_ID("gen$abogados_ID_ABOGADO_GEN", 1);
END
^

/* Trigger: REPL$4_100_D_2_3 */
CREATE TRIGGER REPL$4_100_D_2_3 FOR "cap$maestrotitular" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,100,'D',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_100_I_2_3 */
CREATE TRIGGER REPL$4_100_I_2_3 FOR "cap$maestrotitular" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,100,'I',NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_100_U_2_3 */
CREATE TRIGGER REPL$4_100_U_2_3 FOR "cap$maestrotitular" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,100,'U',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_101_D_2_3 */
CREATE TRIGGER REPL$4_101_D_2_3 FOR "cap$obsestado" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,101,'D',OLD.DIGITO_CUENTA||''||OLD.FECHA||''||OLD.HORA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_101_I_2_3 */
CREATE TRIGGER REPL$4_101_I_2_3 FOR "cap$obsestado" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,101,'I',NEW.DIGITO_CUENTA||''||NEW.FECHA||''||NEW.HORA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_101_U_2_3 */
CREATE TRIGGER REPL$4_101_U_2_3 FOR "cap$obsestado" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,101,'U',OLD.DIGITO_CUENTA||''||OLD.FECHA||''||OLD.HORA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.FECHA||''||NEW.HORA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_102_D_2_3 */
CREATE TRIGGER REPL$4_102_D_2_3 FOR "cap$rangos" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,102,'D',OLD.ID_RANGO||''||OLD.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_102_I_2_3 */
CREATE TRIGGER REPL$4_102_I_2_3 FOR "cap$rangos" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,102,'I',NEW.ID_RANGO||''||NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_102_U_2_3 */
CREATE TRIGGER REPL$4_102_U_2_3 FOR "cap$rangos" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,102,'U',OLD.ID_RANGO||''||OLD.ID_TIPO_CAPTACION,NEW.ID_RANGO||''||NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_103_D_2_3 */
CREATE TRIGGER REPL$4_103_D_2_3 FOR "cap$revalorizacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,103,'D',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_103_I_2_3 */
CREATE TRIGGER REPL$4_103_I_2_3 FOR "cap$revalorizacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,103,'I',NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_103_U_2_3 */
CREATE TRIGGER REPL$4_103_U_2_3 FOR "cap$revalorizacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,103,'U',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_105_D_2_3 */
CREATE TRIGGER REPL$4_105_D_2_3 FOR "cap$tablaliquidacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,105,'D',OLD.DIGITO_CUENTA||''||OLD.FECHA_PAGO||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_105_I_2_3 */
CREATE TRIGGER REPL$4_105_I_2_3 FOR "cap$tablaliquidacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,105,'I',NEW.DIGITO_CUENTA||''||NEW.FECHA_PAGO||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_105_U_2_3 */
CREATE TRIGGER REPL$4_105_U_2_3 FOR "cap$tablaliquidacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,105,'U',OLD.DIGITO_CUENTA||''||OLD.FECHA_PAGO||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.FECHA_PAGO||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_106_D_2_3 */
CREATE TRIGGER REPL$4_106_D_2_3 FOR "cap$tipocaptacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,106,'D',OLD.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_106_I_2_3 */
CREATE TRIGGER REPL$4_106_I_2_3 FOR "cap$tipocaptacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,106,'I',NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_106_U_2_3 */
CREATE TRIGGER REPL$4_106_U_2_3 FOR "cap$tipocaptacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,106,'U',OLD.ID_TIPO_CAPTACION,NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_107_D_2_3 */
CREATE TRIGGER REPL$4_107_D_2_3 FOR "cap$tiposestado" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,107,'D',OLD.ID_ESTADO);END
END
^

/* Trigger: REPL$4_107_I_2_3 */
CREATE TRIGGER REPL$4_107_I_2_3 FOR "cap$tiposestado" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,107,'I',NEW.ID_ESTADO);END
END
^

/* Trigger: REPL$4_107_U_2_3 */
CREATE TRIGGER REPL$4_107_U_2_3 FOR "cap$tiposestado" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,107,'U',OLD.ID_ESTADO,NEW.ID_ESTADO);END
END
^

/* Trigger: REPL$4_108_D_2_3 */
CREATE TRIGGER REPL$4_108_D_2_3 FOR "cap$tiposforma" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,108,'D',OLD.ID_FORMA);END
END
^

/* Trigger: REPL$4_108_I_2_3 */
CREATE TRIGGER REPL$4_108_I_2_3 FOR "cap$tiposforma" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,108,'I',NEW.ID_FORMA);END
END
^

/* Trigger: REPL$4_108_U_2_3 */
CREATE TRIGGER REPL$4_108_U_2_3 FOR "cap$tiposforma" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,108,'U',OLD.ID_FORMA,NEW.ID_FORMA);END
END
^

/* Trigger: REPL$4_109_D_2_3 */
CREATE TRIGGER REPL$4_109_D_2_3 FOR "cap$tiposmovimiento" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,109,'D',OLD.ID_TIPO_MOVIMIENTO);END
END
^

/* Trigger: REPL$4_109_I_2_3 */
CREATE TRIGGER REPL$4_109_I_2_3 FOR "cap$tiposmovimiento" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,109,'I',NEW.ID_TIPO_MOVIMIENTO);END
END
^

/* Trigger: REPL$4_109_U_2_3 */
CREATE TRIGGER REPL$4_109_U_2_3 FOR "cap$tiposmovimiento" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,109,'U',OLD.ID_TIPO_MOVIMIENTO,NEW.ID_TIPO_MOVIMIENTO);END
END
^

/* Trigger: REPL$4_110_D_2_3 */
CREATE TRIGGER REPL$4_110_D_2_3 FOR "cap$tiposplancontractual" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,110,'D',OLD.ID_PLAN);END
END
^

/* Trigger: REPL$4_110_I_2_3 */
CREATE TRIGGER REPL$4_110_I_2_3 FOR "cap$tiposplancontractual" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,110,'I',NEW.ID_PLAN);END
END
^

/* Trigger: REPL$4_110_U_2_3 */
CREATE TRIGGER REPL$4_110_U_2_3 FOR "cap$tiposplancontractual" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,110,'U',OLD.ID_PLAN,NEW.ID_PLAN);END
END
^

/* Trigger: REPL$4_111_D_2_3 */
CREATE TRIGGER REPL$4_111_D_2_3 FOR "cap$tipostitulares" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,111,'D',OLD.ID_TIPO_TITULAR);END
END
^

/* Trigger: REPL$4_111_I_2_3 */
CREATE TRIGGER REPL$4_111_I_2_3 FOR "cap$tipostitulares" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,111,'I',NEW.ID_TIPO_TITULAR);END
END
^

/* Trigger: REPL$4_111_U_2_3 */
CREATE TRIGGER REPL$4_111_U_2_3 FOR "cap$tipostitulares" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,111,'U',OLD.ID_TIPO_TITULAR,NEW.ID_TIPO_TITULAR);END
END
^

/* Trigger: REPL$4_112_D_2_3 */
CREATE TRIGGER REPL$4_112_D_2_3 FOR "col$adjetivos" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,112,'D',OLD.ID_ADJETIVO||''||OLD.ID_ENTIDAD);END
END
^

/* Trigger: REPL$4_112_I_2_3 */
CREATE TRIGGER REPL$4_112_I_2_3 FOR "col$adjetivos" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,112,'I',NEW.ID_ADJETIVO||''||NEW.ID_ENTIDAD);END
END
^

/* Trigger: REPL$4_112_U_2_3 */
CREATE TRIGGER REPL$4_112_U_2_3 FOR "col$adjetivos" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,112,'U',OLD.ID_ADJETIVO||''||OLD.ID_ENTIDAD,NEW.ID_ADJETIVO||''||NEW.ID_ENTIDAD);END
END
^

/* Trigger: REPL$4_116_D_2_3 */
CREATE TRIGGER REPL$4_116_D_2_3 FOR "col$categoria" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,116,'D',OLD.ID_CATEGORIA);END
END
^

/* Trigger: REPL$4_116_I_2_3 */
CREATE TRIGGER REPL$4_116_I_2_3 FOR "col$categoria" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,116,'I',NEW.ID_CATEGORIA);END
END
^

/* Trigger: REPL$4_116_U_2_3 */
CREATE TRIGGER REPL$4_116_U_2_3 FOR "col$categoria" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,116,'U',OLD.ID_CATEGORIA,NEW.ID_CATEGORIA);END
END
^

/* Trigger: REPL$4_117_D_2_3 */
CREATE TRIGGER REPL$4_117_D_2_3 FOR "col$causaciones" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,117,'D',OLD.FECHA_CORTE||''||OLD.ID_AGENCIA||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_117_I_2_3 */
CREATE TRIGGER REPL$4_117_I_2_3 FOR "col$causaciones" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,117,'I',NEW.FECHA_CORTE||''||NEW.ID_AGENCIA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_117_U_2_3 */
CREATE TRIGGER REPL$4_117_U_2_3 FOR "col$causaciones" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,117,'U',OLD.FECHA_CORTE||''||OLD.ID_AGENCIA||''||OLD.ID_COLOCACION,NEW.FECHA_CORTE||''||NEW.ID_AGENCIA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_118_D_2_3 */
CREATE TRIGGER REPL$4_118_D_2_3 FOR "col$causacionescontrol" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,118,'D',OLD.FECHA);END
END
^

/* Trigger: REPL$4_118_I_2_3 */
CREATE TRIGGER REPL$4_118_I_2_3 FOR "col$causacionescontrol" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,118,'I',NEW.FECHA);END
END
^

/* Trigger: REPL$4_118_U_2_3 */
CREATE TRIGGER REPL$4_118_U_2_3 FOR "col$causacionescontrol" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,118,'U',OLD.FECHA,NEW.FECHA);END
END
^

/* Trigger: REPL$4_120_D_2_3 */
CREATE TRIGGER REPL$4_120_D_2_3 FOR "col$clasificacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,120,'D',OLD.ID_CLASIFICACION);END
END
^

/* Trigger: REPL$4_120_I_2_3 */
CREATE TRIGGER REPL$4_120_I_2_3 FOR "col$clasificacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,120,'I',NEW.ID_CLASIFICACION);END
END
^

/* Trigger: REPL$4_120_U_2_3 */
CREATE TRIGGER REPL$4_120_U_2_3 FOR "col$clasificacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,120,'U',OLD.ID_CLASIFICACION,NEW.ID_CLASIFICACION);END
END
^

/* Trigger: REPL$4_121_D_2_3 */
CREATE TRIGGER REPL$4_121_D_2_3 FOR COL$CODIGOSPUC INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,121,'D',OLD.ID_CATEGORIA||''||OLD.ID_CLASIFICACION||''||OLD.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_121_I_2_3 */
CREATE TRIGGER REPL$4_121_I_2_3 FOR COL$CODIGOSPUC INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,121,'I',NEW.ID_CATEGORIA||''||NEW.ID_CLASIFICACION||''||NEW.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_121_U_2_3 */
CREATE TRIGGER REPL$4_121_U_2_3 FOR COL$CODIGOSPUC INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,121,'U',OLD.ID_CATEGORIA||''||OLD.ID_CLASIFICACION||''||OLD.ID_GARANTIA,NEW.ID_CATEGORIA||''||NEW.ID_CLASIFICACION||''||NEW.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_122_D_2_3 */
CREATE TRIGGER REPL$4_122_D_2_3 FOR COL$CODIGOSPUCBASICOS INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,122,'D',OLD.ID_CODIGOPUCBASICO);END
END
^

/* Trigger: REPL$4_122_I_2_3 */
CREATE TRIGGER REPL$4_122_I_2_3 FOR COL$CODIGOSPUCBASICOS INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,122,'I',NEW.ID_CODIGOPUCBASICO);END
END
^

/* Trigger: REPL$4_122_U_2_3 */
CREATE TRIGGER REPL$4_122_U_2_3 FOR COL$CODIGOSPUCBASICOS INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,122,'U',OLD.ID_CODIGOPUCBASICO,NEW.ID_CODIGOPUCBASICO);END
END
^

/* Trigger: REPL$4_123_D_2_3 */
CREATE TRIGGER REPL$4_123_D_2_3 FOR "col$colgarantias" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,123,'D',OLD.CSC_GARANTIA||''||OLD.ID_AGENCIA||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_123_I_2_3 */
CREATE TRIGGER REPL$4_123_I_2_3 FOR "col$colgarantias" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,123,'I',NEW.CSC_GARANTIA||''||NEW.ID_AGENCIA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_123_U_2_3 */
CREATE TRIGGER REPL$4_123_U_2_3 FOR "col$colgarantias" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,123,'U',OLD.CSC_GARANTIA||''||OLD.ID_AGENCIA||''||OLD.ID_COLOCACION,NEW.CSC_GARANTIA||''||NEW.ID_AGENCIA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_124_D_2_3 */
CREATE TRIGGER REPL$4_124_D_2_3 FOR "col$colgarantiasreal" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,124,'D',OLD.ID_AGENCIA||''||OLD.ID_COLOCACION||''||OLD.NUMERO_ESCRITURA);END
END
^

/* Trigger: REPL$4_124_I_2_3 */
CREATE TRIGGER REPL$4_124_I_2_3 FOR "col$colgarantiasreal" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,124,'I',NEW.ID_AGENCIA||''||NEW.ID_COLOCACION||''||NEW.NUMERO_ESCRITURA);END
END
^

/* Trigger: REPL$4_124_U_2_3 */
CREATE TRIGGER REPL$4_124_U_2_3 FOR "col$colgarantiasreal" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,124,'U',OLD.ID_AGENCIA||''||OLD.ID_COLOCACION||''||OLD.NUMERO_ESCRITURA,NEW.ID_AGENCIA||''||NEW.ID_COLOCACION||''||NEW.NUMERO_ESCRITURA);END
END
^

/* Trigger: REPL$4_125_D_2_3 */
CREATE TRIGGER REPL$4_125_D_2_3 FOR "col$colocacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,125,'D',OLD.ID_AGENCIA||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_125_I_2_3 */
CREATE TRIGGER REPL$4_125_I_2_3 FOR "col$colocacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,125,'I',NEW.ID_AGENCIA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_125_U_2_3 */
CREATE TRIGGER REPL$4_125_U_2_3 FOR "col$colocacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,125,'U',OLD.ID_AGENCIA||''||OLD.ID_COLOCACION,NEW.ID_AGENCIA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_127_D_2_3 */
CREATE TRIGGER REPL$4_127_D_2_3 FOR "col$controlcobro" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,127,'D',OLD.FECHA_OBSERVACION||''||OLD.ID_AGENCIA||''||OLD.ID_COLOCACION||''||OLD.ID_USUARIO);END
END
^

/* Trigger: REPL$4_127_I_2_3 */
CREATE TRIGGER REPL$4_127_I_2_3 FOR "col$controlcobro" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,127,'I',NEW.FECHA_OBSERVACION||''||NEW.ID_AGENCIA||''||NEW.ID_COLOCACION||''||NEW.ID_USUARIO);END
END
^

/* Trigger: REPL$4_127_U_2_3 */
CREATE TRIGGER REPL$4_127_U_2_3 FOR "col$controlcobro" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,127,'U',OLD.FECHA_OBSERVACION||''||OLD.ID_AGENCIA||''||OLD.ID_COLOCACION||''||OLD.ID_USUARIO,NEW.FECHA_OBSERVACION||''||NEW.ID_AGENCIA||''||NEW.ID_COLOCACION||''||NEW.ID_USUARIO);END
END
^

/* Trigger: REPL$4_128_D_2_3 */
CREATE TRIGGER REPL$4_128_D_2_3 FOR "col$costas" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,128,'D',OLD.FECHA||''||OLD.ID_AGENCIA||''||OLD.ID_CBTE_COLOCACION||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_128_I_2_3 */
CREATE TRIGGER REPL$4_128_I_2_3 FOR "col$costas" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,128,'I',NEW.FECHA||''||NEW.ID_AGENCIA||''||NEW.ID_CBTE_COLOCACION||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_128_U_2_3 */
CREATE TRIGGER REPL$4_128_U_2_3 FOR "col$costas" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,128,'U',OLD.FECHA||''||OLD.ID_AGENCIA||''||OLD.ID_CBTE_COLOCACION||''||OLD.ID_COLOCACION,NEW.FECHA||''||NEW.ID_AGENCIA||''||NEW.ID_CBTE_COLOCACION||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_129_D_2_3 */
CREATE TRIGGER REPL$4_129_D_2_3 FOR "col$descuentos" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,129,'D',OLD.ID_DESCUENTO);END
END
^

/* Trigger: REPL$4_129_I_2_3 */
CREATE TRIGGER REPL$4_129_I_2_3 FOR "col$descuentos" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,129,'I',NEW.ID_DESCUENTO);END
END
^

/* Trigger: REPL$4_129_U_2_3 */
CREATE TRIGGER REPL$4_129_U_2_3 FOR "col$descuentos" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,129,'U',OLD.ID_DESCUENTO,NEW.ID_DESCUENTO);END
END
^

/* Trigger: REPL$4_130_D_2_3 */
CREATE TRIGGER REPL$4_130_D_2_3 FOR "col$enteaprobador" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,130,'D',OLD.ID_ENTE_APROBADOR);END
END
^

/* Trigger: REPL$4_130_I_2_3 */
CREATE TRIGGER REPL$4_130_I_2_3 FOR "col$enteaprobador" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,130,'I',NEW.ID_ENTE_APROBADOR);END
END
^

/* Trigger: REPL$4_130_U_2_3 */
CREATE TRIGGER REPL$4_130_U_2_3 FOR "col$enteaprobador" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,130,'U',OLD.ID_ENTE_APROBADOR,NEW.ID_ENTE_APROBADOR);END
END
^

/* Trigger: REPL$4_131_D_2_3 */
CREATE TRIGGER REPL$4_131_D_2_3 FOR "col$estado" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,131,'D',OLD.ID_ESTADO_COLOCACION);END
END
^

/* Trigger: REPL$4_131_I_2_3 */
CREATE TRIGGER REPL$4_131_I_2_3 FOR "col$estado" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,131,'I',NEW.ID_ESTADO_COLOCACION);END
END
^

/* Trigger: REPL$4_131_U_2_3 */
CREATE TRIGGER REPL$4_131_U_2_3 FOR "col$estado" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,131,'U',OLD.ID_ESTADO_COLOCACION,NEW.ID_ESTADO_COLOCACION);END
END
^

/* Trigger: REPL$4_132_D_2_3 */
CREATE TRIGGER REPL$4_132_D_2_3 FOR "col$extracto" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,132,'D',OLD.FECHA_EXTRACTO||''||OLD.HORA_EXTRACTO||''||OLD.ID_AGENCIA||''||OLD.ID_CBTE_COLOCACION||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_132_I_2_3 */
CREATE TRIGGER REPL$4_132_I_2_3 FOR "col$extracto" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,132,'I',NEW.FECHA_EXTRACTO||''||NEW.HORA_EXTRACTO||''||NEW.ID_AGENCIA||''||NEW.ID_CBTE_COLOCACION||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_132_U_2_3 */
CREATE TRIGGER REPL$4_132_U_2_3 FOR "col$extracto" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,132,'U',OLD.FECHA_EXTRACTO||''||OLD.HORA_EXTRACTO||''||OLD.ID_AGENCIA||''||OLD.ID_CBTE_COLOCACION||''||OLD.ID_COLOCACION,NEW.FECHA_EXTRACTO||''||NEW.HORA_EXTRACTO||''||NEW.ID_AGENCIA||''||NEW.ID_CBTE_COLOCACION||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_134_D_2_3 */
CREATE TRIGGER REPL$4_134_D_2_3 FOR "col$extractodet" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,134,'D',OLD.CODIGO_PUC||''||OLD.FECHA_EXTRACTO||''||OLD.HORA_EXTRACTO||''||OLD.ID_AGENCIA||''||OLD.ID_CBTE_COLOCACION||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_134_I_2_3 */
CREATE TRIGGER REPL$4_134_I_2_3 FOR "col$extractodet" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,134,'I',NEW.CODIGO_PUC||''||NEW.FECHA_EXTRACTO||''||NEW.HORA_EXTRACTO||''||NEW.ID_AGENCIA||''||NEW.ID_CBTE_COLOCACION||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_134_U_2_3 */
CREATE TRIGGER REPL$4_134_U_2_3 FOR "col$extractodet" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,134,'U',OLD.CODIGO_PUC||''||OLD.FECHA_EXTRACTO||''||OLD.HORA_EXTRACTO||''||OLD.ID_AGENCIA||''||OLD.ID_CBTE_COLOCACION||''||OLD.ID_COLOCACION,NEW.CODIGO_PUC||''||NEW.FECHA_EXTRACTO||''||NEW.HORA_EXTRACTO||''||NEW.ID_AGENCIA||''||NEW.ID_CBTE_COLOCACION||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_135_D_2_3 */
CREATE TRIGGER REPL$4_135_D_2_3 FOR "col$garantia" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,135,'D',OLD.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_135_I_2_3 */
CREATE TRIGGER REPL$4_135_I_2_3 FOR "col$garantia" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,135,'I',NEW.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_135_U_2_3 */
CREATE TRIGGER REPL$4_135_U_2_3 FOR "col$garantia" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,135,'U',OLD.ID_GARANTIA,NEW.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_137_D_2_3 */
CREATE TRIGGER REPL$4_137_D_2_3 FOR "col$inversion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,137,'D',OLD.ID_INVERSION);END
END
^

/* Trigger: REPL$4_137_I_2_3 */
CREATE TRIGGER REPL$4_137_I_2_3 FOR "col$inversion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,137,'I',NEW.ID_INVERSION);END
END
^

/* Trigger: REPL$4_137_U_2_3 */
CREATE TRIGGER REPL$4_137_U_2_3 FOR "col$inversion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,137,'U',OLD.ID_INVERSION,NEW.ID_INVERSION);END
END
^

/* Trigger: REPL$4_138_D_2_3 */
CREATE TRIGGER REPL$4_138_D_2_3 FOR "col$lineas" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,138,'D',OLD.ID_LINEA);END
END
^

/* Trigger: REPL$4_138_I_2_3 */
CREATE TRIGGER REPL$4_138_I_2_3 FOR "col$lineas" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,138,'I',NEW.ID_LINEA);END
END
^

/* Trigger: REPL$4_138_U_2_3 */
CREATE TRIGGER REPL$4_138_U_2_3 FOR "col$lineas" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,138,'U',OLD.ID_LINEA,NEW.ID_LINEA);END
END
^

/* Trigger: REPL$4_139_D_2_3 */
CREATE TRIGGER REPL$4_139_D_2_3 FOR "col$novedades" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,139,'D',OLD.ID_ENTIDAD||''||OLD.ID_NOVEDAD);END
END
^

/* Trigger: REPL$4_139_I_2_3 */
CREATE TRIGGER REPL$4_139_I_2_3 FOR "col$novedades" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,139,'I',NEW.ID_ENTIDAD||''||NEW.ID_NOVEDAD);END
END
^

/* Trigger: REPL$4_139_U_2_3 */
CREATE TRIGGER REPL$4_139_U_2_3 FOR "col$novedades" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,139,'U',OLD.ID_ENTIDAD||''||OLD.ID_NOVEDAD,NEW.ID_ENTIDAD||''||NEW.ID_NOVEDAD);END
END
^

/* Trigger: REPL$4_140_D_2_3 */
CREATE TRIGGER REPL$4_140_D_2_3 FOR "col$porccausacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,140,'D',OLD.ID_CLASIFICACION||''||OLD.ID_EDAD||''||OLD.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_140_I_2_3 */
CREATE TRIGGER REPL$4_140_I_2_3 FOR "col$porccausacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,140,'I',NEW.ID_CLASIFICACION||''||NEW.ID_EDAD||''||NEW.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_140_U_2_3 */
CREATE TRIGGER REPL$4_140_U_2_3 FOR "col$porccausacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,140,'U',OLD.ID_CLASIFICACION||''||OLD.ID_EDAD||''||OLD.ID_GARANTIA,NEW.ID_CLASIFICACION||''||NEW.ID_EDAD||''||NEW.ID_GARANTIA);END
END
^

/* Trigger: REPL$4_142_D_2_3 */
CREATE TRIGGER REPL$4_142_D_2_3 FOR "col$respaldo" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,142,'D',OLD.ID_RESPALDO);END
END
^

/* Trigger: REPL$4_142_I_2_3 */
CREATE TRIGGER REPL$4_142_I_2_3 FOR "col$respaldo" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,142,'I',NEW.ID_RESPALDO);END
END
^

/* Trigger: REPL$4_142_U_2_3 */
CREATE TRIGGER REPL$4_142_U_2_3 FOR "col$respaldo" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,142,'U',OLD.ID_RESPALDO,NEW.ID_RESPALDO);END
END
^

/* Trigger: REPL$4_143_D_2_3 */
CREATE TRIGGER REPL$4_143_D_2_3 FOR "col$tablaliquidacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,143,'D',OLD.CUOTA_NUMERO||''||OLD.FECHA_A_PAGAR||''||OLD.ID_AGENCIA||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_143_I_2_3 */
CREATE TRIGGER REPL$4_143_I_2_3 FOR "col$tablaliquidacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,143,'I',NEW.CUOTA_NUMERO||''||NEW.FECHA_A_PAGAR||''||NEW.ID_AGENCIA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_143_U_2_3 */
CREATE TRIGGER REPL$4_143_U_2_3 FOR "col$tablaliquidacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,143,'U',OLD.CUOTA_NUMERO||''||OLD.FECHA_A_PAGAR||''||OLD.ID_AGENCIA||''||OLD.ID_COLOCACION,NEW.CUOTA_NUMERO||''||NEW.FECHA_A_PAGAR||''||NEW.ID_AGENCIA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_145_D_2_3 */
CREATE TRIGGER REPL$4_145_D_2_3 FOR "col$tasadtf" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,145,'D',OLD.ID_TASA_DTF);END
END
^

/* Trigger: REPL$4_145_I_2_3 */
CREATE TRIGGER REPL$4_145_I_2_3 FOR "col$tasadtf" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,145,'I',NEW.ID_TASA_DTF);END
END
^

/* Trigger: REPL$4_145_U_2_3 */
CREATE TRIGGER REPL$4_145_U_2_3 FOR "col$tasadtf" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,145,'U',OLD.ID_TASA_DTF,NEW.ID_TASA_DTF);END
END
^

/* Trigger: REPL$4_146_D_2_3 */
CREATE TRIGGER REPL$4_146_D_2_3 FOR "col$tasafijas" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,146,'D',OLD.ID_TASA_FIJA);END
END
^

/* Trigger: REPL$4_146_I_2_3 */
CREATE TRIGGER REPL$4_146_I_2_3 FOR "col$tasafijas" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,146,'I',NEW.ID_TASA_FIJA);END
END
^

/* Trigger: REPL$4_146_U_2_3 */
CREATE TRIGGER REPL$4_146_U_2_3 FOR "col$tasafijas" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,146,'U',OLD.ID_TASA_FIJA,NEW.ID_TASA_FIJA);END
END
^

/* Trigger: REPL$4_147_D_2_3 */
CREATE TRIGGER REPL$4_147_D_2_3 FOR "col$tasasvariables" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,147,'D',OLD.ID_INTERES);END
END
^

/* Trigger: REPL$4_147_I_2_3 */
CREATE TRIGGER REPL$4_147_I_2_3 FOR "col$tasasvariables" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,147,'I',NEW.ID_INTERES);END
END
^

/* Trigger: REPL$4_147_U_2_3 */
CREATE TRIGGER REPL$4_147_U_2_3 FOR "col$tasasvariables" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,147,'U',OLD.ID_INTERES,NEW.ID_INTERES);END
END
^

/* Trigger: REPL$4_149_D_2_3 */
CREATE TRIGGER REPL$4_149_D_2_3 FOR "col$tiposcuota" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,149,'D',OLD.ID_TIPOS_CUOTA);END
END
^

/* Trigger: REPL$4_149_I_2_3 */
CREATE TRIGGER REPL$4_149_I_2_3 FOR "col$tiposcuota" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,149,'I',NEW.ID_TIPOS_CUOTA);END
END
^

/* Trigger: REPL$4_149_U_2_3 */
CREATE TRIGGER REPL$4_149_U_2_3 FOR "col$tiposcuota" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,149,'U',OLD.ID_TIPOS_CUOTA,NEW.ID_TIPOS_CUOTA);END
END
^

/* Trigger: REPL$4_150_D_2_3 */
CREATE TRIGGER REPL$4_150_D_2_3 FOR CON$AUXILIAR INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,150,'D',OLD.CODIGO||''||OLD.FECHA||''||OLD.ID_AGENCIA||''||OLD.ID_COMPROBANTE);END
END
^

/* Trigger: REPL$4_150_I_2_3 */
CREATE TRIGGER REPL$4_150_I_2_3 FOR CON$AUXILIAR INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,150,'I',NEW.CODIGO||''||NEW.FECHA||''||NEW.ID_AGENCIA||''||NEW.ID_COMPROBANTE);END
END
^

/* Trigger: REPL$4_150_U_2_3 */
CREATE TRIGGER REPL$4_150_U_2_3 FOR CON$AUXILIAR INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,150,'U',OLD.CODIGO||''||OLD.FECHA||''||OLD.ID_AGENCIA||''||OLD.ID_COMPROBANTE,NEW.CODIGO||''||NEW.FECHA||''||NEW.ID_AGENCIA||''||NEW.ID_COMPROBANTE);END
END
^

/* Trigger: REPL$4_155_D_2_3 */
CREATE TRIGGER REPL$4_155_D_2_3 FOR CON$COMPROBANTE INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,155,'D',OLD.ID_AGENCIA||''||OLD.ID_COMPROBANTE);END
END
^

/* Trigger: REPL$4_155_I_2_3 */
CREATE TRIGGER REPL$4_155_I_2_3 FOR CON$COMPROBANTE INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,155,'I',NEW.ID_AGENCIA||''||NEW.ID_COMPROBANTE);END
END
^

/* Trigger: REPL$4_155_U_2_3 */
CREATE TRIGGER REPL$4_155_U_2_3 FOR CON$COMPROBANTE INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,155,'U',OLD.ID_AGENCIA||''||OLD.ID_COMPROBANTE,NEW.ID_AGENCIA||''||NEW.ID_COMPROBANTE);END
END
^

/* Trigger: REPL$4_158_D_2_3 */
CREATE TRIGGER REPL$4_158_D_2_3 FOR "con$fechasplanillas" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,158,'D',OLD.FECHA);END
END
^

/* Trigger: REPL$4_158_I_2_3 */
CREATE TRIGGER REPL$4_158_I_2_3 FOR "con$fechasplanillas" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,158,'I',NEW.FECHA);END
END
^

/* Trigger: REPL$4_158_U_2_3 */
CREATE TRIGGER REPL$4_158_U_2_3 FOR "con$fechasplanillas" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,158,'U',OLD.FECHA,NEW.FECHA);END
END
^

/* Trigger: REPL$4_159_D_2_3 */
CREATE TRIGGER REPL$4_159_D_2_3 FOR "con$informes" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,159,'D',OLD.ID);END
END
^

/* Trigger: REPL$4_159_I_2_3 */
CREATE TRIGGER REPL$4_159_I_2_3 FOR "con$informes" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,159,'I',NEW.ID);END
END
^

/* Trigger: REPL$4_159_U_2_3 */
CREATE TRIGGER REPL$4_159_U_2_3 FOR "con$informes" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,159,'U',OLD.ID,NEW.ID);END
END
^

/* Trigger: REPL$4_160_D_2_3 */
CREATE TRIGGER REPL$4_160_D_2_3 FOR CON$PLANILLARESUMEN INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,160,'D',OLD.CODIGO);END
END
^

/* Trigger: REPL$4_160_I_2_3 */
CREATE TRIGGER REPL$4_160_I_2_3 FOR CON$PLANILLARESUMEN INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,160,'I',NEW.CODIGO);END
END
^

/* Trigger: REPL$4_160_U_2_3 */
CREATE TRIGGER REPL$4_160_U_2_3 FOR CON$PLANILLARESUMEN INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,160,'U',OLD.CODIGO,NEW.CODIGO);END
END
^

/* Trigger: REPL$4_161_D_2_3 */
CREATE TRIGGER REPL$4_161_D_2_3 FOR CON$PUC INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,161,'D',OLD.CODIGO||''||OLD.ID_AGENCIA);END
END
^

/* Trigger: REPL$4_161_I_2_3 */
CREATE TRIGGER REPL$4_161_I_2_3 FOR CON$PUC INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,161,'I',NEW.CODIGO||''||NEW.ID_AGENCIA);END
END
^

/* Trigger: REPL$4_161_U_2_3 */
CREATE TRIGGER REPL$4_161_U_2_3 FOR CON$PUC INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,161,'U',OLD.CODIGO||''||OLD.ID_AGENCIA,NEW.CODIGO||''||NEW.ID_AGENCIA);END
END
^

/* Trigger: REPL$4_162_D_2_3 */
CREATE TRIGGER REPL$4_162_D_2_3 FOR "CON$PUCcon" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,162,'D',OLD.CODIGO||''||OLD.ID_AGENCIA||''||OLD.MES);END
END
^

/* Trigger: REPL$4_162_I_2_3 */
CREATE TRIGGER REPL$4_162_I_2_3 FOR "CON$PUCcon" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,162,'I',NEW.CODIGO||''||NEW.ID_AGENCIA||''||NEW.MES);END
END
^

/* Trigger: REPL$4_162_U_2_3 */
CREATE TRIGGER REPL$4_162_U_2_3 FOR "CON$PUCcon" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,162,'U',OLD.CODIGO||''||OLD.ID_AGENCIA||''||OLD.MES,NEW.CODIGO||''||NEW.ID_AGENCIA||''||NEW.MES);END
END
^

/* Trigger: REPL$4_163_D_2_3 */
CREATE TRIGGER REPL$4_163_D_2_3 FOR "CON$PUCinforme" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,163,'D',OLD.CODIGO);END
END
^

/* Trigger: REPL$4_163_I_2_3 */
CREATE TRIGGER REPL$4_163_I_2_3 FOR "CON$PUCinforme" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,163,'I',NEW.CODIGO);END
END
^

/* Trigger: REPL$4_163_U_2_3 */
CREATE TRIGGER REPL$4_163_U_2_3 FOR "CON$PUCinforme" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,163,'U',OLD.CODIGO,NEW.CODIGO);END
END
^

/* Trigger: REPL$4_164_D_2_3 */
CREATE TRIGGER REPL$4_164_D_2_3 FOR CON$RETENCION INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,164,'D',OLD.ID_AGENCIA||''||OLD.ID_COMPROBANTE||''||OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA);END
END
^

/* Trigger: REPL$4_164_I_2_3 */
CREATE TRIGGER REPL$4_164_I_2_3 FOR CON$RETENCION INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,164,'I',NEW.ID_AGENCIA||''||NEW.ID_COMPROBANTE||''||NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA);END
END
^

/* Trigger: REPL$4_164_U_2_3 */
CREATE TRIGGER REPL$4_164_U_2_3 FOR CON$RETENCION INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,164,'U',OLD.ID_AGENCIA||''||OLD.ID_COMPROBANTE||''||OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA,NEW.ID_AGENCIA||''||NEW.ID_COMPROBANTE||''||NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA);END
END
^

/* Trigger: REPL$4_166_D_2_3 */
CREATE TRIGGER REPL$4_166_D_2_3 FOR CON$TIPOCOMPROBANTE INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,166,'D',OLD.ID);END
END
^

/* Trigger: REPL$4_166_I_2_3 */
CREATE TRIGGER REPL$4_166_I_2_3 FOR CON$TIPOCOMPROBANTE INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,166,'I',NEW.ID);END
END
^

/* Trigger: REPL$4_166_U_2_3 */
CREATE TRIGGER REPL$4_166_U_2_3 FOR CON$TIPOCOMPROBANTE INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,166,'U',OLD.ID,NEW.ID);END
END
^

/* Trigger: REPL$4_169_D_2_3 */
CREATE TRIGGER REPL$4_169_D_2_3 FOR "gen$agencia" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,169,'D',OLD.ID_AGENCIA);END
END
^

/* Trigger: REPL$4_169_I_2_3 */
CREATE TRIGGER REPL$4_169_I_2_3 FOR "gen$agencia" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,169,'I',NEW.ID_AGENCIA);END
END
^

/* Trigger: REPL$4_169_U_2_3 */
CREATE TRIGGER REPL$4_169_U_2_3 FOR "gen$agencia" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,169,'U',OLD.ID_AGENCIA,NEW.ID_AGENCIA);END
END
^

/* Trigger: REPL$4_170_D_2_3 */
CREATE TRIGGER REPL$4_170_D_2_3 FOR "gen$bancos" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,170,'D',OLD.ID_BANCO);END
END
^

/* Trigger: REPL$4_170_I_2_3 */
CREATE TRIGGER REPL$4_170_I_2_3 FOR "gen$bancos" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,170,'I',NEW.ID_BANCO);END
END
^

/* Trigger: REPL$4_170_U_2_3 */
CREATE TRIGGER REPL$4_170_U_2_3 FOR "gen$bancos" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,170,'U',OLD.ID_BANCO,NEW.ID_BANCO);END
END
^

/* Trigger: REPL$4_173_D_2_3 */
CREATE TRIGGER REPL$4_173_D_2_3 FOR "gen$denominaciones" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,173,'D',OLD.ID_DENOMINACION);END
END
^

/* Trigger: REPL$4_173_I_2_3 */
CREATE TRIGGER REPL$4_173_I_2_3 FOR "gen$denominaciones" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,173,'I',NEW.ID_DENOMINACION);END
END
^

/* Trigger: REPL$4_173_U_2_3 */
CREATE TRIGGER REPL$4_173_U_2_3 FOR "gen$denominaciones" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,173,'U',OLD.ID_DENOMINACION,NEW.ID_DENOMINACION);END
END
^

/* Trigger: REPL$4_174_D_2_3 */
CREATE TRIGGER REPL$4_174_D_2_3 FOR "gen$direccion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,174,'D',OLD.ID_DIRECCION||''||OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA);END
END
^

/* Trigger: REPL$4_174_I_2_3 */
CREATE TRIGGER REPL$4_174_I_2_3 FOR "gen$direccion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,174,'I',NEW.ID_DIRECCION||''||NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA);END
END
^

/* Trigger: REPL$4_174_U_2_3 */
CREATE TRIGGER REPL$4_174_U_2_3 FOR "gen$direccion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,174,'U',OLD.ID_DIRECCION||''||OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA,NEW.ID_DIRECCION||''||NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA);END
END
^

/* Trigger: REPL$4_175_D_2_3 */
CREATE TRIGGER REPL$4_175_D_2_3 FOR "gen$empleado" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,175,'D',OLD.DOCUMENTO||''||OLD.ID_EMPLEADO);END
END
^

/* Trigger: REPL$4_175_I_2_3 */
CREATE TRIGGER REPL$4_175_I_2_3 FOR "gen$empleado" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,175,'I',NEW.DOCUMENTO||''||NEW.ID_EMPLEADO);END
END
^

/* Trigger: REPL$4_175_U_2_3 */
CREATE TRIGGER REPL$4_175_U_2_3 FOR "gen$empleado" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,175,'U',OLD.DOCUMENTO||''||OLD.ID_EMPLEADO,NEW.DOCUMENTO||''||NEW.ID_EMPLEADO);END
END
^

/* Trigger: REPL$4_177_D_2_3 */
CREATE TRIGGER REPL$4_177_D_2_3 FOR "gen$observaciones" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,177,'D',OLD.FECHA||''||OLD.ID_EMPLEADO||''||OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA);END
END
^

/* Trigger: REPL$4_177_I_2_3 */
CREATE TRIGGER REPL$4_177_I_2_3 FOR "gen$observaciones" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,177,'I',NEW.FECHA||''||NEW.ID_EMPLEADO||''||NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA);END
END
^

/* Trigger: REPL$4_177_U_2_3 */
CREATE TRIGGER REPL$4_177_U_2_3 FOR "gen$observaciones" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,177,'U',OLD.FECHA||''||OLD.ID_EMPLEADO||''||OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA,NEW.FECHA||''||NEW.ID_EMPLEADO||''||NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA);END
END
^

/* Trigger: REPL$4_178_D_2_3 */
CREATE TRIGGER REPL$4_178_D_2_3 FOR "gen$persona" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,178,'D',OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA);END
END
^

/* Trigger: REPL$4_178_I_2_3 */
CREATE TRIGGER REPL$4_178_I_2_3 FOR "gen$persona" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,178,'I',NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA);END
END
^

/* Trigger: REPL$4_178_U_2_3 */
CREATE TRIGGER REPL$4_178_U_2_3 FOR "gen$persona" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,178,'U',OLD.ID_IDENTIFICACION||''||OLD.ID_PERSONA,NEW.ID_IDENTIFICACION||''||NEW.ID_PERSONA);END
END
^

/* Trigger: REPL$4_179_D_2_3 */
CREATE TRIGGER REPL$4_179_D_2_3 FOR "gen$referencias" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,179,'D',OLD.ID_REFERENCIA||''||OLD.TIPO_ID_REFERENCIA||''||OLD.TIPO_REFERENCIA);END
END
^

/* Trigger: REPL$4_179_I_2_3 */
CREATE TRIGGER REPL$4_179_I_2_3 FOR "gen$referencias" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,179,'I',NEW.ID_REFERENCIA||''||NEW.TIPO_ID_REFERENCIA||''||NEW.TIPO_REFERENCIA);END
END
^

/* Trigger: REPL$4_179_U_2_3 */
CREATE TRIGGER REPL$4_179_U_2_3 FOR "gen$referencias" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,179,'U',OLD.ID_REFERENCIA||''||OLD.TIPO_ID_REFERENCIA||''||OLD.TIPO_REFERENCIA,NEW.ID_REFERENCIA||''||NEW.TIPO_ID_REFERENCIA||''||NEW.TIPO_REFERENCIA);END
END
^

/* Trigger: REPL$4_180_D_2_3 */
CREATE TRIGGER REPL$4_180_D_2_3 FOR "gen$tiposciiu" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,180,'D',OLD.ID_CIIU);END
END
^

/* Trigger: REPL$4_180_I_2_3 */
CREATE TRIGGER REPL$4_180_I_2_3 FOR "gen$tiposciiu" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,180,'I',NEW.ID_CIIU);END
END
^

/* Trigger: REPL$4_180_U_2_3 */
CREATE TRIGGER REPL$4_180_U_2_3 FOR "gen$tiposciiu" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,180,'U',OLD.ID_CIIU,NEW.ID_CIIU);END
END
^

/* Trigger: REPL$4_181_D_2_3 */
CREATE TRIGGER REPL$4_181_D_2_3 FOR "gen$tiposclaseciiu" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,181,'D',OLD.ID_CLASE_CIIU);END
END
^

/* Trigger: REPL$4_181_I_2_3 */
CREATE TRIGGER REPL$4_181_I_2_3 FOR "gen$tiposclaseciiu" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,181,'I',NEW.ID_CLASE_CIIU);END
END
^

/* Trigger: REPL$4_181_U_2_3 */
CREATE TRIGGER REPL$4_181_U_2_3 FOR "gen$tiposclaseciiu" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,181,'U',OLD.ID_CLASE_CIIU,NEW.ID_CLASE_CIIU);END
END
^

/* Trigger: REPL$4_182_D_2_3 */
CREATE TRIGGER REPL$4_182_D_2_3 FOR "gen$tiposdireccion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,182,'D',OLD.ID_DIRECCION);END
END
^

/* Trigger: REPL$4_182_I_2_3 */
CREATE TRIGGER REPL$4_182_I_2_3 FOR "gen$tiposdireccion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,182,'I',NEW.ID_DIRECCION);END
END
^

/* Trigger: REPL$4_182_U_2_3 */
CREATE TRIGGER REPL$4_182_U_2_3 FOR "gen$tiposdireccion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,182,'U',OLD.ID_DIRECCION,NEW.ID_DIRECCION);END
END
^

/* Trigger: REPL$4_183_D_2_3 */
CREATE TRIGGER REPL$4_183_D_2_3 FOR "gen$tiposestadocivil" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,183,'D',OLD.ID_TIPO_ESTADO_CIVIL);END
END
^

/* Trigger: REPL$4_183_I_2_3 */
CREATE TRIGGER REPL$4_183_I_2_3 FOR "gen$tiposestadocivil" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,183,'I',NEW.ID_TIPO_ESTADO_CIVIL);END
END
^

/* Trigger: REPL$4_183_U_2_3 */
CREATE TRIGGER REPL$4_183_U_2_3 FOR "gen$tiposestadocivil" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,183,'U',OLD.ID_TIPO_ESTADO_CIVIL,NEW.ID_TIPO_ESTADO_CIVIL);END
END
^

/* Trigger: REPL$4_184_D_2_3 */
CREATE TRIGGER REPL$4_184_D_2_3 FOR "gen$tiposestadopersona" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,184,'D',OLD.ID_ESTADO);END
END
^

/* Trigger: REPL$4_184_I_2_3 */
CREATE TRIGGER REPL$4_184_I_2_3 FOR "gen$tiposestadopersona" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,184,'I',NEW.ID_ESTADO);END
END
^

/* Trigger: REPL$4_184_U_2_3 */
CREATE TRIGGER REPL$4_184_U_2_3 FOR "gen$tiposestadopersona" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,184,'U',OLD.ID_ESTADO,NEW.ID_ESTADO);END
END
^

/* Trigger: REPL$4_185_D_2_3 */
CREATE TRIGGER REPL$4_185_D_2_3 FOR "gen$tiposidentificacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,185,'D',OLD.ID_IDENTIFICACION);END
END
^

/* Trigger: REPL$4_185_I_2_3 */
CREATE TRIGGER REPL$4_185_I_2_3 FOR "gen$tiposidentificacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,185,'I',NEW.ID_IDENTIFICACION);END
END
^

/* Trigger: REPL$4_185_U_2_3 */
CREATE TRIGGER REPL$4_185_U_2_3 FOR "gen$tiposidentificacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,185,'U',OLD.ID_IDENTIFICACION,NEW.ID_IDENTIFICACION);END
END
^

/* Trigger: REPL$4_187_D_2_3 */
CREATE TRIGGER REPL$4_187_D_2_3 FOR "gen$tiposparentesco" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,187,'D',OLD.ID_PARENTESCO);END
END
^

/* Trigger: REPL$4_187_I_2_3 */
CREATE TRIGGER REPL$4_187_I_2_3 FOR "gen$tiposparentesco" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,187,'I',NEW.ID_PARENTESCO);END
END
^

/* Trigger: REPL$4_187_U_2_3 */
CREATE TRIGGER REPL$4_187_U_2_3 FOR "gen$tiposparentesco" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,187,'U',OLD.ID_PARENTESCO,NEW.ID_PARENTESCO);END
END
^

/* Trigger: REPL$4_188_D_2_3 */
CREATE TRIGGER REPL$4_188_D_2_3 FOR "gen$tipospersona" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,188,'D',OLD.ID_TIPO_PERSONA);END
END
^

/* Trigger: REPL$4_188_I_2_3 */
CREATE TRIGGER REPL$4_188_I_2_3 FOR "gen$tipospersona" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,188,'I',NEW.ID_TIPO_PERSONA);END
END
^

/* Trigger: REPL$4_188_U_2_3 */
CREATE TRIGGER REPL$4_188_U_2_3 FOR "gen$tipospersona" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,188,'U',OLD.ID_TIPO_PERSONA,NEW.ID_TIPO_PERSONA);END
END
^

/* Trigger: REPL$4_189_D_2_3 */
CREATE TRIGGER REPL$4_189_D_2_3 FOR "gen$tiposreferencia" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,189,'D',OLD.ID_REFERENCIA);END
END
^

/* Trigger: REPL$4_189_I_2_3 */
CREATE TRIGGER REPL$4_189_I_2_3 FOR "gen$tiposreferencia" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,189,'I',NEW.ID_REFERENCIA);END
END
^

/* Trigger: REPL$4_189_U_2_3 */
CREATE TRIGGER REPL$4_189_U_2_3 FOR "gen$tiposreferencia" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,189,'U',OLD.ID_REFERENCIA,NEW.ID_REFERENCIA);END
END
^

/* Trigger: REPL$4_190_D_2_3 */
CREATE TRIGGER REPL$4_190_D_2_3 FOR "gen$tiposrelacion" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,190,'D',OLD.ID_TIPO_RELACION);END
END
^

/* Trigger: REPL$4_190_I_2_3 */
CREATE TRIGGER REPL$4_190_I_2_3 FOR "gen$tiposrelacion" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,190,'I',NEW.ID_TIPO_RELACION);END
END
^

/* Trigger: REPL$4_190_U_2_3 */
CREATE TRIGGER REPL$4_190_U_2_3 FOR "gen$tiposrelacion" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,190,'U',OLD.ID_TIPO_RELACION,NEW.ID_TIPO_RELACION);END
END
^

/* Trigger: REPL$4_191_D_2_3 */
CREATE TRIGGER REPL$4_191_D_2_3 FOR "gen$valorretefuente" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,191,'D',OLD.ID_RETEFUENTE);END
END
^

/* Trigger: REPL$4_191_I_2_3 */
CREATE TRIGGER REPL$4_191_I_2_3 FOR "gen$valorretefuente" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,191,'I',NEW.ID_RETEFUENTE);END
END
^

/* Trigger: REPL$4_191_U_2_3 */
CREATE TRIGGER REPL$4_191_U_2_3 FOR "gen$valorretefuente" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,191,'U',OLD.ID_RETEFUENTE,NEW.ID_RETEFUENTE);END
END
^

/* Trigger: REPL$4_192_D_2_3 */
CREATE TRIGGER REPL$4_192_D_2_3 FOR "tes$cheques" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,192,'D',OLD.FECHA_RECIBIDO||''||OLD.ID_BANCO||''||OLD.NUMERO_CHEQUE);END
END
^

/* Trigger: REPL$4_192_I_2_3 */
CREATE TRIGGER REPL$4_192_I_2_3 FOR "tes$cheques" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,192,'I',NEW.FECHA_RECIBIDO||''||NEW.ID_BANCO||''||NEW.NUMERO_CHEQUE);END
END
^

/* Trigger: REPL$4_192_U_2_3 */
CREATE TRIGGER REPL$4_192_U_2_3 FOR "tes$cheques" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,192,'U',OLD.FECHA_RECIBIDO||''||OLD.ID_BANCO||''||OLD.NUMERO_CHEQUE,NEW.FECHA_RECIBIDO||''||NEW.ID_BANCO||''||NEW.NUMERO_CHEQUE);END
END
^

/* Trigger: REPL$4_193_D_2_3 */
CREATE TRIGGER REPL$4_193_D_2_3 FOR "caj$arqueos" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,193,'D',OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_DENOMINACION);END
END
^

/* Trigger: REPL$4_193_I_2_3 */
CREATE TRIGGER REPL$4_193_I_2_3 FOR "caj$arqueos" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,193,'I',NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_DENOMINACION);END
END
^

/* Trigger: REPL$4_193_U_2_3 */
CREATE TRIGGER REPL$4_193_U_2_3 FOR "caj$arqueos" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,193,'U',OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_DENOMINACION,NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_DENOMINACION);END
END
^

/* Trigger: REPL$4_194_D_2_3 */
CREATE TRIGGER REPL$4_194_D_2_3 FOR "CAJ$CAJAShistoria" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,194,'D',OLD.FECHA_RECIBO||''||OLD.ID_CAJA||''||OLD.ID_USUARIO_ENTREGA||''||OLD.ID_USUARIO_RECIBE);END
END
^

/* Trigger: REPL$4_194_I_2_3 */
CREATE TRIGGER REPL$4_194_I_2_3 FOR "CAJ$CAJAShistoria" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,194,'I',NEW.FECHA_RECIBO||''||NEW.ID_CAJA||''||NEW.ID_USUARIO_ENTREGA||''||NEW.ID_USUARIO_RECIBE);END
END
^

/* Trigger: REPL$4_194_U_2_3 */
CREATE TRIGGER REPL$4_194_U_2_3 FOR "CAJ$CAJAShistoria" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,194,'U',OLD.FECHA_RECIBO||''||OLD.ID_CAJA||''||OLD.ID_USUARIO_ENTREGA||''||OLD.ID_USUARIO_RECIBE,NEW.FECHA_RECIBO||''||NEW.ID_CAJA||''||NEW.ID_USUARIO_ENTREGA||''||NEW.ID_USUARIO_RECIBE);END
END
^

/* Trigger: REPL$4_62_D_2_3 */
CREATE TRIGGER REPL$4_62_D_2_3 FOR CAJ$CAJAS INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,62,'D',OLD.ID_CAJA);END
END
^

/* Trigger: REPL$4_62_I_2_3 */
CREATE TRIGGER REPL$4_62_I_2_3 FOR CAJ$CAJAS INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,62,'I',NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_62_U_2_3 */
CREATE TRIGGER REPL$4_62_U_2_3 FOR CAJ$CAJAS INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,62,'U',OLD.ID_CAJA,NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_64_D_2_3 */
CREATE TRIGGER REPL$4_64_D_2_3 FOR "caj$cheques" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,64,'D',OLD.FECHA||''||OLD.ID_BANCO||''||OLD.NUMERO_CHEQUE);END
END
^

/* Trigger: REPL$4_64_I_2_3 */
CREATE TRIGGER REPL$4_64_I_2_3 FOR "caj$cheques" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,64,'I',NEW.FECHA||''||NEW.ID_BANCO||''||NEW.NUMERO_CHEQUE);END
END
^

/* Trigger: REPL$4_64_U_2_3 */
CREATE TRIGGER REPL$4_64_U_2_3 FOR "caj$cheques" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,64,'U',OLD.FECHA||''||OLD.ID_BANCO||''||OLD.NUMERO_CHEQUE,NEW.FECHA||''||NEW.ID_BANCO||''||NEW.NUMERO_CHEQUE);END
END
^

/* Trigger: REPL$4_65_D_2_3 */
CREATE TRIGGER REPL$4_65_D_2_3 FOR "caj$cierres" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,65,'D',OLD.FECHA||''||OLD.ID_CAJA);END
END
^

/* Trigger: REPL$4_65_I_2_3 */
CREATE TRIGGER REPL$4_65_I_2_3 FOR "caj$cierres" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,65,'I',NEW.FECHA||''||NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_65_U_2_3 */
CREATE TRIGGER REPL$4_65_U_2_3 FOR "caj$cierres" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,65,'U',OLD.FECHA||''||OLD.ID_CAJA,NEW.FECHA||''||NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_66_D_2_3 */
CREATE TRIGGER REPL$4_66_D_2_3 FOR CAJ$CONADICIONAL INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,66,'D',OLD.CODIGO);END
END
^

/* Trigger: REPL$4_66_I_2_3 */
CREATE TRIGGER REPL$4_66_I_2_3 FOR CAJ$CONADICIONAL INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,66,'I',NEW.CODIGO);END
END
^

/* Trigger: REPL$4_66_U_2_3 */
CREATE TRIGGER REPL$4_66_U_2_3 FOR CAJ$CONADICIONAL INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,66,'U',OLD.CODIGO,NEW.CODIGO);END
END
^

/* Trigger: REPL$4_67_D_2_3 */
CREATE TRIGGER REPL$4_67_D_2_3 FOR "caj$devolucionarqueo" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,67,'D',OLD.DIGITO_CUENTA||''||OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_TIPO_CAPTACION||''||OLD.ID_TIPO_MOVIMIENTO||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_67_I_2_3 */
CREATE TRIGGER REPL$4_67_I_2_3 FOR "caj$devolucionarqueo" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,67,'I',NEW.DIGITO_CUENTA||''||NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_TIPO_CAPTACION||''||NEW.ID_TIPO_MOVIMIENTO||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_67_U_2_3 */
CREATE TRIGGER REPL$4_67_U_2_3 FOR "caj$devolucionarqueo" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,67,'U',OLD.DIGITO_CUENTA||''||OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_TIPO_CAPTACION||''||OLD.ID_TIPO_MOVIMIENTO||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_TIPO_CAPTACION||''||NEW.ID_TIPO_MOVIMIENTO||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_68_D_2_3 */
CREATE TRIGGER REPL$4_68_D_2_3 FOR "caj$devolucioncolarqueo" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,68,'D',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_68_I_2_3 */
CREATE TRIGGER REPL$4_68_I_2_3 FOR "caj$devolucioncolarqueo" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,68,'I',NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_68_U_2_3 */
CREATE TRIGGER REPL$4_68_U_2_3 FOR "caj$devolucioncolarqueo" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,68,'U',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_COLOCACION,NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_69_D_2_3 */
CREATE TRIGGER REPL$4_69_D_2_3 FOR "caj$devolucionrecaudosarqueo" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,69,'D',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA);END
END
^

/* Trigger: REPL$4_69_I_2_3 */
CREATE TRIGGER REPL$4_69_I_2_3 FOR "caj$devolucionrecaudosarqueo" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,69,'I',NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_69_U_2_3 */
CREATE TRIGGER REPL$4_69_U_2_3 FOR "caj$devolucionrecaudosarqueo" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,69,'U',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA,NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_70_D_2_3 */
CREATE TRIGGER REPL$4_70_D_2_3 FOR "caj$estados" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,70,'D',OLD.ID_ESTADO);END
END
^

/* Trigger: REPL$4_70_I_2_3 */
CREATE TRIGGER REPL$4_70_I_2_3 FOR "caj$estados" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,70,'I',NEW.ID_ESTADO);END
END
^

/* Trigger: REPL$4_70_U_2_3 */
CREATE TRIGGER REPL$4_70_U_2_3 FOR "caj$estados" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,70,'U',OLD.ID_ESTADO,NEW.ID_ESTADO);END
END
^

/* Trigger: REPL$4_71_D_2_3 */
CREATE TRIGGER REPL$4_71_D_2_3 FOR "caj$movimiento" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,71,'D',OLD.DIGITO_CUENTA||''||OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_TIPO_CAPTACION||''||OLD.ID_TIPO_MOVIMIENTO||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_71_I_2_3 */
CREATE TRIGGER REPL$4_71_I_2_3 FOR "caj$movimiento" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,71,'I',NEW.DIGITO_CUENTA||''||NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_TIPO_CAPTACION||''||NEW.ID_TIPO_MOVIMIENTO||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_71_U_2_3 */
CREATE TRIGGER REPL$4_71_U_2_3 FOR "caj$movimiento" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,71,'U',OLD.DIGITO_CUENTA||''||OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_TIPO_CAPTACION||''||OLD.ID_TIPO_MOVIMIENTO||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_TIPO_CAPTACION||''||NEW.ID_TIPO_MOVIMIENTO||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_72_D_2_3 */
CREATE TRIGGER REPL$4_72_D_2_3 FOR "caj$movimientoarqueo" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,72,'D',OLD.DIGITO_CUENTA||''||OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_72_I_2_3 */
CREATE TRIGGER REPL$4_72_I_2_3 FOR "caj$movimientoarqueo" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,72,'I',NEW.DIGITO_CUENTA||''||NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_72_U_2_3 */
CREATE TRIGGER REPL$4_72_U_2_3 FOR "caj$movimientoarqueo" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,72,'U',OLD.DIGITO_CUENTA||''||OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_73_D_2_3 */
CREATE TRIGGER REPL$4_73_D_2_3 FOR "caj$movimientocol" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,73,'D',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_73_I_2_3 */
CREATE TRIGGER REPL$4_73_I_2_3 FOR "caj$movimientocol" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,73,'I',NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_73_U_2_3 */
CREATE TRIGGER REPL$4_73_U_2_3 FOR "caj$movimientocol" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,73,'U',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_COLOCACION,NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_74_D_2_3 */
CREATE TRIGGER REPL$4_74_D_2_3 FOR "caj$movimientocolarqueo" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,74,'D',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_74_I_2_3 */
CREATE TRIGGER REPL$4_74_I_2_3 FOR "caj$movimientocolarqueo" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,74,'I',NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_74_U_2_3 */
CREATE TRIGGER REPL$4_74_U_2_3 FOR "caj$movimientocolarqueo" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,74,'U',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA||''||OLD.ID_COLOCACION,NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA||''||NEW.ID_COLOCACION);END
END
^

/* Trigger: REPL$4_75_D_2_3 */
CREATE TRIGGER REPL$4_75_D_2_3 FOR CAJ$ORIGEN INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,75,'D',OLD.ID_ORIGEN);END
END
^

/* Trigger: REPL$4_75_I_2_3 */
CREATE TRIGGER REPL$4_75_I_2_3 FOR CAJ$ORIGEN INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,75,'I',NEW.ID_ORIGEN);END
END
^

/* Trigger: REPL$4_75_U_2_3 */
CREATE TRIGGER REPL$4_75_U_2_3 FOR CAJ$ORIGEN INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,75,'U',OLD.ID_ORIGEN,NEW.ID_ORIGEN);END
END
^

/* Trigger: REPL$4_76_D_2_3 */
CREATE TRIGGER REPL$4_76_D_2_3 FOR "caj$recaudos" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,76,'D',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA);END
END
^

/* Trigger: REPL$4_76_I_2_3 */
CREATE TRIGGER REPL$4_76_I_2_3 FOR "caj$recaudos" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,76,'I',NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_76_U_2_3 */
CREATE TRIGGER REPL$4_76_U_2_3 FOR "caj$recaudos" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,76,'U',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA,NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_77_D_2_3 */
CREATE TRIGGER REPL$4_77_D_2_3 FOR "caj$recaudosarqueo" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,77,'D',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA);END
END
^

/* Trigger: REPL$4_77_I_2_3 */
CREATE TRIGGER REPL$4_77_I_2_3 FOR "caj$recaudosarqueo" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,77,'I',NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_77_U_2_3 */
CREATE TRIGGER REPL$4_77_U_2_3 FOR "caj$recaudosarqueo" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,77,'U',OLD.DOCUMENTO||''||OLD.FECHA_MOV||''||OLD.ID_AGENCIA||''||OLD.ID_CAJA,NEW.DOCUMENTO||''||NEW.FECHA_MOV||''||NEW.ID_AGENCIA||''||NEW.ID_CAJA);END
END
^

/* Trigger: REPL$4_78_D_2_3 */
CREATE TRIGGER REPL$4_78_D_2_3 FOR "caj$tiposmovimiento" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,78,'D',OLD.ID_TIPO_MOVIMIENTO);END
END
^

/* Trigger: REPL$4_78_I_2_3 */
CREATE TRIGGER REPL$4_78_I_2_3 FOR "caj$tiposmovimiento" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,78,'I',NEW.ID_TIPO_MOVIMIENTO);END
END
^

/* Trigger: REPL$4_78_U_2_3 */
CREATE TRIGGER REPL$4_78_U_2_3 FOR "caj$tiposmovimiento" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,78,'U',OLD.ID_TIPO_MOVIMIENTO,NEW.ID_TIPO_MOVIMIENTO);END
END
^

/* Trigger: REPL$4_80_D_2_3 */
CREATE TRIGGER REPL$4_80_D_2_3 FOR "cap$canje" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,80,'D',OLD.DIGITO_CUENTA||''||OLD.FECHA_CONSIGNADO||''||OLD.ID_AGENCIA||''||OLD.ID_BANCO||''||OLD.ID_CAJA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CHEQUE||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_80_I_2_3 */
CREATE TRIGGER REPL$4_80_I_2_3 FOR "cap$canje" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,80,'I',NEW.DIGITO_CUENTA||''||NEW.FECHA_CONSIGNADO||''||NEW.ID_AGENCIA||''||NEW.ID_BANCO||''||NEW.ID_CAJA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CHEQUE||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_80_U_2_3 */
CREATE TRIGGER REPL$4_80_U_2_3 FOR "cap$canje" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,80,'U',OLD.DIGITO_CUENTA||''||OLD.FECHA_CONSIGNADO||''||OLD.ID_AGENCIA||''||OLD.ID_BANCO||''||OLD.ID_CAJA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CHEQUE||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.FECHA_CONSIGNADO||''||NEW.ID_AGENCIA||''||NEW.ID_BANCO||''||NEW.ID_CAJA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CHEQUE||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_83_D_2_3 */
CREATE TRIGGER REPL$4_83_D_2_3 FOR CAP$CODIGOSCAUSACION INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,83,'D',OLD.CODIGO_PUC);END
END
^

/* Trigger: REPL$4_83_I_2_3 */
CREATE TRIGGER REPL$4_83_I_2_3 FOR CAP$CODIGOSCAUSACION INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,83,'I',NEW.CODIGO_PUC);END
END
^

/* Trigger: REPL$4_83_U_2_3 */
CREATE TRIGGER REPL$4_83_U_2_3 FOR CAP$CODIGOSCAUSACION INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,83,'U',OLD.CODIGO_PUC,NEW.CODIGO_PUC);END
END
^

/* Trigger: REPL$4_84_D_2_3 */
CREATE TRIGGER REPL$4_84_D_2_3 FOR CAP$CONTABLE INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,84,'D',OLD.ID_CAPTACION||''||OLD.ID_CONTABLE);END
END
^

/* Trigger: REPL$4_84_I_2_3 */
CREATE TRIGGER REPL$4_84_I_2_3 FOR CAP$CONTABLE INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,84,'I',NEW.ID_CAPTACION||''||NEW.ID_CONTABLE);END
END
^

/* Trigger: REPL$4_84_U_2_3 */
CREATE TRIGGER REPL$4_84_U_2_3 FOR CAP$CONTABLE INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,84,'U',OLD.ID_CAPTACION||''||OLD.ID_CONTABLE,NEW.ID_CAPTACION||''||NEW.ID_CONTABLE);END
END
^

/* Trigger: REPL$4_85_D_2_3 */
CREATE TRIGGER REPL$4_85_D_2_3 FOR "cap$diasliquidados" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,85,'D',OLD.FECHA_LIQUIDADA||''||OLD.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_85_I_2_3 */
CREATE TRIGGER REPL$4_85_I_2_3 FOR "cap$diasliquidados" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,85,'I',NEW.FECHA_LIQUIDADA||''||NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_85_U_2_3 */
CREATE TRIGGER REPL$4_85_U_2_3 FOR "cap$diasliquidados" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,85,'U',OLD.FECHA_LIQUIDADA||''||OLD.ID_TIPO_CAPTACION,NEW.FECHA_LIQUIDADA||''||NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_86_D_2_3 */
CREATE TRIGGER REPL$4_86_D_2_3 FOR "cap$diasprorrogados" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,86,'D',OLD.FECHA_PRORROGA||''||OLD.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_86_I_2_3 */
CREATE TRIGGER REPL$4_86_I_2_3 FOR "cap$diasprorrogados" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,86,'I',NEW.FECHA_PRORROGA||''||NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_86_U_2_3 */
CREATE TRIGGER REPL$4_86_U_2_3 FOR "cap$diasprorrogados" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,86,'U',OLD.FECHA_PRORROGA||''||OLD.ID_TIPO_CAPTACION,NEW.FECHA_PRORROGA||''||NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_87_D_2_3 */
CREATE TRIGGER REPL$4_87_D_2_3 FOR "cap$embargo" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,87,'D',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_87_I_2_3 */
CREATE TRIGGER REPL$4_87_I_2_3 FOR "cap$embargo" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,87,'I',NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_87_U_2_3 */
CREATE TRIGGER REPL$4_87_U_2_3 FOR "cap$embargo" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,87,'U',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_88_D_2_3 */
CREATE TRIGGER REPL$4_88_D_2_3 FOR "cap$extracto" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,88,'D',OLD.DIGITO_CUENTA||''||OLD.DOCUMENTO_MOVIMIENTO||''||OLD.FECHA_MOVIMIENTO||''||OLD.HORA_MOVIMIENTO||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_88_I_2_3 */
CREATE TRIGGER REPL$4_88_I_2_3 FOR "cap$extracto" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,88,'I',NEW.DIGITO_CUENTA||''||NEW.DOCUMENTO_MOVIMIENTO||''||NEW.FECHA_MOVIMIENTO||''||NEW.HORA_MOVIMIENTO||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_88_U_2_3 */
CREATE TRIGGER REPL$4_88_U_2_3 FOR "cap$extracto" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,88,'U',OLD.DIGITO_CUENTA||''||OLD.DOCUMENTO_MOVIMIENTO||''||OLD.FECHA_MOVIMIENTO||''||OLD.HORA_MOVIMIENTO||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.DOCUMENTO_MOVIMIENTO||''||NEW.FECHA_MOVIMIENTO||''||NEW.HORA_MOVIMIENTO||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_89_D_2_3 */
CREATE TRIGGER REPL$4_89_D_2_3 FOR "cap$fechaspagasinteres" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,89,'D',OLD.FECHA_PAGA||''||OLD.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_89_I_2_3 */
CREATE TRIGGER REPL$4_89_I_2_3 FOR "cap$fechaspagasinteres" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,89,'I',NEW.FECHA_PAGA||''||NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_89_U_2_3 */
CREATE TRIGGER REPL$4_89_U_2_3 FOR "cap$fechaspagasinteres" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,89,'U',OLD.FECHA_PAGA||''||OLD.ID_TIPO_CAPTACION,NEW.FECHA_PAGA||''||NEW.ID_TIPO_CAPTACION);END
END
^

/* Trigger: REPL$4_90_D_2_3 */
CREATE TRIGGER REPL$4_90_D_2_3 FOR "cap$historiaprorrogas" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,90,'D',OLD.DIGITO_CUENTA||''||OLD.FECHA_FINAL_ANT||''||OLD.FECHA_INICIAL_ANT||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_90_I_2_3 */
CREATE TRIGGER REPL$4_90_I_2_3 FOR "cap$historiaprorrogas" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,90,'I',NEW.DIGITO_CUENTA||''||NEW.FECHA_FINAL_ANT||''||NEW.FECHA_INICIAL_ANT||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_90_U_2_3 */
CREATE TRIGGER REPL$4_90_U_2_3 FOR "cap$historiaprorrogas" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,90,'U',OLD.DIGITO_CUENTA||''||OLD.FECHA_FINAL_ANT||''||OLD.FECHA_INICIAL_ANT||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.FECHA_FINAL_ANT||''||NEW.FECHA_INICIAL_ANT||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_91_D_2_3 */
CREATE TRIGGER REPL$4_91_D_2_3 FOR "cap$libretas" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,91,'D',OLD.DIGITO_CUENTA||''||OLD.FECHA_LIBRETA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_91_I_2_3 */
CREATE TRIGGER REPL$4_91_I_2_3 FOR "cap$libretas" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,91,'I',NEW.DIGITO_CUENTA||''||NEW.FECHA_LIBRETA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_91_U_2_3 */
CREATE TRIGGER REPL$4_91_U_2_3 FOR "cap$libretas" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,91,'U',OLD.DIGITO_CUENTA||''||OLD.FECHA_LIBRETA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.FECHA_LIBRETA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_92_D_2_3 */
CREATE TRIGGER REPL$4_92_D_2_3 FOR "cap$libretashistoria" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,92,'D',OLD.DIGITO_CUENTA||''||OLD.FECHA_CAMBIO||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_92_I_2_3 */
CREATE TRIGGER REPL$4_92_I_2_3 FOR "cap$libretashistoria" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,92,'I',NEW.DIGITO_CUENTA||''||NEW.FECHA_CAMBIO||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_92_U_2_3 */
CREATE TRIGGER REPL$4_92_U_2_3 FOR "cap$libretashistoria" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,92,'U',OLD.DIGITO_CUENTA||''||OLD.FECHA_CAMBIO||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.FECHA_CAMBIO||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_93_D_2_3 */
CREATE TRIGGER REPL$4_93_D_2_3 FOR "cap$libretasusada" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,93,'D',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA||''||OLD.NUMERO_TALON);END
END
^

/* Trigger: REPL$4_93_I_2_3 */
CREATE TRIGGER REPL$4_93_I_2_3 FOR "cap$libretasusada" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,93,'I',NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA||''||NEW.NUMERO_TALON);END
END
^

/* Trigger: REPL$4_93_U_2_3 */
CREATE TRIGGER REPL$4_93_U_2_3 FOR "cap$libretasusada" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,93,'U',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA||''||OLD.NUMERO_TALON,NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA||''||NEW.NUMERO_TALON);END
END
^

/* Trigger: REPL$4_94_D_2_3 */
CREATE TRIGGER REPL$4_94_D_2_3 FOR "cap$maestro" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,94,'D',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_94_I_2_3 */
CREATE TRIGGER REPL$4_94_I_2_3 FOR "cap$maestro" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,94,'I',NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_94_U_2_3 */
CREATE TRIGGER REPL$4_94_U_2_3 FOR "cap$maestro" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,94,'U',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_98_D_2_3 */
CREATE TRIGGER REPL$4_98_D_2_3 FOR "cap$maestrosaldoinicial" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,98,'D',OLD.ANO||''||OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_98_I_2_3 */
CREATE TRIGGER REPL$4_98_I_2_3 FOR "cap$maestrosaldoinicial" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,98,'I',NEW.ANO||''||NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_98_U_2_3 */
CREATE TRIGGER REPL$4_98_U_2_3 FOR "cap$maestrosaldoinicial" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,98,'U',OLD.ANO||''||OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.NUMERO_CUENTA,NEW.ANO||''||NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_99_D_2_3 */
CREATE TRIGGER REPL$4_99_D_2_3 FOR "cap$maestrosaldosmes" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,99,'D',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.MES||''||OLD.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_99_I_2_3 */
CREATE TRIGGER REPL$4_99_I_2_3 FOR "cap$maestrosaldosmes" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,99,'I',NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.MES||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL$4_99_U_2_3 */
CREATE TRIGGER REPL$4_99_U_2_3 FOR "cap$maestrosaldosmes" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,99,'U',OLD.DIGITO_CUENTA||''||OLD.ID_AGENCIA||''||OLD.ID_TIPO_CAPTACION||''||OLD.MES||''||OLD.NUMERO_CUENTA,NEW.DIGITO_CUENTA||''||NEW.ID_AGENCIA||''||NEW.ID_TIPO_CAPTACION||''||NEW.MES||''||NEW.NUMERO_CUENTA);END
END
^

/* Trigger: REPL_GEN_SEQNO */
CREATE TRIGGER REPL_GEN_SEQNO FOR REPL_LOG INACTIVE
BEFORE INSERT POSITION 0
AS BEGIN NEW.SEQNO = GEN_ID(REPL_GENERATOR,1); END
^

/* Trigger: "col$tasafijas" */
CREATE TRIGGER "col$tasafijas" FOR "col$tasafijas" ACTIVE
BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_TASA_FIJA IS NULL) THEN
    NEW.ID_TASA_FIJA = GEN_ID("GEN_""col$tasafijas""_ID",1);
END
^

/* Trigger: "GEN$BANCOSCONNAL_AD" */
CREATE TRIGGER "GEN$BANCOSCONNAL_AD" FOR GEN$BANCOSCONNAL INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,170,'D',OLD.ID_BANCO);END
END
^

/* Trigger: "GEN$BANCOSCONNAL_AI" */
CREATE TRIGGER "GEN$BANCOSCONNAL_AI" FOR GEN$BANCOSCONNAL INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,170,'I',NEW.ID_BANCO);END
END
^

/* Trigger: "GEN$BANCOSCONNAL_AU" */
CREATE TRIGGER "GEN$BANCOSCONNAL_AU" FOR GEN$BANCOSCONNAL INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,170,'U',OLD.ID_BANCO,NEW.ID_BANCO);END
END
^

/* Trigger: "gen$tiposinteres_AD" */
CREATE TRIGGER "gen$tiposinteres_AD" FOR "gen$tiposinteres" INACTIVE
AFTER DELETE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY)
  VALUES (2,3,4,186,'D',OLD.ID_INTERES);END
END
^

/* Trigger: "gen$tiposinteres_AI" */
CREATE TRIGGER "gen$tiposinteres_AI" FOR "gen$tiposinteres" INACTIVE
AFTER INSERT POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,NEWKEY)
  VALUES (2,3,4,186,'I',NEW.ID_INTERES);END
END
^

/* Trigger: "gen$tiposinteres_AU" */
CREATE TRIGGER "gen$tiposinteres_AU" FOR "gen$tiposinteres" INACTIVE
AFTER UPDATE POSITION 32760
AS
BEGIN
IF (USER <> 'REPL') THEN BEGIN
  INSERT INTO REPL_LOG(REPLNO,PUBDBNO,SUBDBNO,RELATIONNO,REPTYPE,OLDKEY,NEWKEY)
  VALUES (2,3,4,186,'U',OLD.ID_INTERES,NEW.ID_INTERES);END
END
^

SET TERM ; ^
CREATE ROLE ADMINISTRADOR;
CREATE ROLE ANALISTA;
CREATE ROLE AUXILIAR;
CREATE ROLE CAJAS;
CREATE ROLE CAPTACIONES;
CREATE ROLE CARTERA;
CREATE ROLE CONTABILIDAD_A;
CREATE ROLE CONTABILIDAD_C;
CREATE ROLE CREDITOS;
CREATE ROLE DETALLE;
CREATE ROLE DETALLES;
CREATE ROLE FUNDACION;
CREATE ROLE GERENCIA;
CREATE ROLE REPLICA;
CREATE ROLE REVISOR;
CREATE ROLE SIPLA;
CREATE ROLE TESORERIA;
CREATE ROLE VISADOR;


/* Privileges */

GRANT CAPTACIONES TO AALCINA;
GRANT CAJAS TO ABARBOSA;
GRANT CAPTACIONES TO ABARBOSA;
GRANT GERENCIA TO ABARBOSA;
GRANT CAPTACIONES TO ABUENO;
GRANT GERENCIA TO ABUENO;
GRANT SIPLA TO ABUENO;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON IBE$PARAMS_HISTORY TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON IBE$REPORTS TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON MANUAL_LOG TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON RDB$CHARACTER_SETS TO ADMDOR;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO ADMDOR;
GRANT SELECT ON RDB$COLLATIONS TO ADMDOR;
GRANT SELECT ON RDB$DATABASE TO ADMDOR;
GRANT SELECT ON RDB$DEPENDENCIES TO ADMDOR;
GRANT SELECT ON RDB$EXCEPTIONS TO ADMDOR;
GRANT SELECT ON RDB$FIELDS TO ADMDOR;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO ADMDOR;
GRANT SELECT ON RDB$FILES TO ADMDOR;
GRANT SELECT ON RDB$FILTERS TO ADMDOR;
GRANT SELECT ON RDB$FORMATS TO ADMDOR;
GRANT SELECT ON RDB$FUNCTIONS TO ADMDOR;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO ADMDOR;
GRANT SELECT ON RDB$GENERATORS TO ADMDOR;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO ADMDOR;
GRANT SELECT ON RDB$INDICES TO ADMDOR;
GRANT SELECT ON RDB$LOG_FILES TO ADMDOR;
GRANT SELECT ON RDB$PAGES TO ADMDOR;
GRANT SELECT ON RDB$PROCEDURES TO ADMDOR;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO ADMDOR;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO ADMDOR;
GRANT SELECT ON RDB$RELATIONS TO ADMDOR;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO ADMDOR;
GRANT SELECT ON RDB$RELATION_FIELDS TO ADMDOR;
GRANT SELECT ON RDB$ROLES TO ADMDOR;
GRANT SELECT ON RDB$SECURITY_CLASSES TO ADMDOR;
GRANT SELECT ON RDB$TRANSACTIONS TO ADMDOR;
GRANT SELECT ON RDB$TRIGGERS TO ADMDOR;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO ADMDOR;
GRANT SELECT ON RDB$TYPES TO ADMDOR;
GRANT SELECT ON RDB$USER_PRIVILEGES TO ADMDOR;
GRANT SELECT ON RDB$VIEW_RELATIONS TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON REPL_LOG TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON REPL_SEPARATOR TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$arqueos" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$CAJAS TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CAJ$CAJAShistoria" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$cheques" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$cierres" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$CONADICIONAL TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucionarqueo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucioncolarqueo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucionrecaudosarqueo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$estados" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimiento" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientoarqueo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientocol" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientocolarqueo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$ORIGEN TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$recaudos" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$recaudosarqueo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$tiposmovimiento" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$tmpcheques" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$canje" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON "cap$causacioncdattmp" TO ADMDOR;
GRANT SELECT ON CAP$CODIGOSCAUSACION TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAP$CONTABLE TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$diasliquidados" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$diasprorrogados" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$embargo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$extracto" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$fechaspagasinteres" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$historiaprorrogas" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretas" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretashistoria" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretasusada" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestro" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestroautorizado" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrobeneficiario" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldoinicial" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldosmes" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrotitular" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON "cap$obsestado" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$rangos" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$revalorizacion" TO ADMDOR;
GRANT SELECT ON "cap$revalorizaciontmp" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tablaliquidacion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tipocaptacion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposestado" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposforma" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposmovimiento" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposplancontractual" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tipostitulares" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON "col$adjetivos" TO ADMDOR;
GRANT SELECT ON "col$barridoCartera" TO ADMDOR;
GRANT SELECT ON "col$barridoahorroscartera" TO ADMDOR;
GRANT SELECT ON "col$carteraf" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$categoria" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causaciones" TO ADMDOR;
GRANT SELECT ON "col$causacionescontrol" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causacionestmp" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$clasificacion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON COL$CODIGOSPUC TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON COL$CODIGOSPUCBASICOS TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colgarantias" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colgarantiasreal" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colocacion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$concol" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$controlcobro" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$costas" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$descuentos" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$enteaprobador" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$estado" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extracto" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON "col$extractobarridotmp" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extractodet" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$garantia" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON "col$informemora" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$inversion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$lineas" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON "col$novedades" TO ADMDOR;
GRANT SELECT ON "col$porccausacion" TO ADMDOR;
GRANT SELECT ON "col$prueba" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$respaldo" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tablaliquidacion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tablaliquidaciontmp" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasadtf" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasafijas" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON "col$tasasvariables" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tiposcuota" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$AUXILIAR TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$captacion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$centrocosto" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$colocacion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$colocacion1" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$COMPROBANTE TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$comprobantecsc" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$ERRORCIERRECOMP TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON "con$fechasplanillas" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$informes" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT ON CON$PLANILLARESUMEN TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$PUC TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CON$PUCcon" TO ADMDOR;
GRANT SELECT ON "CON$PUCinforme" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$RETENCION TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$SALDOSCUENTA TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$TIPOCOMPROBANTE TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "errorestabla" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$ayudas" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$consolayudas" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$diascerrados" TO ADMDOR;
GRANT SELECT ON "fun$movimiento" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$agencia" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$bancos" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivos" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivostmp" TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$denominaciones" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$direccion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$empleado" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$minimos" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$observaciones" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$persona" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$referencias" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposciiu" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposclaseciiu" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposdireccion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposestadocivil" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposestadopersona" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposparentesco" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tipospersona" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposreferencia" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposrelacion" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$valorretefuente" TO ADMDOR WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "tes$cheques" TO ADMDOR WITH GRANT OPTION;
GRANT EXECUTE ON PROCEDURE P_CAP_0000 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0003 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0004 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0005 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0006 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0007 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_COL_0002 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO ADMDOR;
GRANT EXECUTE ON PROCEDURE "SP_GEN_""col$tasafijas""_ID" TO ADMDOR;
GRANT EXECUTE ON PROCEDURE SUMATORIA_CAPTACIONES TO ADMDOR;
GRANT ADMINISTRADOR TO ADMDOR;
GRANT ANALISTA TO ADMDOR;
GRANT AUXILIAR TO ADMDOR;
GRANT CAJAS TO ADMDOR;
GRANT CAPTACIONES TO ADMDOR;
GRANT CARTERA TO ADMDOR;
GRANT CONTABILIDAD_A TO ADMDOR;
GRANT CONTABILIDAD_C TO ADMDOR;
GRANT CREDITOS TO ADMDOR;
GRANT DETALLE TO ADMDOR;
GRANT DETALLES TO ADMDOR;
GRANT FUNDACION TO ADMDOR;
GRANT GERENCIA TO ADMDOR;
GRANT REPLICA TO ADMDOR;
GRANT REVISOR TO ADMDOR;
GRANT SIPLA TO ADMDOR;
GRANT TESORERIA TO ADMDOR;
GRANT VISADOR TO ADMDOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON IBE$PARAMS_HISTORY TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON IBE$REPORTS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON MANUAL_LOG TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$CHARACTER_SETS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$CHECK_CONSTRAINTS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$COLLATIONS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$DATABASE TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$DEPENDENCIES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$EXCEPTIONS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$FIELDS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$FIELD_DIMENSIONS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$FILES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$FILTERS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$FORMATS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$FUNCTIONS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$FUNCTION_ARGUMENTS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$GENERATORS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$INDEX_SEGMENTS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$INDICES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$LOG_FILES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$PAGES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$PROCEDURES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$PROCEDURE_PARAMETERS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$REF_CONSTRAINTS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$RELATIONS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$RELATION_CONSTRAINTS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$RELATION_FIELDS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$ROLES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$SECURITY_CLASSES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$TRANSACTIONS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$TRIGGERS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$TRIGGER_MESSAGES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$TYPES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$USER_PRIVILEGES TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$VIEW_RELATIONS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON REPL_LOG TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON REPL_SEPARATOR TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$arqueos" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$CAJAS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CAJ$CAJAShistoria" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$cheques" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$cierres" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$CONADICIONAL TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucionarqueo" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucioncolarqueo" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucionrecaudosarqueo" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$estados" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimiento" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientoarqueo" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientocol" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientocolarqueo" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$ORIGEN TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$recaudos" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$recaudosarqueo" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$tiposmovimiento" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$tmpcheques" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$canje" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdat" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdattmp" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAP$CODIGOSCAUSACION TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAP$CONTABLE TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$diasliquidados" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$diasprorrogados" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$embargo" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$extracto" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$fechaspagasinteres" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$historiaprorrogas" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretas" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretashistoria" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretasusada" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestro" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestroautorizado" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrobeneficiario" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldo" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldoinicial" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldosmes" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrotitular" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$obsestado" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$rangos" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$revalorizacion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$revalorizaciontmp" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tablaliquidacion" TO ADMINISTRADOR;
GRANT SELECT ON "cap$tablaliquidacioncon" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tipocaptacion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposestado" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposforma" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposmovimiento" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposplancontractual" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tipostitulares" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$adjetivos" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$barridoCartera" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$barridoahorroscartera" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$carteraf" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$categoria" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causaciones" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causacionescontrol" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causacionestmp" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$clasificacion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON COL$CODIGOSPUC TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON COL$CODIGOSPUCBASICOS TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colgarantias" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colgarantiasreal" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colocacion" TO ADMINISTRADOR;
GRANT SELECT ON "col$colocacionabogado" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$concol" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$controlcobro" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$costas" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$descuentos" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$enteaprobador" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$estado" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extracto" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extractobarridotmp" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extractodet" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$garantia" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$informemora" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$inversion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$lineadescuento" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$lineas" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$novedades" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$porccausacion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$prueba" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$respaldo" TO ADMINISTRADOR;
GRANT SELECT ON "col$solicitud" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tablaliquidacion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tablaliquidaciontmp" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasadtf" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasafijas" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasasvariables" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tiposcuota" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$AUXILIAR TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$captacion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$centrocosto" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$colocacion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$colocacion1" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$COMPROBANTE TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$comprobantecsc" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$ERRORCIERRECOMP TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$fechasplanillas" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$informes" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$PLANILLARESUMEN TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$PUC TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CON$PUCcon" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CON$PUCinforme" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$RETENCION TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$SALDOSCUENTA TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$TIPOCOMPROBANTE TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "errorestabla" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$ayudas" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$consolayudas" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$juveniles" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$movimiento" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$agencia" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$bancos" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$cedulasvip" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivos" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivostmp" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$denominaciones" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$detalles" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$direccion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$empleado" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$minimos" TO ADMINISTRADOR;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$permisos" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$persona" TO ADMINISTRADOR;
GRANT SELECT ON "gen$plantillaobs" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$referencias" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposciiu" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposclaseciiu" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposdireccion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposestadocivil" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposestadopersona" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposidentificacion" TO ADMINISTRADOR;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposparentesco" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tipospersona" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposreferencia" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposrelacion" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$valorretefuente" TO ADMINISTRADOR;
GRANT SELECT ON "sipla$sdn" TO ADMINISTRADOR;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "tes$cheques" TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE ACTUALIZAR TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE BUSCAR_APORTES TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA_N1 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE CUENTAS_DIAN TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE DIAN_CUENTASABIERTAS TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE DIAN_NOTASCREDITO TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0000 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0001_L TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0003 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0004 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0005 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0006 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0007 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0007_L TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0015 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0017 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0018 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_COL_0002 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_COL_003 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_COL_004 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SALDO_MOVICOL TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SALDO_MOVIMIENTO TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE "SP_GEN_""col$tasafijas""_ID" TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SP_SALDOS_CUENTAS_NOMBRES TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE SUMATORIA_CAPTACIONES TO ADMINISTRADOR;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO ADMINISTRADOR;
GRANT CAJAS TO AGALEANO;
GRANT SELECT ON IBE$PARAMS_HISTORY TO ANALISTA;
GRANT SELECT ON IBE$REPORTS TO ANALISTA;
GRANT SELECT ON RDB$CHARACTER_SETS TO ANALISTA;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO ANALISTA;
GRANT SELECT ON RDB$COLLATIONS TO ANALISTA;
GRANT SELECT ON RDB$DATABASE TO ANALISTA;
GRANT SELECT ON RDB$DEPENDENCIES TO ANALISTA;
GRANT SELECT ON RDB$EXCEPTIONS TO ANALISTA;
GRANT SELECT ON RDB$FIELDS TO ANALISTA;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO ANALISTA;
GRANT SELECT ON RDB$FILES TO ANALISTA;
GRANT SELECT ON RDB$FILTERS TO ANALISTA;
GRANT SELECT ON RDB$FORMATS TO ANALISTA;
GRANT SELECT ON RDB$FUNCTIONS TO ANALISTA;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO ANALISTA;
GRANT SELECT ON RDB$GENERATORS TO ANALISTA;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO ANALISTA;
GRANT SELECT ON RDB$INDICES TO ANALISTA;
GRANT SELECT ON RDB$LOG_FILES TO ANALISTA;
GRANT SELECT ON RDB$PAGES TO ANALISTA;
GRANT SELECT ON RDB$PROCEDURES TO ANALISTA;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO ANALISTA;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO ANALISTA;
GRANT SELECT ON RDB$RELATIONS TO ANALISTA;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO ANALISTA;
GRANT SELECT ON RDB$RELATION_FIELDS TO ANALISTA;
GRANT SELECT ON RDB$ROLES TO ANALISTA;
GRANT SELECT ON RDB$SECURITY_CLASSES TO ANALISTA;
GRANT SELECT ON RDB$TRANSACTIONS TO ANALISTA;
GRANT SELECT ON RDB$TRIGGERS TO ANALISTA;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO ANALISTA;
GRANT SELECT ON RDB$TYPES TO ANALISTA;
GRANT SELECT ON RDB$USER_PRIVILEGES TO ANALISTA;
GRANT SELECT ON RDB$VIEW_RELATIONS TO ANALISTA;
GRANT SELECT ON "caj$arqueos" TO ANALISTA;
GRANT SELECT ON CAJ$CAJAS TO ANALISTA;
GRANT SELECT ON "CAJ$CAJAShistoria" TO ANALISTA;
GRANT SELECT ON "caj$cheques" TO ANALISTA;
GRANT SELECT ON "caj$cierres" TO ANALISTA;
GRANT SELECT ON CAJ$CONADICIONAL TO ANALISTA;
GRANT SELECT ON "caj$devolucionarqueo" TO ANALISTA;
GRANT SELECT ON "caj$devolucioncolarqueo" TO ANALISTA;
GRANT SELECT ON "caj$devolucionrecaudosarqueo" TO ANALISTA;
GRANT SELECT ON "caj$estados" TO ANALISTA;
GRANT SELECT ON "caj$movimiento" TO ANALISTA;
GRANT SELECT ON "caj$movimientoarqueo" TO ANALISTA;
GRANT SELECT ON "caj$movimientocol" TO ANALISTA;
GRANT SELECT ON "caj$movimientocolarqueo" TO ANALISTA;
GRANT SELECT ON CAJ$ORIGEN TO ANALISTA;
GRANT SELECT ON "caj$recaudos" TO ANALISTA;
GRANT SELECT ON "caj$recaudosarqueo" TO ANALISTA;
GRANT SELECT ON "caj$tiposmovimiento" TO ANALISTA;
GRANT SELECT ON "caj$tmpcheques" TO ANALISTA;
GRANT SELECT ON "cap$canje" TO ANALISTA;
GRANT SELECT ON CAP$CONTABLE TO ANALISTA;
GRANT SELECT ON "cap$diasliquidados" TO ANALISTA;
GRANT SELECT ON "cap$diasprorrogados" TO ANALISTA;
GRANT SELECT ON "cap$embargo" TO ANALISTA;
GRANT SELECT ON "cap$extracto" TO ANALISTA;
GRANT SELECT ON "cap$fechaspagasinteres" TO ANALISTA;
GRANT SELECT ON "cap$historiaprorrogas" TO ANALISTA;
GRANT SELECT ON "cap$libretas" TO ANALISTA;
GRANT SELECT ON "cap$libretashistoria" TO ANALISTA;
GRANT SELECT ON "cap$libretasusada" TO ANALISTA;
GRANT SELECT ON "cap$maestro" TO ANALISTA;
GRANT SELECT ON "cap$maestroautorizado" TO ANALISTA;
GRANT SELECT ON "cap$maestrobeneficiario" TO ANALISTA;
GRANT SELECT ON "cap$maestrosaldo" TO ANALISTA;
GRANT SELECT ON "cap$maestrosaldoinicial" TO ANALISTA;
GRANT SELECT ON "cap$maestrosaldosmes" TO ANALISTA;
GRANT SELECT ON "cap$maestrotitular" TO ANALISTA;
GRANT SELECT ON "cap$obsestado" TO ANALISTA;
GRANT SELECT ON "cap$rangos" TO ANALISTA;
GRANT SELECT ON "cap$tablaliquidacion" TO ANALISTA;
GRANT SELECT ON "cap$tablaliquidacioncon" TO ANALISTA;
GRANT SELECT ON "cap$tipocaptacion" TO ANALISTA;
GRANT SELECT ON "cap$tiposestado" TO ANALISTA;
GRANT SELECT ON "cap$tiposforma" TO ANALISTA;
GRANT SELECT ON "cap$tiposmovimiento" TO ANALISTA;
GRANT SELECT ON "cap$tiposplancontractual" TO ANALISTA;
GRANT SELECT ON "cap$tipostitulares" TO ANALISTA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$ReporteData" TO ANALISTA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$ReporteDatatmp" TO ANALISTA;
GRANT SELECT ON "col$carteraf" TO ANALISTA;
GRANT SELECT ON "col$categoria" TO ANALISTA;
GRANT SELECT ON "col$causaciones" TO ANALISTA;
GRANT SELECT ON "col$causacionescontrol" TO ANALISTA;
GRANT SELECT ON "col$causacionestmp" TO ANALISTA;
GRANT SELECT ON "col$clasificacion" TO ANALISTA;
GRANT SELECT ON COL$CODIGOSPUC TO ANALISTA;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO ANALISTA;
GRANT SELECT ON "col$colgarantias" TO ANALISTA;
GRANT SELECT ON "col$colgarantiasreal" TO ANALISTA;
GRANT SELECT ON "col$colocacion" TO ANALISTA;
GRANT SELECT ON "col$colocacionabogado" TO ANALISTA;
GRANT SELECT ON "col$concol" TO ANALISTA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$controlcobro" TO ANALISTA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$controlreportedata" TO ANALISTA;
GRANT SELECT ON "col$costas" TO ANALISTA;
GRANT SELECT ON "col$descuentos" TO ANALISTA;
GRANT SELECT ON "col$enteaprobador" TO ANALISTA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$erroresdata" TO ANALISTA;
GRANT SELECT ON "col$estado" TO ANALISTA;
GRANT SELECT ON "col$estadosolicitud" TO ANALISTA;
GRANT SELECT ON "col$extracto" TO ANALISTA;
GRANT SELECT ON "col$extractodet" TO ANALISTA;
GRANT SELECT ON "col$garantia" TO ANALISTA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$hevaluacion" TO ANALISTA;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO ANALISTA;
GRANT SELECT ON "col$inversion" TO ANALISTA;
GRANT SELECT ON "col$lineas" TO ANALISTA;
GRANT SELECT ON "col$respaldo" TO ANALISTA;
GRANT SELECT ON "col$solicitud" TO ANALISTA;
GRANT SELECT ON "col$tablaliquidacion" TO ANALISTA;
GRANT SELECT ON "col$tablaliquidaciontmp" TO ANALISTA;
GRANT SELECT ON "col$tasadtf" TO ANALISTA;
GRANT SELECT ON "col$tasafijas" TO ANALISTA;
GRANT SELECT ON "col$tasasvariables" TO ANALISTA;
GRANT SELECT ON "col$tiposcuota" TO ANALISTA;
GRANT SELECT ON CON$AUXILIAR TO ANALISTA;
GRANT SELECT ON "con$captacion" TO ANALISTA;
GRANT SELECT ON "con$centrocosto" TO ANALISTA;
GRANT SELECT ON "con$colocacion" TO ANALISTA;
GRANT SELECT ON "con$colocacion1" TO ANALISTA;
GRANT SELECT ON CON$COMPROBANTE TO ANALISTA;
GRANT SELECT ON "con$comprobantecsc" TO ANALISTA;
GRANT SELECT ON CON$ERRORCIERRECOMP TO ANALISTA;
GRANT SELECT ON "con$fechasplanillas" TO ANALISTA;
GRANT SELECT ON "con$informes" TO ANALISTA;
GRANT SELECT ON CON$PLANILLARESUMEN TO ANALISTA;
GRANT SELECT ON CON$PUC TO ANALISTA;
GRANT SELECT ON CON$RETENCION TO ANALISTA;
GRANT SELECT ON CON$SALDOSCUENTA TO ANALISTA;
GRANT SELECT ON CON$TIPOCOMPROBANTE TO ANALISTA;
GRANT SELECT ON "errorestabla" TO ANALISTA;
GRANT SELECT ON "gen$agencia" TO ANALISTA;
GRANT SELECT ON "gen$bancos" TO ANALISTA;
GRANT SELECT ON "gen$consecutivos" TO ANALISTA;
GRANT SELECT ON "gen$consecutivostmp" TO ANALISTA;
GRANT SELECT ON "gen$denominaciones" TO ANALISTA;
GRANT SELECT, UPDATE, INSERT ON "gen$direccion" TO ANALISTA;
GRANT SELECT ON "gen$empleado" TO ANALISTA;
GRANT SELECT ON "gen$minimos" TO ANALISTA;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO ANALISTA;
GRANT SELECT ON "gen$permisos" TO ANALISTA;
GRANT SELECT, UPDATE, INSERT ON "gen$persona" TO ANALISTA;
GRANT SELECT ON "gen$plantillaobs" TO ANALISTA;
GRANT SELECT, UPDATE, INSERT ON "gen$referencias" TO ANALISTA;
GRANT SELECT ON "gen$tiposciiu" TO ANALISTA;
GRANT SELECT ON "gen$tiposclaseciiu" TO ANALISTA;
GRANT SELECT ON "gen$tiposdireccion" TO ANALISTA;
GRANT SELECT ON "gen$tiposestadocivil" TO ANALISTA;
GRANT SELECT ON "gen$tiposestadopersona" TO ANALISTA;
GRANT SELECT ON "gen$tiposidentificacion" TO ANALISTA;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO ANALISTA;
GRANT SELECT ON "gen$tiposparentesco" TO ANALISTA;
GRANT SELECT ON "gen$tipospersona" TO ANALISTA;
GRANT SELECT ON "gen$tiposreferencia" TO ANALISTA;
GRANT SELECT ON "gen$tiposrelacion" TO ANALISTA;
GRANT SELECT ON "gen$valorretefuente" TO ANALISTA;
GRANT SELECT ON "sipla$sdn" TO ANALISTA;
GRANT SELECT ON "tes$cheques" TO ANALISTA;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO ANALISTA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO ANALISTA;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO ANALISTA;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO ANALISTA;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO ANALISTA;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO ANALISTA;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO ANALISTA;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO ANALISTA;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO ANALISTA;
GRANT CREDITOS TO AORTIZ;
GRANT GERENCIA TO AORTIZ;
GRANT GERENCIA TO APAEZ;
GRANT VISADOR TO APAEZ;
GRANT CAPTACIONES TO AQUINTERO;
GRANT GERENCIA TO AQUINTERO;
GRANT SELECT ON RDB$CHARACTER_SETS TO AUXILIAR;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO AUXILIAR;
GRANT SELECT ON RDB$COLLATIONS TO AUXILIAR;
GRANT SELECT ON RDB$DATABASE TO AUXILIAR;
GRANT SELECT ON RDB$DEPENDENCIES TO AUXILIAR;
GRANT SELECT ON RDB$EXCEPTIONS TO AUXILIAR;
GRANT SELECT ON RDB$FIELDS TO AUXILIAR;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO AUXILIAR;
GRANT SELECT ON RDB$FILES TO AUXILIAR;
GRANT SELECT ON RDB$FILTERS TO AUXILIAR;
GRANT SELECT ON RDB$FORMATS TO AUXILIAR;
GRANT SELECT ON RDB$FUNCTIONS TO AUXILIAR;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO AUXILIAR;
GRANT SELECT ON RDB$GENERATORS TO AUXILIAR;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO AUXILIAR;
GRANT SELECT ON RDB$INDICES TO AUXILIAR;
GRANT SELECT ON RDB$LOG_FILES TO AUXILIAR;
GRANT SELECT ON RDB$PAGES TO AUXILIAR;
GRANT SELECT ON RDB$PROCEDURES TO AUXILIAR;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO AUXILIAR;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO AUXILIAR;
GRANT SELECT ON RDB$RELATIONS TO AUXILIAR;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO AUXILIAR;
GRANT SELECT ON RDB$RELATION_FIELDS TO AUXILIAR;
GRANT SELECT ON RDB$ROLES TO AUXILIAR;
GRANT SELECT ON RDB$SECURITY_CLASSES TO AUXILIAR;
GRANT SELECT ON RDB$TRANSACTIONS TO AUXILIAR;
GRANT SELECT ON RDB$TRIGGERS TO AUXILIAR;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO AUXILIAR;
GRANT SELECT ON RDB$TYPES TO AUXILIAR;
GRANT SELECT ON RDB$USER_PRIVILEGES TO AUXILIAR;
GRANT SELECT ON RDB$VIEW_RELATIONS TO AUXILIAR;
GRANT INSERT ON "cap$extracto" TO AUXILIAR;
GRANT SELECT ON "cap$tablaliquidacioncon" TO AUXILIAR;
GRANT SELECT ON "col$clasificacion" TO AUXILIAR;
GRANT SELECT ON COL$CODIGOSPUC TO AUXILIAR;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO AUXILIAR;
GRANT SELECT ON "col$colgarantias" TO AUXILIAR;
GRANT SELECT ON "col$colgarantiasreal" TO AUXILIAR;
GRANT SELECT, UPDATE, INSERT ON "col$colocacion" TO AUXILIAR;
GRANT SELECT ON "col$colocacionabogado" TO AUXILIAR;
GRANT SELECT ON "col$concol" TO AUXILIAR;
GRANT SELECT ON "col$controlcobro" TO AUXILIAR;
GRANT SELECT ON "col$costas" TO AUXILIAR;
GRANT SELECT ON "col$descuentos" TO AUXILIAR;
GRANT SELECT ON "col$enteaprobador" TO AUXILIAR;
GRANT SELECT ON "col$estado" TO AUXILIAR;
GRANT SELECT ON "col$estadosolicitud" TO AUXILIAR;
GRANT SELECT, UPDATE, INSERT ON "col$extracto" TO AUXILIAR;
GRANT SELECT, UPDATE, INSERT ON "col$extractodet" TO AUXILIAR;
GRANT SELECT ON "col$garantia" TO AUXILIAR;
GRANT SELECT ON "col$inversion" TO AUXILIAR;
GRANT SELECT ON "col$lineas" TO AUXILIAR;
GRANT SELECT ON "col$solicitud" TO AUXILIAR;
GRANT SELECT, UPDATE, INSERT ON "col$tablaliquidacion" TO AUXILIAR;
GRANT SELECT ON "col$tasadtf" TO AUXILIAR;
GRANT SELECT ON "col$tasafijas" TO AUXILIAR;
GRANT SELECT ON "col$tasasvariables" TO AUXILIAR;
GRANT SELECT ON "col$tiposcuota" TO AUXILIAR;
GRANT SELECT, INSERT ON CON$AUXILIAR TO AUXILIAR;
GRANT SELECT, UPDATE, INSERT ON CON$COMPROBANTE TO AUXILIAR;
GRANT SELECT ON CON$PUC TO AUXILIAR;
GRANT SELECT ON CON$SALDOSCUENTA TO AUXILIAR;
GRANT SELECT ON CON$SALDOSINICIALES TO AUXILIAR;
GRANT SELECT ON CON$TIPOCOMPROBANTE TO AUXILIAR;
GRANT SELECT ON "gen$agencia" TO AUXILIAR;
GRANT SELECT, UPDATE, REFERENCES ON "gen$consecutivos" TO AUXILIAR;
GRANT SELECT ON "gen$empleado" TO AUXILIAR;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO AUXILIAR;
GRANT SELECT ON "gen$permisos" TO AUXILIAR;
GRANT SELECT ON "gen$persona" TO AUXILIAR;
GRANT SELECT ON "gen$plantillaobs" TO AUXILIAR;
GRANT SELECT ON "gen$tiposidentificacion" TO AUXILIAR;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO AUXILIAR;
GRANT SELECT ON "sipla$sdn" TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO AUXILIAR;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO AUXILIAR;
GRANT CAJAS TO AVELASQUEZ;
GRANT CAPTACIONES TO AVELASQUEZ;
GRANT CARTERA TO AVELASQUEZ;
GRANT SELECT ON RDB$CHARACTER_SETS TO CAJAS;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO CAJAS;
GRANT SELECT ON RDB$COLLATIONS TO CAJAS;
GRANT SELECT ON RDB$DATABASE TO CAJAS;
GRANT SELECT ON RDB$DEPENDENCIES TO CAJAS;
GRANT SELECT ON RDB$EXCEPTIONS TO CAJAS;
GRANT SELECT ON RDB$FIELDS TO CAJAS;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO CAJAS;
GRANT SELECT ON RDB$FILES TO CAJAS;
GRANT SELECT ON RDB$FILTERS TO CAJAS;
GRANT SELECT ON RDB$FORMATS TO CAJAS;
GRANT SELECT ON RDB$FUNCTIONS TO CAJAS;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO CAJAS;
GRANT SELECT ON RDB$GENERATORS TO CAJAS;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO CAJAS;
GRANT SELECT ON RDB$INDICES TO CAJAS;
GRANT SELECT ON RDB$LOG_FILES TO CAJAS;
GRANT SELECT ON RDB$PAGES TO CAJAS;
GRANT SELECT ON RDB$PROCEDURES TO CAJAS;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO CAJAS;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO CAJAS;
GRANT SELECT ON RDB$RELATIONS TO CAJAS;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO CAJAS;
GRANT SELECT ON RDB$RELATION_FIELDS TO CAJAS;
GRANT SELECT ON RDB$ROLES TO CAJAS;
GRANT SELECT ON RDB$SECURITY_CLASSES TO CAJAS;
GRANT SELECT ON RDB$TRANSACTIONS TO CAJAS;
GRANT SELECT ON RDB$TRIGGERS TO CAJAS;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO CAJAS;
GRANT SELECT ON RDB$TYPES TO CAJAS;
GRANT SELECT ON RDB$USER_PRIVILEGES TO CAJAS;
GRANT SELECT ON RDB$VIEW_RELATIONS TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$arqueos" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$CAJAS TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$cheques" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$cierres" TO CAJAS;
GRANT SELECT ON CAJ$CONADICIONAL TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$devolucionarqueo" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$devolucioncolarqueo" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$devolucionrecaudosarqueo" TO CAJAS;
GRANT SELECT ON "caj$estados" TO CAJAS;
GRANT SELECT, REFERENCES ON "caj$horarioservicaja" TO CAJAS;
GRANT SELECT, REFERENCES ON "caj$maxautorizado" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimiento" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$movimientoarqueo" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientocol" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$movimientocolarqueo" TO CAJAS;
GRANT SELECT ON CAJ$ORIGEN TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$recaudos" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$recaudosarqueo" TO CAJAS;
GRANT SELECT, INSERT, REFERENCES ON "caj$retiroautorizado" TO CAJAS;
GRANT SELECT ON "caj$tiposmovimiento" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "caj$tmpcheques" TO CAJAS;
GRANT SELECT, UPDATE, INSERT ON "cap$canje" TO CAJAS;
GRANT SELECT, INSERT ON "cap$extracto" TO CAJAS;
GRANT SELECT ON "cap$libretas" TO CAJAS;
GRANT SELECT ON "cap$libretashistoria" TO CAJAS;
GRANT SELECT, INSERT ON "cap$libretasusada" TO CAJAS;
GRANT SELECT, UPDATE ON "cap$maestro" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldo" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldoinicial" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldosmes" TO CAJAS;
GRANT SELECT ON "cap$maestrotitular" TO CAJAS;
GRANT SELECT ON "cap$obsestado" TO CAJAS;
GRANT SELECT, UPDATE, REFERENCES ON "cap$tablaliquidacioncon" TO CAJAS;
GRANT SELECT ON "cap$tipocaptacion" TO CAJAS;
GRANT SELECT ON "cap$tiposestado" TO CAJAS;
GRANT SELECT ON "cap$tiposforma" TO CAJAS;
GRANT SELECT ON "cap$tiposmovimiento" TO CAJAS;
GRANT SELECT ON "cap$tiposplancontractual" TO CAJAS;
GRANT SELECT ON "cap$tipostitulares" TO CAJAS;
GRANT SELECT ON "col$categoria" TO CAJAS;
GRANT SELECT ON "col$clasificacion" TO CAJAS;
GRANT SELECT ON COL$CODIGOSPUC TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON COL$CODIGOSPUCBASICOS TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$colgarantias" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$colgarantiasreal" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$colocacion" TO CAJAS;
GRANT SELECT ON "col$colocacionabogado" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$concol" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$controlcobro" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$costas" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$descuentos" TO CAJAS;
GRANT SELECT ON "col$enteaprobador" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$estado" TO CAJAS;
GRANT SELECT ON "col$estadosolicitud" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$extracto" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extractodet" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$garantia" TO CAJAS;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$inversion" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$lineas" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$respaldo" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$resumen" TO CAJAS;
GRANT SELECT ON "col$solicitud" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$tablaliquidacion" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$tablaliquidaciontmp" TO CAJAS;
GRANT SELECT, UPDATE, DELETE ON "col$tasadtf" TO CAJAS;
GRANT SELECT, UPDATE ON "col$tasafijas" TO CAJAS;
GRANT SELECT, UPDATE ON "col$tasasvariables" TO CAJAS;
GRANT SELECT ON "col$tasavariables" TO CAJAS;
GRANT SELECT, UPDATE ON "col$tiposcuota" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$AUXILIAR TO CAJAS;
GRANT SELECT, UPDATE ON "con$captacion" TO CAJAS;
GRANT SELECT, UPDATE ON "con$centrocosto" TO CAJAS;
GRANT SELECT, UPDATE ON "con$colocacion" TO CAJAS;
GRANT SELECT, UPDATE, DELETE ON "con$colocacion1" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$COMPROBANTE TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "con$comprobantecsc" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$PUC TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$RETENCION TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$SALDOSCUENTA TO CAJAS;
GRANT SELECT ON CON$SALDOSINICIALES TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$TIPOCOMPROBANTE TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$agencia" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$bancos" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$consecutivos" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$denominaciones" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$direccion" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$empleado" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$minimos" TO CAJAS;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO CAJAS;
GRANT SELECT ON "gen$permisos" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$persona" TO CAJAS;
GRANT SELECT ON "gen$plantillaobs" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$referencias" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tiposciiu" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tiposclaseciiu" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tiposdireccion" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tiposestadocivil" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tiposestadopersona" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tiposidentificacion" TO CAJAS;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tiposparentesco" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tipospersona" TO CAJAS;
GRANT SELECT, UPDATE ON "gen$tiposreferencia" TO CAJAS;
GRANT SELECT, UPDATE, DELETE ON "gen$tiposrelacion" TO CAJAS;
GRANT SELECT, UPDATE, DELETE ON "gen$valorretefuente" TO CAJAS;
GRANT SELECT ON "sipla$sdn" TO CAJAS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "tes$cheques" TO CAJAS;
GRANT EXECUTE ON PROCEDURE ACTUALIZAR TO CAJAS;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO CAJAS;
GRANT EXECUTE ON PROCEDURE BUSCAR_APORTES TO CAJAS;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA TO CAJAS;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA_N1 TO CAJAS;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO CAJAS;
GRANT EXECUTE ON PROCEDURE CUENTAS_DIAN TO CAJAS;
GRANT EXECUTE ON PROCEDURE DIAN_CUENTASABIERTAS TO CAJAS;
GRANT EXECUTE ON PROCEDURE DIAN_NOTASCREDITO TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0000 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0001_L TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0003 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0004 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0005 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0006 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0007 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0007_L TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0015 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0017 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0018 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_COL_0002 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_COL_003 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_COL_004 TO CAJAS;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO CAJAS;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO CAJAS;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO CAJAS;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO CAJAS;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO CAJAS;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO CAJAS;
GRANT EXECUTE ON PROCEDURE SALDO_MOVICOL TO CAJAS;
GRANT EXECUTE ON PROCEDURE SALDO_MOVIMIENTO TO CAJAS;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO CAJAS;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO CAJAS;
GRANT EXECUTE ON PROCEDURE "SP_GEN_""col$tasafijas""_ID" TO CAJAS;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO CAJAS;
GRANT EXECUTE ON PROCEDURE SP_SALDOS_CUENTAS_NOMBRES TO CAJAS;
GRANT EXECUTE ON PROCEDURE SUMATORIA_CAPTACIONES TO CAJAS;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO CAJAS;
GRANT SELECT ON RDB$CHARACTER_SETS TO CAPTACIONES;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO CAPTACIONES;
GRANT SELECT ON RDB$COLLATIONS TO CAPTACIONES;
GRANT SELECT ON RDB$DATABASE TO CAPTACIONES;
GRANT SELECT ON RDB$DEPENDENCIES TO CAPTACIONES;
GRANT SELECT ON RDB$EXCEPTIONS TO CAPTACIONES;
GRANT SELECT ON RDB$FIELDS TO CAPTACIONES;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO CAPTACIONES;
GRANT SELECT ON RDB$FILES TO CAPTACIONES;
GRANT SELECT ON RDB$FILTERS TO CAPTACIONES;
GRANT SELECT ON RDB$FORMATS TO CAPTACIONES;
GRANT SELECT ON RDB$FUNCTIONS TO CAPTACIONES;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO CAPTACIONES;
GRANT SELECT ON RDB$GENERATORS TO CAPTACIONES;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO CAPTACIONES;
GRANT SELECT ON RDB$INDICES TO CAPTACIONES;
GRANT SELECT ON RDB$LOG_FILES TO CAPTACIONES;
GRANT SELECT ON RDB$PAGES TO CAPTACIONES;
GRANT SELECT ON RDB$PROCEDURES TO CAPTACIONES;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO CAPTACIONES;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO CAPTACIONES;
GRANT SELECT ON RDB$RELATIONS TO CAPTACIONES;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO CAPTACIONES;
GRANT SELECT ON RDB$RELATION_FIELDS TO CAPTACIONES;
GRANT SELECT ON RDB$ROLES TO CAPTACIONES;
GRANT SELECT ON RDB$SECURITY_CLASSES TO CAPTACIONES;
GRANT SELECT ON RDB$TRANSACTIONS TO CAPTACIONES;
GRANT SELECT ON RDB$TRIGGERS TO CAPTACIONES;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO CAPTACIONES;
GRANT SELECT ON RDB$TYPES TO CAPTACIONES;
GRANT SELECT ON RDB$USER_PRIVILEGES TO CAPTACIONES;
GRANT SELECT ON RDB$VIEW_RELATIONS TO CAPTACIONES;
GRANT SELECT ON "cap$canje" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdat" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdattmp" TO CAPTACIONES;
GRANT SELECT, REFERENCES ON CAP$CODIGOSCAUSACION TO CAPTACIONES;
GRANT SELECT ON CAP$CONTABLE TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT ON "cap$diasliquidados" TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT ON "cap$diasprorrogados" TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT ON "cap$embargo" TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT ON "cap$extracto" TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT ON "cap$fechaspagasinteres" TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT ON "cap$historiaprorrogas" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$libretas" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$libretashistoria" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$libretasusada" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestro" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestroautorizado" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrobeneficiario" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldo" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldoinicial" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldosmes" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrotitular" TO CAPTACIONES;
GRANT SELECT, INSERT, REFERENCES ON "cap$obsestado" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$rangos" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$tablaliquidacion" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tablaliquidacioncon" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tipocaptacion" TO CAPTACIONES;
GRANT SELECT, REFERENCES ON "cap$tiposestado" TO CAPTACIONES;
GRANT SELECT ON "cap$tiposforma" TO CAPTACIONES;
GRANT SELECT ON "cap$tiposmovimiento" TO CAPTACIONES;
GRANT SELECT ON "cap$tiposplancontractual" TO CAPTACIONES;
GRANT SELECT ON "cap$tipostitulares" TO CAPTACIONES;
GRANT SELECT ON "col$categoria" TO CAPTACIONES;
GRANT SELECT ON "col$clasificacion" TO CAPTACIONES;
GRANT SELECT ON COL$CODIGOSPUC TO CAPTACIONES;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO CAPTACIONES;
GRANT SELECT ON "col$colgarantias" TO CAPTACIONES;
GRANT SELECT ON "col$colgarantiasreal" TO CAPTACIONES;
GRANT SELECT ON "col$colocacion" TO CAPTACIONES;
GRANT SELECT ON "col$colocacionabogado" TO CAPTACIONES;
GRANT SELECT ON "col$concol" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$controlcobro" TO CAPTACIONES;
GRANT SELECT ON "col$costas" TO CAPTACIONES;
GRANT SELECT ON "col$descuentos" TO CAPTACIONES;
GRANT SELECT ON "col$enteaprobador" TO CAPTACIONES;
GRANT SELECT ON "col$estado" TO CAPTACIONES;
GRANT SELECT ON "col$estadosolicitud" TO CAPTACIONES;
GRANT SELECT ON "col$extracto" TO CAPTACIONES;
GRANT SELECT ON "col$extractodet" TO CAPTACIONES;
GRANT SELECT ON "col$garantia" TO CAPTACIONES;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO CAPTACIONES;
GRANT SELECT ON "col$inversion" TO CAPTACIONES;
GRANT SELECT ON "col$lineas" TO CAPTACIONES;
GRANT SELECT ON "col$respaldo" TO CAPTACIONES;
GRANT SELECT ON "col$solicitud" TO CAPTACIONES;
GRANT SELECT ON "col$tablaliquidacion" TO CAPTACIONES;
GRANT SELECT ON "col$tablaliquidaciontmp" TO CAPTACIONES;
GRANT SELECT ON "col$tasadtf" TO CAPTACIONES;
GRANT SELECT ON "col$tasafijas" TO CAPTACIONES;
GRANT SELECT ON "col$tasasvariables" TO CAPTACIONES;
GRANT SELECT ON "col$tasavariables" TO CAPTACIONES;
GRANT SELECT ON "col$tiposcuota" TO CAPTACIONES;
GRANT SELECT, INSERT, REFERENCES ON CON$AUXILIAR TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE ON "con$captacion" TO CAPTACIONES;
GRANT SELECT, UPDATE ON "con$centrocosto" TO CAPTACIONES;
GRANT SELECT, UPDATE ON "con$colocacion" TO CAPTACIONES;
GRANT SELECT ON "con$colocacion1" TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT, REFERENCES ON CON$COMPROBANTE TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "con$comprobantecsc" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON "con$informes" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$PUC TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$RETENCION TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$SALDOSCUENTA TO CAPTACIONES;
GRANT SELECT ON CON$SALDOSINICIALES TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$TIPOCOMPROBANTE TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT, REFERENCES ON "gen$agencia" TO CAPTACIONES;
GRANT SELECT, UPDATE, INSERT, REFERENCES ON "gen$bancos" TO CAPTACIONES;
GRANT SELECT, REFERENCES ON GEN$BANCOSCONNAL TO CAPTACIONES;
GRANT SELECT, REFERENCES ON "gen$compdescripcion" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivos" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivostmp" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$direccion" TO CAPTACIONES;
GRANT SELECT ON "gen$empleado" TO CAPTACIONES;
GRANT SELECT ON "gen$minimos" TO CAPTACIONES;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO CAPTACIONES;
GRANT SELECT ON "gen$permisos" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$persona" TO CAPTACIONES;
GRANT SELECT ON "gen$plantillaobs" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$referencias" TO CAPTACIONES;
GRANT SELECT ON "gen$tiposciiu" TO CAPTACIONES;
GRANT SELECT ON "gen$tiposclaseciiu" TO CAPTACIONES;
GRANT SELECT ON "gen$tiposdireccion" TO CAPTACIONES;
GRANT SELECT ON "gen$tiposestadocivil" TO CAPTACIONES;
GRANT SELECT ON "gen$tiposestadopersona" TO CAPTACIONES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposidentificacion" TO CAPTACIONES;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO CAPTACIONES;
GRANT SELECT ON "gen$tiposparentesco" TO CAPTACIONES;
GRANT SELECT ON "gen$tipospersona" TO CAPTACIONES;
GRANT SELECT ON "gen$tiposreferencia" TO CAPTACIONES;
GRANT SELECT ON "gen$tiposrelacion" TO CAPTACIONES;
GRANT SELECT ON "gen$valorretefuente" TO CAPTACIONES;
GRANT SELECT ON "sipla$sdn" TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0001_L TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0003 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0004 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0005 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0006 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0007 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0007_L TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0015 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE VALOR_AGENCIA TO CAPTACIONES;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO CAPTACIONES;
GRANT SELECT ON RDB$CHARACTER_SETS TO CARTERA;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO CARTERA;
GRANT SELECT ON RDB$COLLATIONS TO CARTERA;
GRANT SELECT ON RDB$DATABASE TO CARTERA;
GRANT SELECT ON RDB$DEPENDENCIES TO CARTERA;
GRANT SELECT ON RDB$EXCEPTIONS TO CARTERA;
GRANT SELECT ON RDB$FIELDS TO CARTERA;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO CARTERA;
GRANT SELECT ON RDB$FILES TO CARTERA;
GRANT SELECT ON RDB$FILTERS TO CARTERA;
GRANT SELECT ON RDB$FORMATS TO CARTERA;
GRANT SELECT ON RDB$FUNCTIONS TO CARTERA;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO CARTERA;
GRANT SELECT ON RDB$GENERATORS TO CARTERA;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO CARTERA;
GRANT SELECT ON RDB$INDICES TO CARTERA;
GRANT SELECT ON RDB$LOG_FILES TO CARTERA;
GRANT SELECT ON RDB$PAGES TO CARTERA;
GRANT SELECT ON RDB$PROCEDURES TO CARTERA;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO CARTERA;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO CARTERA;
GRANT SELECT ON RDB$RELATIONS TO CARTERA;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO CARTERA;
GRANT SELECT ON RDB$RELATION_FIELDS TO CARTERA;
GRANT SELECT ON RDB$ROLES TO CARTERA;
GRANT SELECT ON RDB$SECURITY_CLASSES TO CARTERA;
GRANT SELECT ON RDB$TRANSACTIONS TO CARTERA;
GRANT SELECT ON RDB$TRIGGERS TO CARTERA;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO CARTERA;
GRANT SELECT ON RDB$TYPES TO CARTERA;
GRANT SELECT ON RDB$USER_PRIVILEGES TO CARTERA;
GRANT SELECT ON RDB$VIEW_RELATIONS TO CARTERA;
GRANT SELECT ON "cap$canje" TO CARTERA;
GRANT SELECT, INSERT ON "cap$extracto" TO CARTERA;
GRANT SELECT, UPDATE ON "cap$maestro" TO CARTERA;
GRANT SELECT ON "cap$maestroautorizado" TO CARTERA;
GRANT SELECT ON "cap$maestrobeneficiario" TO CARTERA;
GRANT SELECT ON "cap$maestrosaldo" TO CARTERA;
GRANT SELECT ON "cap$maestrosaldoinicial" TO CARTERA;
GRANT SELECT, UPDATE ON "cap$maestrosaldosmes" TO CARTERA;
GRANT SELECT ON "cap$maestrotitular" TO CARTERA;
GRANT SELECT, INSERT ON "cap$obsestado" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$revalorizaciontmp" TO CARTERA;
GRANT SELECT ON "cap$tablaliquidacion" TO CARTERA;
GRANT SELECT ON "cap$tablaliquidacioncon" TO CARTERA;
GRANT SELECT ON "cap$tipocaptacion" TO CARTERA;
GRANT SELECT ON "cap$tiposestado" TO CARTERA;
GRANT SELECT ON "cap$tiposforma" TO CARTERA;
GRANT SELECT ON "cap$tiposmovimiento" TO CARTERA;
GRANT SELECT ON "cap$tiposplancontractual" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$barridoCartera" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$barridoahorroscartera" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$carteraf" TO CARTERA;
GRANT SELECT ON "col$categoria" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$causaciones" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$causacionescontrol" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$causacionestmp" TO CARTERA;
GRANT SELECT ON "col$clasificacion" TO CARTERA;
GRANT SELECT ON COL$CODIGOSPUC TO CARTERA;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO CARTERA;
GRANT SELECT ON "col$colgarantias" TO CARTERA;
GRANT SELECT ON "col$colgarantiasreal" TO CARTERA;
GRANT SELECT, UPDATE ON "col$colocacion" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colocacionabogado" TO CARTERA;
GRANT SELECT ON "col$concol" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$controlcobro" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$costas" TO CARTERA;
GRANT SELECT ON "col$descuentos" TO CARTERA;
GRANT SELECT ON "col$enteaprobador" TO CARTERA;
GRANT SELECT ON "col$estado" TO CARTERA;
GRANT SELECT ON "col$estadosolicitud" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$extracto" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$extractobarridotmp" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$extractodet" TO CARTERA;
GRANT SELECT ON "col$garantia" TO CARTERA;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO CARTERA;
GRANT SELECT ON "col$inversion" TO CARTERA;
GRANT SELECT ON "col$lineadescuento" TO CARTERA;
GRANT SELECT ON "col$lineas" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$porccausacion" TO CARTERA;
GRANT SELECT ON "col$respaldo" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$resumen" TO CARTERA;
GRANT SELECT ON "col$solicitud" TO CARTERA;
GRANT SELECT, UPDATE ON "col$tablaliquidacion" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$tablaliquidaciontmp" TO CARTERA;
GRANT SELECT ON "col$tasadtf" TO CARTERA;
GRANT SELECT ON "col$tasafijas" TO CARTERA;
GRANT SELECT ON "col$tasasvariables" TO CARTERA;
GRANT SELECT ON "col$tasavariables" TO CARTERA;
GRANT SELECT ON "col$tiposcuota" TO CARTERA;
GRANT SELECT, INSERT ON CON$AUXILIAR TO CARTERA;
GRANT SELECT ON "con$captacion" TO CARTERA;
GRANT SELECT ON "con$centrocosto" TO CARTERA;
GRANT SELECT ON "con$colocacion" TO CARTERA;
GRANT SELECT ON "con$colocacion1" TO CARTERA;
GRANT SELECT, UPDATE, INSERT ON CON$COMPROBANTE TO CARTERA;
GRANT SELECT ON "con$comprobantecsc" TO CARTERA;
GRANT SELECT ON CON$ERRORCIERRECOMP TO CARTERA;
GRANT SELECT ON "con$fechasplanillas" TO CARTERA;
GRANT SELECT ON "con$informes" TO CARTERA;
GRANT SELECT ON CON$PUC TO CARTERA;
GRANT SELECT ON "CON$PUCinforme" TO CARTERA;
GRANT SELECT ON CON$RETENCION TO CARTERA;
GRANT SELECT ON CON$SALDOSCUENTA TO CARTERA;
GRANT SELECT ON CON$SALDOSINICIALES TO CARTERA;
GRANT SELECT ON CON$TIPOCOMPROBANTE TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$abogados" TO CARTERA;
GRANT SELECT ON "gen$agencia" TO CARTERA;
GRANT SELECT, UPDATE ON "gen$consecutivos" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivostmp" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$direccion" TO CARTERA;
GRANT SELECT ON "gen$empleado" TO CARTERA;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO CARTERA;
GRANT SELECT ON "gen$permisos" TO CARTERA;
GRANT SELECT, UPDATE, INSERT, REFERENCES ON "gen$persona" TO CARTERA;
GRANT SELECT ON "gen$plantillaobs" TO CARTERA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$referencias" TO CARTERA;
GRANT SELECT ON "gen$tiposciiu" TO CARTERA;
GRANT SELECT ON "gen$tiposclaseciiu" TO CARTERA;
GRANT SELECT ON "gen$tiposdireccion" TO CARTERA;
GRANT SELECT ON "gen$tiposestadocivil" TO CARTERA;
GRANT SELECT ON "gen$tiposestadopersona" TO CARTERA;
GRANT SELECT ON "gen$tiposidentificacion" TO CARTERA;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO CARTERA;
GRANT SELECT ON "gen$tiposparentesco" TO CARTERA;
GRANT SELECT ON "gen$tipospersona" TO CARTERA;
GRANT SELECT ON "gen$tiposreferencia" TO CARTERA;
GRANT SELECT ON "gen$tiposrelacion" TO CARTERA;
GRANT SELECT ON "sipla$sdn" TO CARTERA;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0017 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0018 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_COL_003 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_COL_004 TO CARTERA;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO CARTERA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO CARTERA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO CARTERA;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO CARTERA;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO CARTERA;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO CARTERA;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO CARTERA;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO CARTERA;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO CARTERA;
GRANT EXECUTE ON PROCEDURE VALOR_AGENCIA TO CARTERA;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO CARTERA;
GRANT FUNDACION TO CGUERRERO;
GRANT FUNDACION TO CIGUERRERO;
GRANT SIPLA TO CIRCULARES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "Extracto38293.4055229977" TO CMORA WITH GRANT OPTION;
GRANT CARTERA TO CMORA;
GRANT GERENCIA TO CMORA;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO CONSULTAS;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO CONSULTAS;
GRANT GERENCIA TO CONSULTAS;
GRANT SIPLA TO CONSULTAS;
GRANT SELECT ON IBE$PARAMS_HISTORY TO CONTABILIDAD_A;
GRANT SELECT ON IBE$REPORTS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$CHARACTER_SETS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$COLLATIONS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$DATABASE TO CONTABILIDAD_A;
GRANT SELECT ON RDB$DEPENDENCIES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$EXCEPTIONS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$FIELDS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$FILES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$FILTERS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$FORMATS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$FUNCTIONS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$GENERATORS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$INDICES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$LOG_FILES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$PAGES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$PROCEDURES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$RELATIONS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$RELATION_FIELDS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$ROLES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$SECURITY_CLASSES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$TRANSACTIONS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$TRIGGERS TO CONTABILIDAD_A;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$TYPES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$USER_PRIVILEGES TO CONTABILIDAD_A;
GRANT SELECT ON RDB$VIEW_RELATIONS TO CONTABILIDAD_A;
GRANT SELECT ON "caj$arqueos" TO CONTABILIDAD_A;
GRANT SELECT ON CAJ$CAJAS TO CONTABILIDAD_A;
GRANT SELECT ON "CAJ$CAJAShistoria" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$cheques" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$cierres" TO CONTABILIDAD_A;
GRANT SELECT ON CAJ$CONADICIONAL TO CONTABILIDAD_A;
GRANT SELECT ON "caj$devolucionarqueo" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$devolucioncolarqueo" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$devolucionrecaudosarqueo" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$estados" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$movimiento" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$movimientoarqueo" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$movimientocol" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$movimientocolarqueo" TO CONTABILIDAD_A;
GRANT SELECT ON CAJ$ORIGEN TO CONTABILIDAD_A;
GRANT SELECT ON "caj$recaudos" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$recaudosarqueo" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$tiposmovimiento" TO CONTABILIDAD_A;
GRANT SELECT ON "caj$tmpcheques" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$canje" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdat" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$causacioncdattmp" TO CONTABILIDAD_A;
GRANT SELECT ON CAP$CODIGOSCAUSACION TO CONTABILIDAD_A;
GRANT SELECT ON CAP$CONTABLE TO CONTABILIDAD_A;
GRANT SELECT ON "cap$diasliquidados" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$diasprorrogados" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$embargo" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$extracto" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$fechaspagasinteres" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$historiaprorrogas" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$libretas" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$libretashistoria" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$libretasusada" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestro" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$maestroautorizado" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$maestrobeneficiario" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldo" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldoinicial" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldosmes" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrotitular" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$obsestado" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$rangos" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$revalorizacion" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$revalorizaciontmp" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$tablaliquidacion" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tablaliquidacioncon" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$tipocaptacion" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$tiposestado" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$tiposforma" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$tiposmovimiento" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$tiposplancontractual" TO CONTABILIDAD_A;
GRANT SELECT ON "cap$tipostitulares" TO CONTABILIDAD_A;
GRANT SELECT ON "col$categoria" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causaciones" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causacionescontrol" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causacionestmp" TO CONTABILIDAD_A;
GRANT SELECT ON "col$clasificacion" TO CONTABILIDAD_A;
GRANT SELECT ON COL$CODIGOSPUC TO CONTABILIDAD_A;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO CONTABILIDAD_A;
GRANT SELECT ON "col$colgarantias" TO CONTABILIDAD_A;
GRANT SELECT ON "col$colgarantiasreal" TO CONTABILIDAD_A;
GRANT SELECT ON "col$colocacion" TO CONTABILIDAD_A;
GRANT SELECT ON "col$colocacionabogado" TO CONTABILIDAD_A;
GRANT SELECT ON "col$concol" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$controlcobro" TO CONTABILIDAD_A;
GRANT SELECT ON "col$costas" TO CONTABILIDAD_A;
GRANT SELECT ON "col$descuentos" TO CONTABILIDAD_A;
GRANT SELECT ON "col$enteaprobador" TO CONTABILIDAD_A;
GRANT SELECT ON "col$estado" TO CONTABILIDAD_A;
GRANT SELECT ON "col$estadosolicitud" TO CONTABILIDAD_A;
GRANT SELECT ON "col$extracto" TO CONTABILIDAD_A;
GRANT SELECT ON "col$extractodet" TO CONTABILIDAD_A;
GRANT SELECT ON "col$garantia" TO CONTABILIDAD_A;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO CONTABILIDAD_A;
GRANT SELECT ON "col$inversion" TO CONTABILIDAD_A;
GRANT SELECT ON "col$lineas" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$porccausacion" TO CONTABILIDAD_A;
GRANT SELECT ON "col$respaldo" TO CONTABILIDAD_A;
GRANT SELECT ON "col$solicitud" TO CONTABILIDAD_A;
GRANT SELECT ON "col$tablaliquidacion" TO CONTABILIDAD_A;
GRANT SELECT ON "col$tablaliquidaciontmp" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasadtf" TO CONTABILIDAD_A;
GRANT SELECT ON "col$tasafijas" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasasvariables" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasavariables" TO CONTABILIDAD_A;
GRANT SELECT ON "col$tiposcuota" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$AUXILIAR TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$CAJADIARIO TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$captacion" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$centrocosto" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$colocacion" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$colocacion1" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$COMPROBANTE TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$comprobantecsc" TO CONTABILIDAD_A;
GRANT SELECT, INSERT, REFERENCES ON CON$CONTROLPLANILLA TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$ERRORCIERRECOMP TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$informes" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$PLANILLARESUMEN TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$PUC TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CON$PUCcon" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$RETENCION TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$SALDOSCUENTA TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$SALDOSINICIALES TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$TIPOCOMPROBANTE TO CONTABILIDAD_A;
GRANT SELECT ON "errorestabla" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$ayudas" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$diascerrados" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$movimiento" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$agencia" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$bancos" TO CONTABILIDAD_A;
GRANT SELECT ON GEN$BANCOSCONNAL TO CONTABILIDAD_A;
GRANT SELECT ON "gen$cedulasvip" TO CONTABILIDAD_A;
GRANT SELECT ON GEN$CODIGOSINGRESOSGASTOS TO CONTABILIDAD_A;
GRANT SELECT ON "gen$compdescripcion" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE ON "gen$consecutivos" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$denominaciones" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$direccion" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$empleado" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$minimos" TO CONTABILIDAD_A;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$parientesprivilegiados" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$permisos" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$persona" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$plantillaobs" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$privilegiados" TO CONTABILIDAD_A;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$referencias" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposciiu" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposclaseciiu" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposdireccion" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposestadocivil" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposestadopersona" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposidentificacion" TO CONTABILIDAD_A;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposparentesco" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tipospersona" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposreferencia" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$tiposrelacion" TO CONTABILIDAD_A;
GRANT SELECT ON "gen$valorretefuente" TO CONTABILIDAD_A;
GRANT SELECT ON "sipla$sdn" TO CONTABILIDAD_A;
GRANT SELECT ON "tes$cheques" TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE ESTADO_IYG_CONSOLIDADO TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0001_L TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0007_L TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0015 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_COL_003 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE P_COL_004 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE SUMATORIA_CAPTACIONES TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE VALOR_AGENCIA TO CONTABILIDAD_A;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO CONTABILIDAD_A;
GRANT SELECT ON "cap$obsestado" TO CONTABILIDAD_C;
GRANT SELECT ON "cap$tablaliquidacioncon" TO CONTABILIDAD_C;
GRANT SELECT ON "cap$tipocaptacion" TO CONTABILIDAD_C;
GRANT SELECT ON "col$colocacionabogado" TO CONTABILIDAD_C;
GRANT SELECT ON "col$estadosolicitud" TO CONTABILIDAD_C;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO CONTABILIDAD_C;
GRANT SELECT ON "col$solicitud" TO CONTABILIDAD_C;
GRANT SELECT ON CON$SALDOSINICIALES TO CONTABILIDAD_C;
GRANT SELECT ON GEN$BANCOSCONNAL TO CONTABILIDAD_C;
GRANT SELECT ON "gen$compdescripcion" TO CONTABILIDAD_C;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO CONTABILIDAD_C;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$parientesprivilegiados" TO CONTABILIDAD_C;
GRANT SELECT ON "gen$permisos" TO CONTABILIDAD_C;
GRANT SELECT ON "gen$plantillaobs" TO CONTABILIDAD_C;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$privilegiados" TO CONTABILIDAD_C;
GRANT SELECT ON "gen$tiposidentificacion" TO CONTABILIDAD_C;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO CONTABILIDAD_C;
GRANT SELECT ON "sipla$sdn" TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE ESTADO_IYG_CONSOLIDADO TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE VALOR_AGENCIA TO CONTABILIDAD_C;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO CONTABILIDAD_C;
GRANT CARTERA TO COSORIO;
GRANT CREDITOS TO COSORIO;
GRANT GERENCIA TO COSORIO;
GRANT SELECT ON RDB$CHARACTER_SETS TO CREDITOS;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO CREDITOS;
GRANT SELECT ON RDB$COLLATIONS TO CREDITOS;
GRANT SELECT ON RDB$DATABASE TO CREDITOS;
GRANT SELECT ON RDB$DEPENDENCIES TO CREDITOS;
GRANT SELECT ON RDB$EXCEPTIONS TO CREDITOS;
GRANT SELECT ON RDB$FIELDS TO CREDITOS;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO CREDITOS;
GRANT SELECT ON RDB$FILES TO CREDITOS;
GRANT SELECT ON RDB$FILTERS TO CREDITOS;
GRANT SELECT ON RDB$FORMATS TO CREDITOS;
GRANT SELECT ON RDB$FUNCTIONS TO CREDITOS;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO CREDITOS;
GRANT SELECT ON RDB$GENERATORS TO CREDITOS;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO CREDITOS;
GRANT SELECT ON RDB$INDICES TO CREDITOS;
GRANT SELECT ON RDB$LOG_FILES TO CREDITOS;
GRANT SELECT ON RDB$PAGES TO CREDITOS;
GRANT SELECT ON RDB$PROCEDURES TO CREDITOS;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO CREDITOS;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO CREDITOS;
GRANT SELECT ON RDB$RELATIONS TO CREDITOS;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO CREDITOS;
GRANT SELECT ON RDB$RELATION_FIELDS TO CREDITOS;
GRANT SELECT ON RDB$ROLES TO CREDITOS;
GRANT SELECT ON RDB$SECURITY_CLASSES TO CREDITOS;
GRANT SELECT ON RDB$TRANSACTIONS TO CREDITOS;
GRANT SELECT ON RDB$TRIGGERS TO CREDITOS;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO CREDITOS;
GRANT SELECT ON RDB$TYPES TO CREDITOS;
GRANT SELECT ON RDB$USER_PRIVILEGES TO CREDITOS;
GRANT SELECT ON RDB$VIEW_RELATIONS TO CREDITOS;
GRANT SELECT ON "cap$canje" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdat" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdattmp" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CAP$CODIGOSCAUSACION TO CREDITOS;
GRANT SELECT, INSERT ON "cap$extracto" TO CREDITOS;
GRANT SELECT ON "cap$maestro" TO CREDITOS;
GRANT SELECT ON "cap$maestroautorizado" TO CREDITOS;
GRANT SELECT ON "cap$maestrobeneficiario" TO CREDITOS;
GRANT SELECT ON "cap$maestrosaldo" TO CREDITOS;
GRANT SELECT ON "cap$maestrosaldoinicial" TO CREDITOS;
GRANT SELECT, UPDATE ON "cap$maestrosaldosmes" TO CREDITOS;
GRANT SELECT ON "cap$maestrotitular" TO CREDITOS;
GRANT SELECT ON "cap$obsestado" TO CREDITOS;
GRANT SELECT, DELETE ON "cap$rangos" TO CREDITOS;
GRANT SELECT ON "cap$tablaliquidacion" TO CREDITOS;
GRANT SELECT ON "cap$tablaliquidacioncon" TO CREDITOS;
GRANT SELECT ON "cap$tipocaptacion" TO CREDITOS;
GRANT SELECT ON "cap$tiposestado" TO CREDITOS;
GRANT SELECT ON "cap$tiposforma" TO CREDITOS;
GRANT SELECT ON "cap$tiposmovimiento" TO CREDITOS;
GRANT SELECT ON "cap$tiposplancontractual" TO CREDITOS;
GRANT SELECT ON "cap$tipostitulares" TO CREDITOS;
GRANT SELECT ON "col$categoria" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$clasificacion" TO CREDITOS;
GRANT SELECT ON COL$CODIGOSPUC TO CREDITOS;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO CREDITOS;
GRANT SELECT, UPDATE, INSERT ON "col$colgarantias" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$colgarantiasreal" TO CREDITOS;
GRANT SELECT, UPDATE, INSERT ON "col$colocacion" TO CREDITOS;
GRANT SELECT ON "col$colocacionabogado" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$concol" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$controlcobro" TO CREDITOS;
GRANT SELECT ON "col$costas" TO CREDITOS;
GRANT SELECT ON "col$descuentos" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$enteaprobador" TO CREDITOS;
GRANT SELECT ON "col$estado" TO CREDITOS;
GRANT SELECT ON "col$estadosolicitud" TO CREDITOS;
GRANT SELECT, INSERT ON "col$extracto" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$extractodet" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$garantia" TO CREDITOS;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$inversion" TO CREDITOS;
GRANT SELECT ON "col$lineadescuento" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$lineas" TO CREDITOS;
GRANT SELECT ON "col$requisitos" TO CREDITOS;
GRANT SELECT ON "col$requisitosmonto" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$respaldo" TO CREDITOS;
GRANT SELECT ON "col$solicitud" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$tablaliquidacion" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$tablaliquidaciontmp" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$tasadtf" TO CREDITOS;
GRANT SELECT ON "col$tasafijas" TO CREDITOS;
GRANT SELECT ON "col$tasasvariables" TO CREDITOS;
GRANT SELECT ON "col$tasavariables" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$tiposcuota" TO CREDITOS;
GRANT SELECT, INSERT ON CON$AUXILIAR TO CREDITOS;
GRANT SELECT, UPDATE, DELETE ON "con$captacion" TO CREDITOS;
GRANT SELECT ON "con$centrocosto" TO CREDITOS;
GRANT SELECT, UPDATE ON "con$colocacion" TO CREDITOS;
GRANT SELECT ON "con$colocacion1" TO CREDITOS;
GRANT SELECT, UPDATE, INSERT ON CON$COMPROBANTE TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "con$comprobantecsc" TO CREDITOS;
GRANT SELECT ON "con$informes" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$PUC TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$RETENCION TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$SALDOSCUENTA TO CREDITOS;
GRANT SELECT ON CON$SALDOSINICIALES TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$TIPOCOMPROBANTE TO CREDITOS;
GRANT SELECT ON "gen$agencia" TO CREDITOS;
GRANT SELECT ON "gen$bancos" TO CREDITOS;
GRANT SELECT, UPDATE ON "gen$consecutivos" TO CREDITOS;
GRANT SELECT, UPDATE ON "gen$consecutivostmp" TO CREDITOS;
GRANT SELECT ON "gen$denominaciones" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "gen$direccion" TO CREDITOS;
GRANT SELECT ON "gen$empleado" TO CREDITOS;
GRANT SELECT ON "gen$minimos" TO CREDITOS;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO CREDITOS;
GRANT SELECT ON "gen$permisos" TO CREDITOS;
GRANT SELECT, UPDATE, INSERT ON "gen$persona" TO CREDITOS;
GRANT SELECT ON "gen$plantillaobs" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "gen$referencias" TO CREDITOS;
GRANT SELECT ON "gen$tiposciiu" TO CREDITOS;
GRANT SELECT ON "gen$tiposclaseciiu" TO CREDITOS;
GRANT SELECT ON "gen$tiposdireccion" TO CREDITOS;
GRANT SELECT ON "gen$tiposestadocivil" TO CREDITOS;
GRANT SELECT ON "gen$tiposestadopersona" TO CREDITOS;
GRANT SELECT, UPDATE, DELETE, INSERT ON "gen$tiposidentificacion" TO CREDITOS;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO CREDITOS;
GRANT SELECT ON "gen$tiposparentesco" TO CREDITOS;
GRANT SELECT ON "gen$tipospersona" TO CREDITOS;
GRANT SELECT ON "gen$tiposreferencia" TO CREDITOS;
GRANT SELECT ON "gen$tiposrelacion" TO CREDITOS;
GRANT SELECT ON "sipla$sdn" TO CREDITOS;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0015 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_COL_0002 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO CREDITOS;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO CREDITOS;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO CREDITOS;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO CREDITOS;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO CREDITOS;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO CREDITOS;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO CREDITOS;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO CREDITOS;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO CREDITOS;
GRANT SELECT ON "cap$maestro" TO DETALLE;
GRANT SELECT ON "cap$maestroautorizado" TO DETALLE;
GRANT SELECT ON "cap$maestrobeneficiario" TO DETALLE;
GRANT SELECT ON "cap$maestrosaldo" TO DETALLE;
GRANT SELECT ON "cap$maestrosaldoinicial" TO DETALLE;
GRANT SELECT ON "cap$maestrosaldosmes" TO DETALLE;
GRANT SELECT ON "cap$maestrotitular" TO DETALLE;
GRANT SELECT ON "col$colgarantias" TO DETALLE;
GRANT SELECT ON "col$colocacion" TO DETALLE;
GRANT SELECT ON "col$colocacionabogado" TO DETALLE;
GRANT SELECT ON CON$SALDOSINICIALES TO DETALLE;
GRANT SELECT ON "gen$agencia" TO DETALLE;
GRANT SELECT, UPDATE, DELETE, INSERT ON "gen$detalles" TO DETALLE;
GRANT SELECT ON "gen$empleado" TO DETALLE;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO DETALLE;
GRANT SELECT ON "gen$persona" TO DETALLE;
GRANT SELECT ON "gen$plantillaobs" TO DETALLE;
GRANT SELECT ON "gen$tiposidentificacion" TO DETALLE;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO DETALLE;
GRANT SELECT ON "sipla$sdn" TO DETALLE;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO DETALLE;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO DETALLE;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO DETALLE;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO DETALLE;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO DETALLE;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO DETALLE;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO DETALLE;
GRANT EXECUTE ON PROCEDURE SALDO_MOVICOL TO DETALLE;
GRANT EXECUTE ON PROCEDURE SALDO_MOVIMIENTO TO DETALLE;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO DETALLE;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO DETALLE;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO DETALLE;
GRANT EXECUTE ON PROCEDURE SP_SALDOS_CUENTAS_NOMBRES TO DETALLE;
GRANT EXECUTE ON PROCEDURE SUMATORIA_CAPTACIONES TO DETALLE;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO DETALLE;
GRANT SELECT ON "cap$extracto" TO DETALLES;
GRANT SELECT ON "cap$maestro" TO DETALLES;
GRANT SELECT ON "cap$maestrosaldo" TO DETALLES;
GRANT SELECT ON "cap$maestrosaldoinicial" TO DETALLES;
GRANT SELECT ON "cap$maestrosaldosmes" TO DETALLES;
GRANT SELECT ON "cap$maestrotitular" TO DETALLES;
GRANT SELECT ON "cap$tipocaptacion" TO DETALLES;
GRANT SELECT ON "cap$tiposestado" TO DETALLES;
GRANT SELECT ON "cap$tipostitulares" TO DETALLES;
GRANT SELECT ON "col$colgarantias" TO DETALLES;
GRANT SELECT ON "col$colocacion" TO DETALLES;
GRANT SELECT ON "col$colocacionabogado" TO DETALLES;
GRANT SELECT ON "col$costas" TO DETALLES;
GRANT SELECT ON "col$estado" TO DETALLES;
GRANT SELECT ON "col$extracto" TO DETALLES;
GRANT SELECT ON CON$SALDOSINICIALES TO DETALLES;
GRANT SELECT ON "gen$agencia" TO DETALLES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$detalles" TO DETALLES;
GRANT SELECT ON "gen$empleado" TO DETALLES;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO DETALLES;
GRANT SELECT ON "gen$persona" TO DETALLES;
GRANT SELECT ON "gen$plantillaobs" TO DETALLES;
GRANT SELECT ON "gen$tiposestadopersona" TO DETALLES;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposidentificacion" TO DETALLES;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO DETALLES;
GRANT SELECT ON "sipla$sdn" TO DETALLES;
GRANT EXECUTE ON PROCEDURE ACTUALIZAR TO DETALLES;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO DETALLES;
GRANT EXECUTE ON PROCEDURE BUSCAR_APORTES TO DETALLES;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA TO DETALLES;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA_N1 TO DETALLES;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO DETALLES;
GRANT EXECUTE ON PROCEDURE CUENTAS_DIAN TO DETALLES;
GRANT EXECUTE ON PROCEDURE DIAN_CUENTASABIERTAS TO DETALLES;
GRANT EXECUTE ON PROCEDURE DIAN_NOTASCREDITO TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0000 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0001_L TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0003 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0004 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0005 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0006 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0007 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0007_L TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0015 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0017 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0018 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_COL_0002 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_COL_003 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_COL_004 TO DETALLES;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO DETALLES;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO DETALLES;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO DETALLES;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO DETALLES;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO DETALLES;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO DETALLES;
GRANT EXECUTE ON PROCEDURE SALDO_MOVICOL TO DETALLES;
GRANT EXECUTE ON PROCEDURE SALDO_MOVIMIENTO TO DETALLES;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO DETALLES;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO DETALLES;
GRANT EXECUTE ON PROCEDURE "SP_GEN_""col$tasafijas""_ID" TO DETALLES;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO DETALLES;
GRANT EXECUTE ON PROCEDURE SP_SALDOS_CUENTAS_NOMBRES TO DETALLES;
GRANT EXECUTE ON PROCEDURE SUMATORIA_CAPTACIONES TO DETALLES;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO DETALLES;
GRANT GERENCIA TO DMENESES;
GRANT TESORERIA TO DMENESES;
GRANT GERENCIA TO ECARRENO;
GRANT CAPTACIONES TO ESANJUAN;
GRANT CREDITOS TO ESANJUAN;
GRANT GERENCIA TO ESANJUAN;
GRANT SELECT ON CON$PUC TO ESTADO_IYG_CONSOLIDADO;
GRANT SELECT ON CON$SALDOSCUENTA TO ESTADO_IYG_CONSOLIDADO;
GRANT SELECT ON CON$SALDOSINICIALES TO ESTADO_IYG_CONSOLIDADO;
GRANT SELECT ON IBE$PARAMS_HISTORY TO FUNDACION;
GRANT SELECT ON IBE$REPORTS TO FUNDACION;
GRANT SELECT ON MANUAL_LOG TO FUNDACION;
GRANT SELECT ON RDB$CHARACTER_SETS TO FUNDACION;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO FUNDACION;
GRANT SELECT ON RDB$COLLATIONS TO FUNDACION;
GRANT SELECT ON RDB$DATABASE TO FUNDACION;
GRANT SELECT ON RDB$DEPENDENCIES TO FUNDACION;
GRANT SELECT ON RDB$EXCEPTIONS TO FUNDACION;
GRANT SELECT ON RDB$FIELDS TO FUNDACION;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO FUNDACION;
GRANT SELECT ON RDB$FILES TO FUNDACION;
GRANT SELECT ON RDB$FILTERS TO FUNDACION;
GRANT SELECT ON RDB$FORMATS TO FUNDACION;
GRANT SELECT ON RDB$FUNCTIONS TO FUNDACION;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO FUNDACION;
GRANT SELECT ON RDB$GENERATORS TO FUNDACION;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO FUNDACION;
GRANT SELECT ON RDB$INDICES TO FUNDACION;
GRANT SELECT ON RDB$LOG_FILES TO FUNDACION;
GRANT SELECT ON RDB$PAGES TO FUNDACION;
GRANT SELECT ON RDB$PROCEDURES TO FUNDACION;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO FUNDACION;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO FUNDACION;
GRANT SELECT ON RDB$RELATIONS TO FUNDACION;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO FUNDACION;
GRANT SELECT ON RDB$RELATION_FIELDS TO FUNDACION;
GRANT SELECT ON RDB$ROLES TO FUNDACION;
GRANT SELECT ON RDB$SECURITY_CLASSES TO FUNDACION;
GRANT SELECT ON RDB$TRANSACTIONS TO FUNDACION;
GRANT SELECT ON RDB$TRIGGERS TO FUNDACION;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO FUNDACION;
GRANT SELECT ON RDB$TYPES TO FUNDACION;
GRANT SELECT ON RDB$USER_PRIVILEGES TO FUNDACION;
GRANT SELECT ON RDB$VIEW_RELATIONS TO FUNDACION;
GRANT SELECT ON REPL_LOG TO FUNDACION;
GRANT SELECT ON REPL_SEPARATOR TO FUNDACION;
GRANT SELECT ON "caj$arqueos" TO FUNDACION;
GRANT SELECT ON CAJ$CAJAS TO FUNDACION;
GRANT SELECT ON "CAJ$CAJAShistoria" TO FUNDACION;
GRANT SELECT ON "caj$cheques" TO FUNDACION;
GRANT SELECT ON "caj$cierres" TO FUNDACION;
GRANT SELECT ON CAJ$CONADICIONAL TO FUNDACION;
GRANT SELECT ON "caj$devolucionarqueo" TO FUNDACION;
GRANT SELECT ON "caj$devolucioncolarqueo" TO FUNDACION;
GRANT SELECT ON "caj$devolucionrecaudosarqueo" TO FUNDACION;
GRANT SELECT ON "caj$estados" TO FUNDACION;
GRANT SELECT ON "caj$movimiento" TO FUNDACION;
GRANT SELECT ON "caj$movimientoarqueo" TO FUNDACION;
GRANT SELECT ON "caj$movimientocol" TO FUNDACION;
GRANT SELECT ON "caj$movimientocolarqueo" TO FUNDACION;
GRANT SELECT ON CAJ$ORIGEN TO FUNDACION;
GRANT SELECT ON "caj$recaudos" TO FUNDACION;
GRANT SELECT ON "caj$recaudosarqueo" TO FUNDACION;
GRANT SELECT ON "caj$tiposmovimiento" TO FUNDACION;
GRANT SELECT ON "caj$tmpcheques" TO FUNDACION;
GRANT SELECT ON "cap$canje" TO FUNDACION;
GRANT SELECT ON CAP$CODIGOSCAUSACION TO FUNDACION;
GRANT SELECT ON CAP$CONTABLE TO FUNDACION;
GRANT SELECT ON "cap$diasliquidados" TO FUNDACION;
GRANT SELECT ON "cap$diasprorrogados" TO FUNDACION;
GRANT SELECT ON "cap$embargo" TO FUNDACION;
GRANT SELECT ON "cap$extracto" TO FUNDACION;
GRANT SELECT ON "cap$fechaspagasinteres" TO FUNDACION;
GRANT SELECT ON "cap$historiaprorrogas" TO FUNDACION;
GRANT SELECT ON "cap$libretas" TO FUNDACION;
GRANT SELECT ON "cap$libretashistoria" TO FUNDACION;
GRANT SELECT ON "cap$libretasusada" TO FUNDACION;
GRANT SELECT ON "cap$maestro" TO FUNDACION;
GRANT SELECT ON "cap$maestroautorizado" TO FUNDACION;
GRANT SELECT ON "cap$maestrobeneficiario" TO FUNDACION;
GRANT SELECT ON "cap$maestrosaldo" TO FUNDACION;
GRANT SELECT ON "cap$maestrosaldoinicial" TO FUNDACION;
GRANT SELECT ON "cap$maestrosaldosmes" TO FUNDACION;
GRANT SELECT ON "cap$maestrotitular" TO FUNDACION;
GRANT SELECT ON "cap$obsestado" TO FUNDACION;
GRANT SELECT ON "cap$rangos" TO FUNDACION;
GRANT SELECT ON "cap$revalorizacion" TO FUNDACION;
GRANT SELECT ON "cap$revalorizaciontmp" TO FUNDACION;
GRANT SELECT ON "cap$tablaliquidacion" TO FUNDACION;
GRANT SELECT ON "cap$tablaliquidacioncon" TO FUNDACION;
GRANT SELECT ON "cap$tipocaptacion" TO FUNDACION;
GRANT SELECT ON "cap$tiposestado" TO FUNDACION;
GRANT SELECT ON "cap$tiposforma" TO FUNDACION;
GRANT SELECT ON "cap$tiposmovimiento" TO FUNDACION;
GRANT SELECT ON "cap$tiposplancontractual" TO FUNDACION;
GRANT SELECT ON "cap$tipostitulares" TO FUNDACION;
GRANT SELECT ON "col$adjetivos" TO FUNDACION;
GRANT SELECT ON "col$barridoCartera" TO FUNDACION;
GRANT SELECT ON "col$barridoahorroscartera" TO FUNDACION;
GRANT SELECT ON "col$carteraf" TO FUNDACION;
GRANT SELECT ON "col$categoria" TO FUNDACION;
GRANT SELECT ON "col$causaciones" TO FUNDACION;
GRANT SELECT ON "col$causacionescontrol" TO FUNDACION;
GRANT SELECT ON "col$causacionestmp" TO FUNDACION;
GRANT SELECT ON "col$clasificacion" TO FUNDACION;
GRANT SELECT ON COL$CODIGOSPUC TO FUNDACION;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO FUNDACION;
GRANT SELECT ON "col$colgarantias" TO FUNDACION;
GRANT SELECT ON "col$colgarantiasreal" TO FUNDACION;
GRANT SELECT ON "col$colocacion" TO FUNDACION;
GRANT SELECT ON "col$colocacionabogado" TO FUNDACION;
GRANT SELECT ON "col$concol" TO FUNDACION;
GRANT SELECT ON "col$controlcobro" TO FUNDACION;
GRANT SELECT ON "col$costas" TO FUNDACION;
GRANT SELECT ON "col$descuentos" TO FUNDACION;
GRANT SELECT ON "col$enteaprobador" TO FUNDACION;
GRANT SELECT ON "col$estado" TO FUNDACION;
GRANT SELECT ON "col$extracto" TO FUNDACION;
GRANT SELECT ON "col$extractobarridotmp" TO FUNDACION;
GRANT SELECT ON "col$extractodet" TO FUNDACION;
GRANT SELECT ON "col$garantia" TO FUNDACION;
GRANT SELECT ON "col$informemora" TO FUNDACION;
GRANT SELECT ON "col$inversion" TO FUNDACION;
GRANT SELECT ON "col$lineas" TO FUNDACION;
GRANT SELECT ON "col$novedades" TO FUNDACION;
GRANT SELECT ON "col$porccausacion" TO FUNDACION;
GRANT SELECT ON "col$prueba" TO FUNDACION;
GRANT SELECT ON "col$respaldo" TO FUNDACION;
GRANT SELECT ON "col$tablaliquidacion" TO FUNDACION;
GRANT SELECT ON "col$tablaliquidaciontmp" TO FUNDACION;
GRANT SELECT ON "col$tasadtf" TO FUNDACION;
GRANT SELECT ON "col$tasafijas" TO FUNDACION;
GRANT SELECT ON "col$tasasvariables" TO FUNDACION;
GRANT SELECT ON "col$tiposcuota" TO FUNDACION;
GRANT SELECT ON CON$AUXILIAR TO FUNDACION;
GRANT SELECT ON "con$captacion" TO FUNDACION;
GRANT SELECT ON "con$centrocosto" TO FUNDACION;
GRANT SELECT ON "con$colocacion" TO FUNDACION;
GRANT SELECT ON "con$colocacion1" TO FUNDACION;
GRANT SELECT ON CON$COMPROBANTE TO FUNDACION;
GRANT SELECT ON "con$comprobantecsc" TO FUNDACION;
GRANT SELECT ON CON$ERRORCIERRECOMP TO FUNDACION;
GRANT SELECT ON "con$fechasplanillas" TO FUNDACION;
GRANT SELECT ON "con$informes" TO FUNDACION;
GRANT SELECT ON CON$PLANILLARESUMEN TO FUNDACION;
GRANT SELECT ON CON$PUC TO FUNDACION;
GRANT SELECT ON "CON$PUCcon" TO FUNDACION;
GRANT SELECT ON "CON$PUCinforme" TO FUNDACION;
GRANT SELECT ON CON$RETENCION TO FUNDACION;
GRANT SELECT ON CON$SALDOSCUENTA TO FUNDACION;
GRANT SELECT ON CON$TIPOCOMPROBANTE TO FUNDACION;
GRANT SELECT ON "errorestabla" TO FUNDACION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$ayudas" TO FUNDACION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$consolayudas" TO FUNDACION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$diascerrados" TO FUNDACION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$juveniles" TO FUNDACION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$movimiento" TO FUNDACION;
GRANT SELECT ON "gen$agencia" TO FUNDACION;
GRANT SELECT ON "gen$bancos" TO FUNDACION;
GRANT SELECT, UPDATE, REFERENCES ON "gen$consecutivos" TO FUNDACION;
GRANT SELECT ON "gen$consecutivostmp" TO FUNDACION;
GRANT SELECT ON "gen$denominaciones" TO FUNDACION;
GRANT SELECT ON "gen$direccion" TO FUNDACION;
GRANT SELECT ON "gen$empleado" TO FUNDACION;
GRANT SELECT ON "gen$minimos" TO FUNDACION;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO FUNDACION;
GRANT SELECT ON "gen$permisos" TO FUNDACION;
GRANT SELECT, UPDATE ON "gen$persona" TO FUNDACION;
GRANT SELECT ON "gen$plantillaobs" TO FUNDACION;
GRANT SELECT ON "gen$referencias" TO FUNDACION;
GRANT SELECT ON "gen$tiposciiu" TO FUNDACION;
GRANT SELECT ON "gen$tiposclaseciiu" TO FUNDACION;
GRANT SELECT ON "gen$tiposdireccion" TO FUNDACION;
GRANT SELECT ON "gen$tiposestadocivil" TO FUNDACION;
GRANT SELECT ON "gen$tiposestadopersona" TO FUNDACION;
GRANT SELECT ON "gen$tiposidentificacion" TO FUNDACION;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO FUNDACION;
GRANT SELECT ON "gen$tiposparentesco" TO FUNDACION;
GRANT SELECT ON "gen$tipospersona" TO FUNDACION;
GRANT SELECT ON "gen$tiposreferencia" TO FUNDACION;
GRANT SELECT ON "gen$tiposrelacion" TO FUNDACION;
GRANT SELECT ON "gen$valorretefuente" TO FUNDACION;
GRANT SELECT ON "sipla$sdn" TO FUNDACION;
GRANT SELECT ON "tes$cheques" TO FUNDACION;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO FUNDACION;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA TO FUNDACION;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA_N1 TO FUNDACION;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO FUNDACION;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO FUNDACION;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO FUNDACION;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO FUNDACION;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO FUNDACION;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO FUNDACION;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO FUNDACION;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO FUNDACION;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO FUNDACION;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO FUNDACION;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO FUNDACION;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO FUNDACION;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO FUNDACION;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO FUNDACION;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO FUNDACION;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO FUNDACION;
GRANT SELECT, REFERENCES ON IBE$PARAMS_HISTORY TO GERENCIA;
GRANT SELECT, REFERENCES ON IBE$REPORTS TO GERENCIA;
GRANT SELECT ON RDB$CHARACTER_SETS TO GERENCIA;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO GERENCIA;
GRANT SELECT ON RDB$COLLATIONS TO GERENCIA;
GRANT SELECT ON RDB$DATABASE TO GERENCIA;
GRANT SELECT ON RDB$DEPENDENCIES TO GERENCIA;
GRANT SELECT ON RDB$EXCEPTIONS TO GERENCIA;
GRANT SELECT ON RDB$FIELDS TO GERENCIA;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO GERENCIA;
GRANT SELECT ON RDB$FILES TO GERENCIA;
GRANT SELECT ON RDB$FILTERS TO GERENCIA;
GRANT SELECT ON RDB$FORMATS TO GERENCIA;
GRANT SELECT ON RDB$FUNCTIONS TO GERENCIA;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO GERENCIA;
GRANT SELECT ON RDB$GENERATORS TO GERENCIA;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO GERENCIA;
GRANT SELECT ON RDB$INDICES TO GERENCIA;
GRANT SELECT ON RDB$LOG_FILES TO GERENCIA;
GRANT SELECT ON RDB$PAGES TO GERENCIA;
GRANT SELECT ON RDB$PROCEDURES TO GERENCIA;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO GERENCIA;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO GERENCIA;
GRANT SELECT ON RDB$RELATIONS TO GERENCIA;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO GERENCIA;
GRANT SELECT ON RDB$RELATION_FIELDS TO GERENCIA;
GRANT SELECT ON RDB$ROLES TO GERENCIA;
GRANT SELECT ON RDB$SECURITY_CLASSES TO GERENCIA;
GRANT SELECT ON RDB$TRANSACTIONS TO GERENCIA;
GRANT SELECT ON RDB$TRIGGERS TO GERENCIA;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO GERENCIA;
GRANT SELECT ON RDB$TYPES TO GERENCIA;
GRANT SELECT ON RDB$USER_PRIVILEGES TO GERENCIA;
GRANT SELECT ON RDB$VIEW_RELATIONS TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$arqueos" TO GERENCIA;
GRANT SELECT, REFERENCES ON CAJ$CAJAS TO GERENCIA;
GRANT SELECT, REFERENCES ON "CAJ$CAJAShistoria" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$cheques" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$cierres" TO GERENCIA;
GRANT SELECT, REFERENCES ON CAJ$CONADICIONAL TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$devolucionarqueo" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$devolucioncolarqueo" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$devolucionrecaudosarqueo" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$estados" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$movimiento" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$movimientoarqueo" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$movimientocol" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$movimientocolarqueo" TO GERENCIA;
GRANT SELECT, REFERENCES ON CAJ$ORIGEN TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$recaudos" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$recaudosarqueo" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$tiposmovimiento" TO GERENCIA;
GRANT SELECT, REFERENCES ON "caj$tmpcheques" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$canje" TO GERENCIA;
GRANT SELECT, REFERENCES ON CAP$CONTABLE TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$diasliquidados" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$diasprorrogados" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$embargo" TO GERENCIA;
GRANT SELECT, INSERT, REFERENCES ON "cap$extracto" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$fechaspagasinteres" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$historiaprorrogas" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$libretas" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$libretashistoria" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$libretasusada" TO GERENCIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestro" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$maestroautorizado" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$maestrobeneficiario" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$maestrosaldo" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$maestrosaldoinicial" TO GERENCIA;
GRANT SELECT, UPDATE, REFERENCES ON "cap$maestrosaldosmes" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$maestrotitular" TO GERENCIA;
GRANT SELECT ON "cap$obsestado" TO GERENCIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$rangos" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$tablaliquidacion" TO GERENCIA;
GRANT SELECT ON "cap$tablaliquidacioncon" TO GERENCIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tipocaptacion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$tiposestado" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$tiposforma" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$tiposmovimiento" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$tiposplancontractual" TO GERENCIA;
GRANT SELECT, REFERENCES ON "cap$tipostitulares" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$categoria" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$clasificacion" TO GERENCIA;
GRANT SELECT, REFERENCES ON COL$CODIGOSPUC TO GERENCIA;
GRANT SELECT, REFERENCES ON COL$CODIGOSPUCBASICOS TO GERENCIA;
GRANT SELECT, DELETE, REFERENCES ON "col$colgarantias" TO GERENCIA;
GRANT SELECT, DELETE, REFERENCES ON "col$colgarantiasreal" TO GERENCIA;
GRANT SELECT, UPDATE, DELETE, REFERENCES ON "col$colocacion" TO GERENCIA;
GRANT SELECT ON "col$colocacionabogado" TO GERENCIA;
GRANT SELECT, UPDATE, DELETE, REFERENCES ON "col$concol" TO GERENCIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$controlcobro" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$costas" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$descuentos" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$enteaprobador" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$estado" TO GERENCIA;
GRANT SELECT ON "col$estadosolicitud" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$extracto" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$extractodet" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$garantia" TO GERENCIA;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$inversion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$lineas" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$respaldo" TO GERENCIA;
GRANT SELECT ON "col$solicitud" TO GERENCIA;
GRANT SELECT, DELETE, REFERENCES ON "col$tablaliquidacion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$tablaliquidaciontmp" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$tasadtf" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$tasafijas" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$tasasvariables" TO GERENCIA;
GRANT SELECT, REFERENCES ON "col$tiposcuota" TO GERENCIA;
GRANT SELECT, INSERT, REFERENCES ON CON$AUXILIAR TO GERENCIA;
GRANT SELECT, REFERENCES ON "con$captacion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "con$centrocosto" TO GERENCIA;
GRANT SELECT, REFERENCES ON "con$colocacion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "con$colocacion1" TO GERENCIA;
GRANT SELECT, INSERT, REFERENCES ON CON$COMPROBANTE TO GERENCIA;
GRANT SELECT, REFERENCES ON "con$comprobantecsc" TO GERENCIA;
GRANT SELECT, REFERENCES ON CON$ERRORCIERRECOMP TO GERENCIA;
GRANT SELECT, REFERENCES ON "con$informes" TO GERENCIA;
GRANT SELECT, REFERENCES ON CON$PUC TO GERENCIA;
GRANT SELECT, REFERENCES ON CON$RETENCION TO GERENCIA;
GRANT SELECT, REFERENCES ON CON$SALDOSCUENTA TO GERENCIA;
GRANT SELECT ON CON$SALDOSINICIALES TO GERENCIA;
GRANT SELECT, REFERENCES ON CON$TIPOCOMPROBANTE TO GERENCIA;
GRANT SELECT, REFERENCES ON "errorestabla" TO GERENCIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$agencia" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$bancos" TO GERENCIA;
GRANT SELECT, UPDATE, REFERENCES ON "gen$consecutivos" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$denominaciones" TO GERENCIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "gen$detalles" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$direccion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$empleado" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$minimos" TO GERENCIA;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO GERENCIA;
GRANT SELECT ON "gen$permisos" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$persona" TO GERENCIA;
GRANT SELECT ON "gen$plantillaobs" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$referencias" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposciiu" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposclaseciiu" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposdireccion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposestadocivil" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposestadopersona" TO GERENCIA;
GRANT SELECT ON "gen$tiposidentificacion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposparentesco" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tipospersona" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposreferencia" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$tiposrelacion" TO GERENCIA;
GRANT SELECT, REFERENCES ON "gen$valorretefuente" TO GERENCIA;
GRANT SELECT ON "sipla$sdn" TO GERENCIA;
GRANT SELECT, REFERENCES ON "tes$cheques" TO GERENCIA;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO GERENCIA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO GERENCIA;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO GERENCIA;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO GERENCIA;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO GERENCIA;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO GERENCIA;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO GERENCIA;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO GERENCIA;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO GERENCIA;
GRANT CARTERA TO HVERGEL;
GRANT GERENCIA TO HVERGEL;
GRANT CAPTACIONES TO IIBANEZ;
GRANT GERENCIA TO IIBANEZ;
GRANT SELECT ON "cap$maestro" TO JCHINCHILLA;
GRANT SELECT ON "cap$maestroautorizado" TO JCHINCHILLA;
GRANT SELECT ON "cap$maestrobeneficiario" TO JCHINCHILLA;
GRANT SELECT ON "cap$maestrosaldo" TO JCHINCHILLA;
GRANT SELECT ON "cap$maestrosaldoinicial" TO JCHINCHILLA;
GRANT SELECT ON "cap$maestrosaldosmes" TO JCHINCHILLA;
GRANT SELECT ON "cap$maestrotitular" TO JCHINCHILLA;
GRANT SELECT ON "cap$tipocaptacion" TO JCHINCHILLA;
GRANT SELECT ON "cap$tiposestado" TO JCHINCHILLA;
GRANT SELECT ON "cap$tiposforma" TO JCHINCHILLA;
GRANT SELECT ON "cap$tiposplancontractual" TO JCHINCHILLA;
GRANT SELECT ON "col$categoria" TO JCHINCHILLA;
GRANT SELECT ON "col$clasificacion" TO JCHINCHILLA;
GRANT SELECT ON COL$CODIGOSPUC TO JCHINCHILLA;
GRANT SELECT, UPDATE ON COL$CODIGOSPUCBASICOS TO JCHINCHILLA;
GRANT SELECT ON "col$colgarantias" TO JCHINCHILLA;
GRANT SELECT ON "col$colgarantiasreal" TO JCHINCHILLA;
GRANT SELECT, UPDATE, INSERT ON "col$colocacion" TO JCHINCHILLA;
GRANT SELECT ON "col$concol" TO JCHINCHILLA;
GRANT SELECT, UPDATE, INSERT ON "col$controlcobro" TO JCHINCHILLA;
GRANT SELECT, UPDATE, INSERT ON "col$costas" TO JCHINCHILLA;
GRANT SELECT ON "col$descuentos" TO JCHINCHILLA;
GRANT SELECT ON "col$enteaprobador" TO JCHINCHILLA;
GRANT SELECT ON "col$estado" TO JCHINCHILLA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$extracto" TO JCHINCHILLA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$extractodet" TO JCHINCHILLA;
GRANT SELECT ON "col$garantia" TO JCHINCHILLA;
GRANT SELECT ON "col$inversion" TO JCHINCHILLA;
GRANT SELECT ON "col$lineas" TO JCHINCHILLA;
GRANT SELECT ON "col$respaldo" TO JCHINCHILLA;
GRANT SELECT, UPDATE, INSERT ON "col$tablaliquidacion" TO JCHINCHILLA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$tablaliquidaciontmp" TO JCHINCHILLA;
GRANT SELECT ON "col$tasadtf" TO JCHINCHILLA;
GRANT SELECT ON "col$tasafijas" TO JCHINCHILLA;
GRANT SELECT ON "col$tiposcuota" TO JCHINCHILLA;
GRANT SELECT ON CON$PUC TO JCHINCHILLA;
GRANT SELECT ON "gen$agencia" TO JCHINCHILLA;
GRANT SELECT ON "gen$direccion" TO JCHINCHILLA;
GRANT SELECT ON "gen$empleado" TO JCHINCHILLA;
GRANT SELECT ON "gen$observaciones" TO JCHINCHILLA;
GRANT SELECT ON "gen$persona" TO JCHINCHILLA;
GRANT SELECT ON "gen$referencias" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposciiu" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposclaseciiu" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposdireccion" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposestadocivil" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposestadopersona" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposidentificacion" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposparentesco" TO JCHINCHILLA;
GRANT SELECT ON "gen$tipospersona" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposreferencia" TO JCHINCHILLA;
GRANT SELECT ON "gen$tiposrelacion" TO JCHINCHILLA;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO JCHINCHILLA;
GRANT CARTERA TO JCHINCHILLA;
GRANT GERENCIA TO JCHINCHILLA;
GRANT CARTERA TO JCONTRERAS;
GRANT CREDITOS TO JCONTRERAS;
GRANT GERENCIA TO JCONTRERAS;
GRANT ANALISTA TO JFRANCO;
GRANT CARTERA TO JFRANCO;
GRANT GERENCIA TO JFRANCO;
GRANT CAJAS TO JPAEZ;
GRANT GERENCIA TO JPAEZ;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$AUXILIAR TO JSANCHEZ;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$COMPROBANTE TO JSANCHEZ;
GRANT SELECT ON CON$PUC TO JSANCHEZ;
GRANT SELECT ON CON$TIPOCOMPROBANTE TO JSANCHEZ;
GRANT SELECT, UPDATE ON "gen$consecutivos" TO JSANCHEZ;
GRANT SELECT ON "gen$empleado" TO JSANCHEZ;
GRANT AUXILIAR TO JSANCHEZ;
GRANT CONTABILIDAD_A TO JSANCHEZ;
GRANT GERENCIA TO JSANCHEZ;
GRANT VISADOR TO JSANCHEZ;
GRANT CONTABILIDAD_A TO JSANTIAGO;
GRANT GERENCIA TO JSANTIAGO;
GRANT VISADOR TO JSANTIAGO;
GRANT SELECT ON "cap$causacioncdattmp" TO LDUARTE;
GRANT SELECT ON CON$PUC TO LDUARTE;
GRANT ADMINISTRADOR TO LDUARTE;
GRANT ANALISTA TO LDUARTE;
GRANT AUXILIAR TO LDUARTE;
GRANT CAJAS TO LDUARTE;
GRANT CAPTACIONES TO LDUARTE;
GRANT CARTERA TO LDUARTE;
GRANT CONTABILIDAD_A TO LDUARTE;
GRANT CONTABILIDAD_C TO LDUARTE;
GRANT CREDITOS TO LDUARTE;
GRANT DETALLE TO LDUARTE;
GRANT DETALLES TO LDUARTE;
GRANT FUNDACION TO LDUARTE;
GRANT GERENCIA TO LDUARTE;
GRANT REPLICA TO LDUARTE;
GRANT REVISOR TO LDUARTE;
GRANT SIPLA TO LDUARTE;
GRANT TESORERIA TO LDUARTE;
GRANT VISADOR TO LDUARTE;
GRANT CREDITOS TO LIBANEZ;
GRANT GERENCIA TO LIBANEZ;
GRANT CREDITOS TO LMANOSALVA;
GRANT GERENCIA TO LMANOSALVA;
GRANT FUNDACION TO LSANCHEZ;
GRANT ANALISTA TO MALVAREZ;
GRANT GERENCIA TO MALVAREZ;
GRANT CAPTACIONES TO MCARRASCAL;
GRANT CREDITOS TO MPEREZ;
GRANT GERENCIA TO MPEREZ;
GRANT VISADOR TO MPEREZ;
GRANT FUNDACION TO MSPEREZ;
GRANT CAPTACIONES TO OCONTRERAS;
GRANT GERENCIA TO OCONTRERAS;
GRANT SELECT ON RDB$ROLES TO PUBLIC;
GRANT SELECT ON "col$colocacion" TO P_COL_004;
GRANT SELECT ON "col$estado" TO P_COL_004;
GRANT SELECT ON "col$tasasvariables" TO P_COL_004;
GRANT SELECT ON "col$tiposcuota" TO P_COL_004;
GRANT REPLICA TO REPL;
GRANT INSERT ON REPL_LOG TO REPL$4_100_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_100_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_100_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_100_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_100_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_100_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_101_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_101_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_101_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_101_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_101_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_101_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_102_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_102_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_102_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_102_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_102_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_102_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_103_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_103_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_103_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_103_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_103_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_103_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_105_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_105_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_105_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_105_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_105_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_105_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_106_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_106_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_106_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_106_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_106_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_106_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_107_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_107_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_107_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_107_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_107_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_107_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_108_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_108_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_108_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_108_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_108_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_108_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_109_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_109_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_109_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_109_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_109_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_109_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_110_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_110_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_110_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_110_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_110_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_110_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_111_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_111_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_111_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_111_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_111_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_111_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_112_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_112_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_112_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_112_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_112_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_112_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_116_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_116_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_116_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_116_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_116_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_116_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_117_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_117_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_117_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_117_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_117_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_117_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_118_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_118_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_118_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_118_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_118_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_118_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_120_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_120_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_120_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_120_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_120_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_120_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_121_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_121_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_121_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_121_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_121_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_121_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_122_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_122_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_122_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_122_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_122_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_122_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_123_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_123_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_123_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_123_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_123_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_123_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_124_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_124_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_124_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_124_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_124_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_124_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_125_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_125_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_125_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_125_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_125_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_125_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_127_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_127_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_127_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_127_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_127_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_127_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_128_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_128_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_128_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_128_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_128_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_128_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_129_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_129_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_129_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_129_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_129_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_129_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_130_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_130_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_130_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_130_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_130_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_130_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_131_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_131_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_131_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_131_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_131_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_131_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_132_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_132_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_132_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_132_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_132_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_132_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_134_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_134_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_134_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_134_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_134_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_134_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_135_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_135_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_135_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_135_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_135_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_135_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_137_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_137_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_137_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_137_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_137_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_137_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_138_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_138_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_138_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_138_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_138_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_138_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_139_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_139_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_139_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_139_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_139_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_139_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_140_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_140_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_140_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_140_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_140_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_140_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_142_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_142_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_142_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_142_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_142_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_142_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_143_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_143_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_143_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_143_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_143_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_143_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_145_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_145_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_145_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_145_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_145_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_145_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_146_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_146_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_146_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_146_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_146_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_146_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_147_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_147_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_147_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_147_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_147_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_147_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_149_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_149_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_149_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_149_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_149_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_149_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_150_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_150_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_150_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_150_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_150_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_150_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_155_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_155_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_155_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_155_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_155_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_155_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_158_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_158_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_158_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_158_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_158_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_158_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_159_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_159_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_159_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_159_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_159_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_159_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_160_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_160_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_160_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_160_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_160_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_160_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_161_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_161_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_161_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_161_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_161_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_161_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_162_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_162_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_162_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_162_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_162_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_162_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_163_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_163_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_163_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_163_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_163_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_163_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_164_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_164_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_164_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_164_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_164_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_164_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_165_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_165_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_165_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_165_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_165_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_165_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_166_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_166_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_166_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_166_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_166_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_166_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_169_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_169_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_169_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_169_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_169_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_169_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_170_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_170_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_170_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_170_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_170_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_170_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_171_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_171_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_171_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_171_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_171_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_171_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_173_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_173_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_173_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_173_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_173_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_173_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_174_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_174_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_174_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_174_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_174_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_174_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_175_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_175_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_175_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_175_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_175_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_175_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_177_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_177_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_177_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_177_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_177_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_177_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_178_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_178_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_178_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_178_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_178_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_178_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_179_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_179_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_179_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_179_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_179_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_179_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_180_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_180_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_180_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_180_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_180_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_180_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_181_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_181_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_181_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_181_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_181_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_181_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_182_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_182_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_182_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_182_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_182_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_182_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_183_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_183_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_183_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_183_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_183_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_183_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_184_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_184_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_184_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_184_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_184_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_184_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_185_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_185_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_185_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_185_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_185_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_185_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_186_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_186_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_186_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_186_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_186_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_186_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_187_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_187_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_187_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_187_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_187_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_187_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_188_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_188_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_188_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_188_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_188_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_188_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_189_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_189_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_189_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_189_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_189_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_189_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_190_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_190_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_190_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_190_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_190_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_190_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_191_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_191_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_191_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_191_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_191_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_191_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_192_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_192_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_192_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_192_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_192_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_192_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_193_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_193_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_193_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_193_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_193_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_193_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_194_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_194_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_194_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_194_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_194_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_194_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_62_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_62_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_62_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_62_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_62_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_62_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_64_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_64_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_64_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_64_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_64_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_64_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_65_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_65_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_65_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_65_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_65_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_65_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_66_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_66_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_66_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_66_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_66_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_66_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_67_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_67_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_67_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_67_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_67_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_67_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_68_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_68_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_68_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_68_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_68_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_68_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_69_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_69_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_69_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_69_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_69_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_69_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_70_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_70_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_70_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_70_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_70_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_70_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_71_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_71_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_71_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_71_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_71_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_71_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_72_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_72_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_72_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_72_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_72_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_72_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_73_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_73_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_73_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_73_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_73_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_73_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_74_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_74_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_74_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_74_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_74_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_74_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_75_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_75_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_75_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_75_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_75_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_75_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_76_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_76_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_76_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_76_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_76_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_76_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_77_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_77_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_77_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_77_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_77_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_77_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_78_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_78_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_78_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_78_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_78_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_78_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_80_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_80_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_80_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_80_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_80_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_80_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_83_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_83_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_83_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_83_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_83_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_83_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_84_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_84_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_84_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_84_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_84_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_84_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_85_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_85_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_85_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_85_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_85_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_85_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_86_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_86_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_86_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_86_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_86_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_86_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_87_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_87_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_87_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_87_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_87_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_87_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_88_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_88_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_88_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_88_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_88_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_88_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_89_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_89_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_89_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_89_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_89_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_89_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_90_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_90_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_90_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_90_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_90_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_90_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_91_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_91_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_91_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_91_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_91_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_91_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_92_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_92_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_92_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_92_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_92_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_92_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_93_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_93_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_93_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_93_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_93_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_93_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_94_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_94_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_94_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_94_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_94_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_94_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_98_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_98_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_98_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_98_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_98_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_98_U_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_99_D_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_99_D_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_99_I_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_99_I_2_3;
GRANT INSERT ON REPL_LOG TO REPL$4_99_U_2_3;
GRANT SELECT ON REPL_SEPARATOR TO REPL$4_99_U_2_3;
GRANT SELECT, REFERENCES ON IBE$PARAMS_HISTORY TO REPLICA;
GRANT SELECT, REFERENCES ON IBE$REPORTS TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$arqueos" TO REPLICA;
GRANT SELECT, REFERENCES ON CAJ$CAJAS TO REPLICA;
GRANT SELECT, REFERENCES ON "CAJ$CAJAShistoria" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$cheques" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$cierres" TO REPLICA;
GRANT SELECT, REFERENCES ON CAJ$CONADICIONAL TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$devolucionarqueo" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$devolucioncolarqueo" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$devolucionrecaudosarqueo" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$estados" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$movimiento" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$movimientoarqueo" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$movimientocol" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$movimientocolarqueo" TO REPLICA;
GRANT SELECT, REFERENCES ON CAJ$ORIGEN TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$recaudos" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$recaudosarqueo" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$tiposmovimiento" TO REPLICA;
GRANT SELECT, REFERENCES ON "caj$tmpcheques" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$canje" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$causacioncdattmp" TO REPLICA;
GRANT SELECT, REFERENCES ON CAP$CODIGOSCAUSACION TO REPLICA;
GRANT SELECT, REFERENCES ON CAP$CONTABLE TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$diasliquidados" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$diasprorrogados" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$embargo" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$extracto" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$fechaspagasinteres" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$historiaprorrogas" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$libretas" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$libretashistoria" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$libretasusada" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$maestro" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$maestroautorizado" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$maestrobeneficiario" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$maestrosaldo" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$maestrosaldoinicial" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$maestrosaldosmes" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$maestrotitular" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$obsestado" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$rangos" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$revalorizacion" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$revalorizaciontmp" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$tablaliquidacion" TO REPLICA;
GRANT SELECT ON "cap$tablaliquidacioncon" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$tipocaptacion" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$tiposestado" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$tiposforma" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$tiposmovimiento" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$tiposplancontractual" TO REPLICA;
GRANT SELECT, REFERENCES ON "cap$tipostitulares" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$adjetivos" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$barridoCartera" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$barridoahorroscartera" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$carteraf" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$categoria" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$causaciones" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$causacionescontrol" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$causacionestmp" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$clasificacion" TO REPLICA;
GRANT SELECT, REFERENCES ON COL$CODIGOSPUC TO REPLICA;
GRANT SELECT, REFERENCES ON COL$CODIGOSPUCBASICOS TO REPLICA;
GRANT SELECT, REFERENCES ON "col$colgarantias" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$colgarantiasreal" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$colocacion" TO REPLICA;
GRANT SELECT ON "col$colocacionabogado" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$concol" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$controlcobro" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$costas" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$descuentos" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$enteaprobador" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$estado" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$extracto" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$extractobarridotmp" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$extractodet" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$garantia" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$informemora" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$inversion" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$lineas" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$novedades" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$porccausacion" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$prueba" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$respaldo" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$tablaliquidacion" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$tablaliquidaciontmp" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$tasadtf" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$tasafijas" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$tasasvariables" TO REPLICA;
GRANT SELECT, REFERENCES ON "col$tiposcuota" TO REPLICA;
GRANT SELECT, REFERENCES ON CON$AUXILIAR TO REPLICA;
GRANT SELECT, REFERENCES ON "con$captacion" TO REPLICA;
GRANT SELECT, REFERENCES ON "con$centrocosto" TO REPLICA;
GRANT SELECT, REFERENCES ON "con$colocacion" TO REPLICA;
GRANT SELECT, REFERENCES ON "con$colocacion1" TO REPLICA;
GRANT SELECT, REFERENCES ON CON$COMPROBANTE TO REPLICA;
GRANT SELECT, REFERENCES ON "con$comprobantecsc" TO REPLICA;
GRANT SELECT, REFERENCES ON CON$ERRORCIERRECOMP TO REPLICA;
GRANT SELECT, REFERENCES ON "con$fechasplanillas" TO REPLICA;
GRANT SELECT, REFERENCES ON "con$informes" TO REPLICA;
GRANT SELECT, REFERENCES ON CON$PLANILLARESUMEN TO REPLICA;
GRANT SELECT, REFERENCES ON CON$PUC TO REPLICA;
GRANT SELECT, REFERENCES ON "CON$PUCcon" TO REPLICA;
GRANT SELECT, REFERENCES ON "CON$PUCinforme" TO REPLICA;
GRANT SELECT, REFERENCES ON CON$RETENCION TO REPLICA;
GRANT SELECT, REFERENCES ON CON$SALDOSCUENTA TO REPLICA;
GRANT SELECT, REFERENCES ON CON$TIPOCOMPROBANTE TO REPLICA;
GRANT SELECT, REFERENCES ON "errorestabla" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$agencia" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$bancos" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$consecutivos" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$consecutivostmp" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$denominaciones" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$direccion" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$empleado" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$minimos" TO REPLICA;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO REPLICA;
GRANT SELECT ON "gen$permisos" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$persona" TO REPLICA;
GRANT SELECT ON "gen$plantillaobs" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$referencias" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposciiu" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposclaseciiu" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposdireccion" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposestadocivil" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposestadopersona" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposidentificacion" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposparentesco" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tipospersona" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposreferencia" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$tiposrelacion" TO REPLICA;
GRANT SELECT, REFERENCES ON "gen$valorretefuente" TO REPLICA;
GRANT SELECT ON "sipla$sdn" TO REPLICA;
GRANT SELECT, REFERENCES ON "tes$cheques" TO REPLICA;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO REPLICA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO REPLICA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO REPLICA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO REPLICA;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO REPLICA;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO REPLICA;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO REPLICA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO REPLICA;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO REPLICA;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO REPLICA;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO REPLICA;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO REPLICA;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO REPLICA;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO REPLICA;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO REPLICA;
GRANT SELECT ON "cap$obsestado" TO REVISOR;
GRANT SELECT ON "cap$tablaliquidacioncon" TO REVISOR;
GRANT SELECT ON "cap$tipocaptacion" TO REVISOR;
GRANT SELECT ON "col$colocacionabogado" TO REVISOR;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO REVISOR;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO REVISOR;
GRANT SELECT ON "gen$permisos" TO REVISOR;
GRANT SELECT ON "gen$plantillaobs" TO REVISOR;
GRANT SELECT ON "gen$tiposidentificacion" TO REVISOR;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO REVISOR;
GRANT SELECT ON "sipla$sdn" TO REVISOR;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO REVISOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO REVISOR;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO REVISOR;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO REVISOR;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO REVISOR;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO REVISOR;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO REVISOR;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO REVISOR;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO REVISOR;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO REVISOR;
GRANT CAJAS TO SCONTRERAS;
GRANT CAPTACION TO SCONTRERAS;
GRANT CARTERA TO SCONTRERAS;
GRANT SELECT ON IBE$PARAMS_HISTORY TO SIPLA;
GRANT SELECT ON IBE$REPORTS TO SIPLA;
GRANT SELECT ON MANUAL_LOG TO SIPLA;
GRANT SELECT ON RDB$CHARACTER_SETS TO SIPLA;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO SIPLA;
GRANT SELECT ON RDB$COLLATIONS TO SIPLA;
GRANT SELECT ON RDB$DATABASE TO SIPLA;
GRANT SELECT ON RDB$DEPENDENCIES TO SIPLA;
GRANT SELECT ON RDB$EXCEPTIONS TO SIPLA;
GRANT SELECT ON RDB$FIELDS TO SIPLA;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO SIPLA;
GRANT SELECT ON RDB$FILES TO SIPLA;
GRANT SELECT ON RDB$FILTERS TO SIPLA;
GRANT SELECT ON RDB$FORMATS TO SIPLA;
GRANT SELECT ON RDB$FUNCTIONS TO SIPLA;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO SIPLA;
GRANT SELECT ON RDB$GENERATORS TO SIPLA;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO SIPLA;
GRANT SELECT ON RDB$INDICES TO SIPLA;
GRANT SELECT ON RDB$LOG_FILES TO SIPLA;
GRANT SELECT ON RDB$PAGES TO SIPLA;
GRANT SELECT ON RDB$PROCEDURES TO SIPLA;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO SIPLA;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO SIPLA;
GRANT SELECT ON RDB$RELATIONS TO SIPLA;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO SIPLA;
GRANT SELECT ON RDB$RELATION_FIELDS TO SIPLA;
GRANT SELECT ON RDB$ROLES TO SIPLA;
GRANT SELECT ON RDB$SECURITY_CLASSES TO SIPLA;
GRANT SELECT ON RDB$TRANSACTIONS TO SIPLA;
GRANT SELECT ON RDB$TRIGGERS TO SIPLA;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO SIPLA;
GRANT SELECT ON RDB$TYPES TO SIPLA;
GRANT SELECT ON RDB$USER_PRIVILEGES TO SIPLA;
GRANT SELECT ON RDB$VIEW_RELATIONS TO SIPLA;
GRANT SELECT ON REPL_LOG TO SIPLA;
GRANT SELECT ON REPL_SEPARATOR TO SIPLA;
GRANT SELECT ON "caj$arqueos" TO SIPLA;
GRANT SELECT ON CAJ$CAJAS TO SIPLA;
GRANT SELECT ON "CAJ$CAJAShistoria" TO SIPLA;
GRANT SELECT ON "caj$cheques" TO SIPLA;
GRANT SELECT ON "caj$cierres" TO SIPLA;
GRANT SELECT ON CAJ$CONADICIONAL TO SIPLA;
GRANT SELECT ON "caj$devolucionarqueo" TO SIPLA;
GRANT SELECT ON "caj$devolucioncolarqueo" TO SIPLA;
GRANT SELECT ON "caj$devolucionrecaudosarqueo" TO SIPLA;
GRANT SELECT ON "caj$estados" TO SIPLA;
GRANT SELECT ON "caj$movimiento" TO SIPLA;
GRANT SELECT ON "caj$movimientoarqueo" TO SIPLA;
GRANT SELECT ON "caj$movimientocol" TO SIPLA;
GRANT SELECT ON "caj$movimientocolarqueo" TO SIPLA;
GRANT SELECT ON CAJ$ORIGEN TO SIPLA;
GRANT SELECT ON "caj$recaudos" TO SIPLA;
GRANT SELECT ON "caj$recaudosarqueo" TO SIPLA;
GRANT SELECT ON "caj$tiposmovimiento" TO SIPLA;
GRANT SELECT ON "caj$tmpcheques" TO SIPLA;
GRANT SELECT ON "cap$canje" TO SIPLA;
GRANT SELECT ON CAP$CONTABLE TO SIPLA;
GRANT SELECT ON "cap$diasliquidados" TO SIPLA;
GRANT SELECT ON "cap$diasprorrogados" TO SIPLA;
GRANT SELECT ON "cap$embargo" TO SIPLA;
GRANT SELECT ON "cap$extracto" TO SIPLA;
GRANT SELECT ON "cap$fechaspagasinteres" TO SIPLA;
GRANT SELECT ON "cap$historiaprorrogas" TO SIPLA;
GRANT SELECT ON "cap$libretas" TO SIPLA;
GRANT SELECT ON "cap$libretashistoria" TO SIPLA;
GRANT SELECT ON "cap$libretasusada" TO SIPLA;
GRANT SELECT ON "cap$maestro" TO SIPLA;
GRANT SELECT ON "cap$maestroautorizado" TO SIPLA;
GRANT SELECT ON "cap$maestrobeneficiario" TO SIPLA;
GRANT SELECT ON "cap$maestrosaldo" TO SIPLA;
GRANT SELECT ON "cap$maestrosaldoinicial" TO SIPLA;
GRANT SELECT ON "cap$maestrosaldosmes" TO SIPLA;
GRANT SELECT ON "cap$maestrotitular" TO SIPLA;
GRANT SELECT ON "cap$rangos" TO SIPLA;
GRANT SELECT ON "cap$tablaliquidacion" TO SIPLA;
GRANT SELECT ON "cap$tipocaptacion" TO SIPLA;
GRANT SELECT ON "cap$tiposestado" TO SIPLA;
GRANT SELECT ON "cap$tiposforma" TO SIPLA;
GRANT SELECT ON "cap$tiposmovimiento" TO SIPLA;
GRANT SELECT ON "cap$tiposplancontractual" TO SIPLA;
GRANT SELECT ON "cap$tipostitulares" TO SIPLA;
GRANT SELECT ON "col$categoria" TO SIPLA;
GRANT SELECT ON "col$clasificacion" TO SIPLA;
GRANT SELECT ON COL$CODIGOSPUC TO SIPLA;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO SIPLA;
GRANT SELECT ON "col$colgarantias" TO SIPLA;
GRANT SELECT ON "col$colgarantiasreal" TO SIPLA;
GRANT SELECT ON "col$colocacion" TO SIPLA;
GRANT SELECT ON "col$colocacionabogado" TO SIPLA;
GRANT SELECT ON "col$concol" TO SIPLA;
GRANT SELECT ON "col$controlcobro" TO SIPLA;
GRANT SELECT ON "col$costas" TO SIPLA;
GRANT SELECT ON "col$descuentos" TO SIPLA;
GRANT SELECT ON "col$enteaprobador" TO SIPLA;
GRANT SELECT ON "col$estado" TO SIPLA;
GRANT SELECT ON "col$estadosolicitud" TO SIPLA;
GRANT SELECT ON "col$extracto" TO SIPLA;
GRANT SELECT ON "col$extractodet" TO SIPLA;
GRANT SELECT ON "col$garantia" TO SIPLA;
GRANT SELECT ON "col$inversion" TO SIPLA;
GRANT SELECT ON "col$lineas" TO SIPLA;
GRANT SELECT ON "col$respaldo" TO SIPLA;
GRANT SELECT ON "col$solicitud" TO SIPLA;
GRANT SELECT ON "col$tablaliquidacion" TO SIPLA;
GRANT SELECT ON "col$tablaliquidaciontmp" TO SIPLA;
GRANT SELECT ON "col$tasadtf" TO SIPLA;
GRANT SELECT ON "col$tasafijas" TO SIPLA;
GRANT SELECT ON "col$tasasvariables" TO SIPLA;
GRANT SELECT ON "col$tiposcuota" TO SIPLA;
GRANT SELECT ON CON$AUXILIAR TO SIPLA;
GRANT SELECT ON "con$captacion" TO SIPLA;
GRANT SELECT ON "con$centrocosto" TO SIPLA;
GRANT SELECT ON "con$colocacion" TO SIPLA;
GRANT SELECT ON "con$colocacion1" TO SIPLA;
GRANT SELECT ON CON$COMPROBANTE TO SIPLA;
GRANT SELECT ON "con$comprobantecsc" TO SIPLA;
GRANT SELECT ON CON$ERRORCIERRECOMP TO SIPLA;
GRANT SELECT ON "con$informes" TO SIPLA;
GRANT SELECT ON CON$PUC TO SIPLA;
GRANT SELECT ON CON$RETENCION TO SIPLA;
GRANT SELECT ON CON$SALDOSCUENTA TO SIPLA;
GRANT SELECT ON CON$SALDOSINICIALES TO SIPLA;
GRANT SELECT ON CON$TIPOCOMPROBANTE TO SIPLA;
GRANT SELECT ON "errorestabla" TO SIPLA;
GRANT SELECT ON "gen$agencia" TO SIPLA;
GRANT SELECT ON "gen$bancos" TO SIPLA;
GRANT SELECT ON "gen$cedulasvip" TO SIPLA;
GRANT SELECT ON "gen$consecutivos" TO SIPLA;
GRANT SELECT ON "gen$consecutivostmp" TO SIPLA;
GRANT SELECT ON "gen$denominaciones" TO SIPLA;
GRANT SELECT ON "gen$detalles" TO SIPLA;
GRANT SELECT ON "gen$direccion" TO SIPLA;
GRANT SELECT ON "gen$empleado" TO SIPLA;
GRANT SELECT ON "gen$minimos" TO SIPLA;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO SIPLA;
GRANT SELECT ON "gen$permisos" TO SIPLA;
GRANT SELECT ON "gen$persona" TO SIPLA;
GRANT SELECT ON "gen$plantillaobs" TO SIPLA;
GRANT SELECT ON "gen$referencias" TO SIPLA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$siplaofac" TO SIPLA WITH GRANT OPTION;
GRANT SELECT ON "gen$tiposciiu" TO SIPLA;
GRANT SELECT ON "gen$tiposclaseciiu" TO SIPLA;
GRANT SELECT ON "gen$tiposdireccion" TO SIPLA;
GRANT SELECT ON "gen$tiposestadocivil" TO SIPLA;
GRANT SELECT ON "gen$tiposestadopersona" TO SIPLA;
GRANT SELECT ON "gen$tiposidentificacion" TO SIPLA;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO SIPLA;
GRANT SELECT ON "gen$tiposparentesco" TO SIPLA;
GRANT SELECT ON "gen$tipospersona" TO SIPLA;
GRANT SELECT ON "gen$tiposreferencia" TO SIPLA;
GRANT SELECT ON "gen$tiposrelacion" TO SIPLA;
GRANT SELECT ON "gen$valorretefuente" TO SIPLA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "sipla$sdn" TO SIPLA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "sipla$tempoae" TO SIPLA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "sipla$url" TO SIPLA;
GRANT SELECT ON "tes$cheques" TO SIPLA;
GRANT EXECUTE ON PROCEDURE ACTUALIZAR TO SIPLA;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO SIPLA;
GRANT EXECUTE ON PROCEDURE BUSCAR_APORTES TO SIPLA;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA TO SIPLA;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA_N1 TO SIPLA;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO SIPLA;
GRANT EXECUTE ON PROCEDURE CUENTAS_DIAN TO SIPLA;
GRANT EXECUTE ON PROCEDURE DIAN_CUENTASABIERTAS TO SIPLA;
GRANT EXECUTE ON PROCEDURE DIAN_NOTASCREDITO TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0001_L TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0003 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0004 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0005 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0006 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0007 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0007_L TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0015 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0017 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0018 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_COL_0002 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_COL_003 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_COL_004 TO SIPLA;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO SIPLA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO SIPLA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO SIPLA;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO SIPLA;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO SIPLA;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO SIPLA;
GRANT EXECUTE ON PROCEDURE SALDO_MOVICOL TO SIPLA;
GRANT EXECUTE ON PROCEDURE SALDO_MOVIMIENTO TO SIPLA;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO SIPLA;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO SIPLA;
GRANT EXECUTE ON PROCEDURE "SP_GEN_""col$tasafijas""_ID" TO SIPLA;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO SIPLA;
GRANT EXECUTE ON PROCEDURE SP_SALDOS_CUENTAS_NOMBRES TO SIPLA;
GRANT EXECUTE ON PROCEDURE SUMATORIA_CAPTACIONES TO SIPLA;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO SIPLA;
GRANT SELECT ON RDB$DATABASE TO SP_FECHA_ACTUAL;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON IBE$PARAMS_HISTORY TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON IBE$REPORTS TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON MANUAL_LOG TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON RDB$ROLES TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON REPL_LOG TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON REPL_SEPARATOR TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$arqueos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$CAJAS TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CAJ$CAJAShistoria" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$cheques" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$cierres" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$CONADICIONAL TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucionarqueo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucioncolarqueo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$devolucionrecaudosarqueo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$estados" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$horarioservicaja" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$maxautorizado" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimiento" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientoarqueo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientocol" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$movimientocolarqueo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAJ$ORIGEN TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$recaudos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$recaudosarqueo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$retiroautorizado" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$tiposmovimiento" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "caj$tmpcheques" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$canje" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdat" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$causacioncdattmp" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAP$CODIGOSCAUSACION TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CAP$CONTABLE TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$diasliquidados" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$diasprorrogados" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$embargo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$extracto" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$fechaspagasinteres" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$historiaprorrogas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretashistoria" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$libretasusada" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestro" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestroautorizado" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrobeneficiario" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldoinicial" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrosaldosmes" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$maestrotitular" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$obsestado" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$rangos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$revalorizacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$revalorizaciontmp" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tablaliquidacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tablaliquidacioncon" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tipocaptacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposestado" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposforma" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposmovimiento" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tiposplancontractual" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "cap$tipostitulares" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$ReporteData" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$ReporteDatatmp" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$adjetivos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$barridoCartera" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$barridoahorroscartera" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$cambioclaves" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$cambiodata" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$carteraf" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$categoria" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causaciones" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causacionescontrol" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$causacionestmp" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$clasificacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON COL$CODIGOSPUC TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON COL$CODIGOSPUCBASICOS TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colgarantias" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colgarantiasreal" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colocacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$colocacionabogado" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$concol" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$controlcobro" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$controlreportedata" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$costas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$descuentos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$enteaprobador" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$erroresdata" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$estado" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$estadosolicitud" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extracto" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extractobarridotmp" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$extractodet" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$garantia" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$hevaluacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$informemora" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$inversion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$lineadescuento" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$lineas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$novedades" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$porccausacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$prueba" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$requisitos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$requisitosmonto" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$respaldo" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$resumen" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$solicitud" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tablaliquidacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tablaliquidaciontmp" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasadtf" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasafijas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasasvariables" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tasavariables" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "col$tiposcuota" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$AUXILIAR TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$CAJADIARIO TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$captacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$centrocosto" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$colocacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$colocacion1" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$COMPROBANTE TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$comprobantecsc" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$CONTROLPLANILLA TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$ERRORCIERRECOMP TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$fechasplanillas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$informes" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$PLANILLARESUMEN TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$PUC TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CON$PUCcon" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "CON$PUCinforme" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$RETENCION TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$SALDOSCUENTA TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$SALDOSINICIALES TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$TIPOCOMPROBANTE TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "dian$cuentas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "dian$cuentasabiertas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "dian$documentos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "dian$notascredito" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "errorestabla" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$ayudas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$consolayudas" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$diascerrados" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$juveniles" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "fun$movimiento" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$abogados" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$agencia" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$bancos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON GEN$BANCOSCONNAL TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$cedulasvip" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON GEN$CODIGOSINGRESOSGASTOS TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$compdescripcion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivostmp" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$denominaciones" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$detalles" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$direccion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$empleado" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$minimos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$observaciones" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$parientesprivilegiados" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$permisos" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$persona" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$plantillaobs" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$privilegiados" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$referencias" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$siplaofac" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposciiu" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposclaseciiu" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposdireccion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposestadocivil" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposestadopersona" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposidentificacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposinteres" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposparentesco" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tipospersona" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposreferencia" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$tiposrelacion" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$valorretefuente" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "sipla$sdn" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "sipla$tempoae" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "sipla$url" TO SYSDBA WITH GRANT OPTION;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "tes$cheques" TO SYSDBA WITH GRANT OPTION;
GRANT EXECUTE ON PROCEDURE ACTUALIZAR TO SYSDBA;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO SYSDBA;
GRANT EXECUTE ON PROCEDURE BALANCE_GENERAL_CONSOLIDADO TO SYSDBA;
GRANT EXECUTE ON PROCEDURE BUSCAR_APORTES TO SYSDBA;
GRANT EXECUTE ON PROCEDURE BUSCAR_RETEFUENTE TO SYSDBA;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA TO SYSDBA;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA_GRAL TO SYSDBA;
GRANT EXECUTE ON PROCEDURE BUSCA_PERSONA_N1 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO SYSDBA;
GRANT EXECUTE ON PROCEDURE CUENTAS_DIAN TO SYSDBA;
GRANT EXECUTE ON PROCEDURE DIAN_CUENTASABIERTAS TO SYSDBA;
GRANT EXECUTE ON PROCEDURE DIAN_NOTASCREDITO TO SYSDBA;
GRANT EXECUTE ON PROCEDURE ESTADO_IYG_CONSOLIDADO TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0001_L TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0003 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0004 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0005 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0006 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0007 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0007_L TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0015 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0017 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0018 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_COL_0002 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_COL_003 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_COL_004 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_COL_MAS36 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS1 TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SALDO_MOVICOL TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SALDO_MOVIMIENTO TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO SYSDBA;
GRANT EXECUTE ON PROCEDURE "SP_GEN_""col$tasafijas""_ID" TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SP_SALDOS_CUENTAS_NOMBRES TO SYSDBA;
GRANT EXECUTE ON PROCEDURE SUMATORIA_CAPTACIONES TO SYSDBA;
GRANT EXECUTE ON PROCEDURE VALOR_AGENCIA TO SYSDBA;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO SYSDBA;
GRANT EXECUTE ON PROCEDURE "gen$abogados_ID_ABOGADO_AutoInc" TO SYSDBA;
GRANT ADMINISTRADOR TO SYSDBA;
GRANT SELECT ON RDB$CHARACTER_SETS TO TESORERIA;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO TESORERIA;
GRANT SELECT ON RDB$COLLATIONS TO TESORERIA;
GRANT SELECT ON RDB$DATABASE TO TESORERIA;
GRANT SELECT ON RDB$DEPENDENCIES TO TESORERIA;
GRANT SELECT ON RDB$EXCEPTIONS TO TESORERIA;
GRANT SELECT ON RDB$FIELDS TO TESORERIA;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO TESORERIA;
GRANT SELECT ON RDB$FILES TO TESORERIA;
GRANT SELECT ON RDB$FILTERS TO TESORERIA;
GRANT SELECT ON RDB$FORMATS TO TESORERIA;
GRANT SELECT ON RDB$FUNCTIONS TO TESORERIA;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO TESORERIA;
GRANT SELECT ON RDB$GENERATORS TO TESORERIA;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO TESORERIA;
GRANT SELECT ON RDB$INDICES TO TESORERIA;
GRANT SELECT ON RDB$LOG_FILES TO TESORERIA;
GRANT SELECT ON RDB$PAGES TO TESORERIA;
GRANT SELECT ON RDB$PROCEDURES TO TESORERIA;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO TESORERIA;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO TESORERIA;
GRANT SELECT ON RDB$RELATIONS TO TESORERIA;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO TESORERIA;
GRANT SELECT ON RDB$RELATION_FIELDS TO TESORERIA;
GRANT SELECT ON RDB$ROLES TO TESORERIA;
GRANT SELECT ON RDB$SECURITY_CLASSES TO TESORERIA;
GRANT SELECT ON RDB$TRANSACTIONS TO TESORERIA;
GRANT SELECT ON RDB$TRIGGERS TO TESORERIA;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO TESORERIA;
GRANT SELECT ON RDB$TYPES TO TESORERIA;
GRANT SELECT ON RDB$USER_PRIVILEGES TO TESORERIA;
GRANT SELECT ON RDB$VIEW_RELATIONS TO TESORERIA;
GRANT SELECT ON CAJ$CAJAS TO TESORERIA;
GRANT SELECT ON "caj$cheques" TO TESORERIA;
GRANT SELECT ON "caj$cierres" TO TESORERIA;
GRANT SELECT ON "caj$movimiento" TO TESORERIA;
GRANT SELECT ON "caj$movimientocol" TO TESORERIA;
GRANT SELECT ON CAJ$ORIGEN TO TESORERIA;
GRANT SELECT ON "caj$recaudos" TO TESORERIA;
GRANT SELECT ON "caj$tiposmovimiento" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$canje" TO TESORERIA;
GRANT SELECT ON "cap$embargo" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$extracto" TO TESORERIA;
GRANT SELECT ON "cap$libretas" TO TESORERIA;
GRANT SELECT ON "cap$libretasusada" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestro" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestroautorizado" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrobeneficiario" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldo" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldoinicial" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrosaldosmes" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "cap$maestrotitular" TO TESORERIA;
GRANT SELECT ON "cap$obsestado" TO TESORERIA;
GRANT SELECT ON "cap$rangos" TO TESORERIA;
GRANT SELECT ON "cap$tablaliquidacion" TO TESORERIA;
GRANT SELECT ON "cap$tablaliquidacioncon" TO TESORERIA;
GRANT SELECT ON "cap$tipocaptacion" TO TESORERIA;
GRANT SELECT ON "cap$tiposestado" TO TESORERIA;
GRANT SELECT ON "cap$tiposforma" TO TESORERIA;
GRANT SELECT ON "cap$tiposmovimiento" TO TESORERIA;
GRANT SELECT ON "cap$tiposplancontractual" TO TESORERIA;
GRANT SELECT ON "cap$tipostitulares" TO TESORERIA;
GRANT SELECT ON "col$categoria" TO TESORERIA;
GRANT SELECT ON "col$clasificacion" TO TESORERIA;
GRANT SELECT ON COL$CODIGOSPUC TO TESORERIA;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO TESORERIA;
GRANT SELECT ON "col$colgarantias" TO TESORERIA;
GRANT SELECT ON "col$colgarantiasreal" TO TESORERIA;
GRANT SELECT ON "col$colocacion" TO TESORERIA;
GRANT SELECT ON "col$colocacionabogado" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$controlcobro" TO TESORERIA;
GRANT SELECT ON "col$estado" TO TESORERIA;
GRANT SELECT ON "col$estadosolicitud" TO TESORERIA;
GRANT SELECT ON "col$extracto" TO TESORERIA;
GRANT SELECT ON "col$extractodet" TO TESORERIA;
GRANT SELECT ON "col$garantia" TO TESORERIA;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO TESORERIA;
GRANT SELECT ON "col$inversion" TO TESORERIA;
GRANT SELECT ON "col$lineas" TO TESORERIA;
GRANT SELECT ON "col$respaldo" TO TESORERIA;
GRANT SELECT ON "col$solicitud" TO TESORERIA;
GRANT SELECT ON "col$tablaliquidacion" TO TESORERIA;
GRANT SELECT ON "col$tasadtf" TO TESORERIA;
GRANT SELECT ON "col$tasafijas" TO TESORERIA;
GRANT SELECT ON "col$tasasvariables" TO TESORERIA;
GRANT SELECT ON "col$tiposcuota" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$AUXILIAR TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "con$captacion" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "con$centrocosto" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "con$colocacion" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON CON$COMPROBANTE TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "con$comprobantecsc" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$ERRORCIERRECOMP TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "con$informes" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$PUC TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$RETENCION TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$SALDOSCUENTA TO TESORERIA;
GRANT SELECT ON CON$SALDOSINICIALES TO TESORERIA;
GRANT SELECT ON CON$TIPOCOMPROBANTE TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$agencia" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$bancos" TO TESORERIA;
GRANT SELECT ON GEN$BANCOSCONNAL TO TESORERIA;
GRANT SELECT ON "gen$compdescripcion" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$consecutivos" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT, REFERENCES ON "gen$denominaciones" TO TESORERIA;
GRANT SELECT, UPDATE, INSERT ON "gen$direccion" TO TESORERIA;
GRANT SELECT ON "gen$empleado" TO TESORERIA;
GRANT SELECT ON "gen$minimos" TO TESORERIA;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO TESORERIA;
GRANT SELECT ON "gen$permisos" TO TESORERIA;
GRANT SELECT, UPDATE, INSERT, REFERENCES ON "gen$persona" TO TESORERIA;
GRANT SELECT ON "gen$plantillaobs" TO TESORERIA;
GRANT SELECT, UPDATE, INSERT ON "gen$referencias" TO TESORERIA;
GRANT SELECT ON "gen$tiposciiu" TO TESORERIA;
GRANT SELECT ON "gen$tiposclaseciiu" TO TESORERIA;
GRANT SELECT ON "gen$tiposdireccion" TO TESORERIA;
GRANT SELECT ON "gen$tiposestadocivil" TO TESORERIA;
GRANT SELECT ON "gen$tiposestadopersona" TO TESORERIA;
GRANT SELECT ON "gen$tiposidentificacion" TO TESORERIA;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO TESORERIA;
GRANT SELECT ON "gen$tiposparentesco" TO TESORERIA;
GRANT SELECT ON "gen$tipospersona" TO TESORERIA;
GRANT SELECT ON "gen$tiposreferencia" TO TESORERIA;
GRANT SELECT ON "gen$tiposrelacion" TO TESORERIA;
GRANT SELECT ON "gen$valorretefuente" TO TESORERIA;
GRANT SELECT ON "sipla$sdn" TO TESORERIA;
GRANT SELECT, UPDATE, DELETE, INSERT ON "tes$cheques" TO TESORERIA;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO TESORERIA;
GRANT EXECUTE ON PROCEDURE CAJ_SALDOACTUAL TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0001 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0002 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0003 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0004 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0005 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0006 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0007 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_COL_0002 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE P_GEN_0001 TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SALDO_MOVICOL TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SALDO_MOVIMIENTO TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO TESORERIA;
GRANT EXECUTE ON PROCEDURE "SP_GEN_""col$tasafijas""_ID" TO TESORERIA;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO TESORERIA;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO TESORERIA;
GRANT SELECT ON RDB$CHARACTER_SETS TO VISADOR;
GRANT SELECT ON RDB$CHECK_CONSTRAINTS TO VISADOR;
GRANT SELECT ON RDB$COLLATIONS TO VISADOR;
GRANT SELECT ON RDB$DATABASE TO VISADOR;
GRANT SELECT ON RDB$DEPENDENCIES TO VISADOR;
GRANT SELECT ON RDB$EXCEPTIONS TO VISADOR;
GRANT SELECT ON RDB$FIELDS TO VISADOR;
GRANT SELECT ON RDB$FIELD_DIMENSIONS TO VISADOR;
GRANT SELECT ON RDB$FILES TO VISADOR;
GRANT SELECT ON RDB$FILTERS TO VISADOR;
GRANT SELECT ON RDB$FORMATS TO VISADOR;
GRANT SELECT ON RDB$FUNCTIONS TO VISADOR;
GRANT SELECT ON RDB$FUNCTION_ARGUMENTS TO VISADOR;
GRANT SELECT ON RDB$GENERATORS TO VISADOR;
GRANT SELECT ON RDB$INDEX_SEGMENTS TO VISADOR;
GRANT SELECT ON RDB$INDICES TO VISADOR;
GRANT SELECT ON RDB$LOG_FILES TO VISADOR;
GRANT SELECT ON RDB$PAGES TO VISADOR;
GRANT SELECT ON RDB$PROCEDURES TO VISADOR;
GRANT SELECT ON RDB$PROCEDURE_PARAMETERS TO VISADOR;
GRANT SELECT ON RDB$REF_CONSTRAINTS TO VISADOR;
GRANT SELECT ON RDB$RELATIONS TO VISADOR;
GRANT SELECT ON RDB$RELATION_CONSTRAINTS TO VISADOR;
GRANT SELECT ON RDB$RELATION_FIELDS TO VISADOR;
GRANT SELECT ON RDB$ROLES TO VISADOR;
GRANT SELECT ON RDB$SECURITY_CLASSES TO VISADOR;
GRANT SELECT ON RDB$TRANSACTIONS TO VISADOR;
GRANT SELECT ON RDB$TRIGGERS TO VISADOR;
GRANT SELECT ON RDB$TRIGGER_MESSAGES TO VISADOR;
GRANT SELECT ON RDB$TYPES TO VISADOR;
GRANT SELECT ON RDB$USER_PRIVILEGES TO VISADOR;
GRANT SELECT ON RDB$VIEW_RELATIONS TO VISADOR;
GRANT SELECT ON CAJ$CAJAS TO VISADOR;
GRANT SELECT ON "caj$cierres" TO VISADOR;
GRANT SELECT ON "caj$movimiento" TO VISADOR;
GRANT SELECT ON "caj$movimientocol" TO VISADOR;
GRANT SELECT ON "cap$canje" TO VISADOR;
GRANT SELECT, INSERT ON "cap$extracto" TO VISADOR;
GRANT SELECT ON "cap$maestro" TO VISADOR;
GRANT SELECT ON "cap$maestroautorizado" TO VISADOR;
GRANT SELECT ON "cap$maestrobeneficiario" TO VISADOR;
GRANT SELECT ON "cap$maestrosaldo" TO VISADOR;
GRANT SELECT ON "cap$maestrosaldoinicial" TO VISADOR;
GRANT SELECT, UPDATE ON "cap$maestrosaldosmes" TO VISADOR;
GRANT SELECT ON "cap$maestrotitular" TO VISADOR;
GRANT SELECT ON "cap$obsestado" TO VISADOR;
GRANT SELECT, REFERENCES ON "cap$tablaliquidacion" TO VISADOR;
GRANT SELECT ON "cap$tablaliquidacioncon" TO VISADOR;
GRANT SELECT ON "cap$tipocaptacion" TO VISADOR;
GRANT SELECT ON "cap$tiposestado" TO VISADOR;
GRANT SELECT ON "cap$tiposforma" TO VISADOR;
GRANT SELECT ON "cap$tiposmovimiento" TO VISADOR;
GRANT SELECT ON "cap$tiposplancontractual" TO VISADOR;
GRANT SELECT ON "cap$tipostitulares" TO VISADOR;
GRANT SELECT ON "col$categoria" TO VISADOR;
GRANT SELECT ON "col$causaciones" TO VISADOR;
GRANT SELECT ON "col$clasificacion" TO VISADOR;
GRANT SELECT ON COL$CODIGOSPUC TO VISADOR;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO VISADOR;
GRANT SELECT, DELETE ON "col$colgarantias" TO VISADOR;
GRANT SELECT, DELETE ON "col$colgarantiasreal" TO VISADOR;
GRANT SELECT, UPDATE, DELETE ON "col$colocacion" TO VISADOR;
GRANT SELECT ON "col$colocacionabogado" TO VISADOR;
GRANT SELECT, DELETE ON "col$concol" TO VISADOR;
GRANT SELECT, UPDATE, DELETE, INSERT ON "col$controlcobro" TO VISADOR;
GRANT SELECT ON "col$costas" TO VISADOR;
GRANT SELECT ON "col$enteaprobador" TO VISADOR;
GRANT SELECT ON "col$estado" TO VISADOR;
GRANT SELECT ON "col$estadosolicitud" TO VISADOR;
GRANT SELECT, DELETE ON "col$extracto" TO VISADOR;
GRANT SELECT ON "col$extractodet" TO VISADOR;
GRANT SELECT ON "col$garantia" TO VISADOR;
GRANT SELECT, DELETE, INSERT ON "col$informemora" TO VISADOR;
GRANT SELECT ON "col$inversion" TO VISADOR;
GRANT SELECT ON "col$lineas" TO VISADOR;
GRANT SELECT ON "col$respaldo" TO VISADOR;
GRANT SELECT ON "col$solicitud" TO VISADOR;
GRANT SELECT, DELETE ON "col$tablaliquidacion" TO VISADOR;
GRANT SELECT ON "col$tasafijas" TO VISADOR;
GRANT SELECT ON "col$tasasvariables" TO VISADOR;
GRANT SELECT ON "col$tasavariables" TO VISADOR;
GRANT SELECT ON "col$tiposcuota" TO VISADOR;
GRANT SELECT, INSERT ON CON$AUXILIAR TO VISADOR;
GRANT SELECT ON "con$centrocosto" TO VISADOR;
GRANT SELECT, UPDATE, INSERT ON CON$COMPROBANTE TO VISADOR;
GRANT SELECT ON CON$PUC TO VISADOR;
GRANT SELECT ON CON$SALDOSINICIALES TO VISADOR;
GRANT SELECT ON "gen$agencia" TO VISADOR;
GRANT SELECT, UPDATE ON "gen$consecutivos" TO VISADOR;
GRANT SELECT ON "gen$direccion" TO VISADOR;
GRANT SELECT ON "gen$empleado" TO VISADOR;
GRANT SELECT, INSERT, REFERENCES ON "gen$observaciones" TO VISADOR;
GRANT SELECT ON "gen$permisos" TO VISADOR;
GRANT SELECT ON "gen$persona" TO VISADOR;
GRANT SELECT ON "gen$plantillaobs" TO VISADOR;
GRANT SELECT ON "gen$referencias" TO VISADOR;
GRANT SELECT ON "gen$tiposciiu" TO VISADOR;
GRANT SELECT ON "gen$tiposclaseciiu" TO VISADOR;
GRANT SELECT ON "gen$tiposdireccion" TO VISADOR;
GRANT SELECT ON "gen$tiposestadocivil" TO VISADOR;
GRANT SELECT ON "gen$tiposestadopersona" TO VISADOR;
GRANT SELECT ON "gen$tiposidentificacion" TO VISADOR;
GRANT SELECT, REFERENCES ON "gen$tiposinteres" TO VISADOR;
GRANT SELECT ON "gen$tiposparentesco" TO VISADOR;
GRANT SELECT ON "gen$tipospersona" TO VISADOR;
GRANT SELECT ON "gen$tiposreferencia" TO VISADOR;
GRANT SELECT ON "gen$tiposrelacion" TO VISADOR;
GRANT SELECT ON "gen$valorretefuente" TO VISADOR;
GRANT SELECT ON "sipla$sdn" TO VISADOR;
GRANT SELECT, UPDATE, DELETE, INSERT ON "sipla$tempoae" TO VISADOR;
GRANT EXECUTE ON PROCEDURE BALANCE_CONSOLIDADO TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0000T TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0008 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0008_JUD TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0009 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0010 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0011 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0011N TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0012 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0013 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0014 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0016 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0019 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0020 TO VISADOR;
GRANT EXECUTE ON PROCEDURE P_CAP_0021 TO VISADOR;
GRANT EXECUTE ON PROCEDURE SALDOS_CUENTAS TO VISADOR;
GRANT EXECUTE ON PROCEDURE SALDO_ACTUAL TO VISADOR;
GRANT EXECUTE ON PROCEDURE SALDO_DISPONIBLE TO VISADOR;
GRANT EXECUTE ON PROCEDURE SALDO_MINIMO TO VISADOR;
GRANT EXECUTE ON PROCEDURE SALDO_MOVICOL TO VISADOR;
GRANT EXECUTE ON PROCEDURE SALDO_MOVIMIENTO TO VISADOR;
GRANT EXECUTE ON PROCEDURE SP_FECHAHORA_ACTUAL TO VISADOR;
GRANT EXECUTE ON PROCEDURE SP_FECHA_ACTUAL TO VISADOR;
GRANT EXECUTE ON PROCEDURE SP_HORA_ACTUAL TO VISADOR;
GRANT EXECUTE ON PROCEDURE VALOR_CONSOLIDADO TO VISADOR;
GRANT CAJAS TO VPACHECO;
GRANT CAPTACION TO VPACHECO;
GRANT CARTERA TO WBARBOSA;
GRANT GERENCIA TO WBARBOSA;
GRANT INSERT ON "cap$extracto" TO WURIBE;
GRANT SELECT ON COL$CODIGOSPUC TO WURIBE;
GRANT SELECT ON COL$CODIGOSPUCBASICOS TO WURIBE;
GRANT SELECT ON "col$colgarantias" TO WURIBE;
GRANT SELECT ON "col$colgarantiasreal" TO WURIBE;
GRANT SELECT, UPDATE, INSERT ON "col$colocacion" TO WURIBE;
GRANT SELECT ON "col$concol" TO WURIBE;
GRANT SELECT ON "col$controlcobro" TO WURIBE;
GRANT SELECT ON "col$costas" TO WURIBE;
GRANT SELECT ON "col$descuentos" TO WURIBE;
GRANT SELECT ON "col$enteaprobador" TO WURIBE;
GRANT SELECT, UPDATE, INSERT ON "col$extracto" TO WURIBE;
GRANT SELECT, UPDATE, INSERT ON "col$extractodet" TO WURIBE;
GRANT SELECT ON "col$garantia" TO WURIBE;
GRANT SELECT ON "col$inversion" TO WURIBE;
GRANT SELECT ON "col$lineas" TO WURIBE;
GRANT SELECT, UPDATE, INSERT ON "col$tablaliquidacion" TO WURIBE;
GRANT SELECT, UPDATE, INSERT ON "col$tablaliquidaciontmp" TO WURIBE;
GRANT SELECT ON "col$tasadtf" TO WURIBE;
GRANT SELECT ON "col$tasafijas" TO WURIBE;
GRANT SELECT ON "col$tiposcuota" TO WURIBE;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$AUXILIAR TO WURIBE;
GRANT SELECT, UPDATE, DELETE, INSERT ON CON$COMPROBANTE TO WURIBE;
GRANT SELECT ON CON$PUC TO WURIBE;
GRANT SELECT ON CON$TIPOCOMPROBANTE TO WURIBE;
GRANT SELECT ON "gen$agencia" TO WURIBE;
GRANT SELECT, UPDATE ON "gen$consecutivos" TO WURIBE;
GRANT SELECT ON "gen$empleado" TO WURIBE;
GRANT SELECT ON "gen$persona" TO WURIBE;
